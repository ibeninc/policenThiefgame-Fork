{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ILOOT",
          "name": "_loot",
          "type": "address"
        },
        {
          "internalType": "contract ITraits",
          "name": "_traits",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxTokens",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_MINT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_TOKENS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINT_PRICE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAID_TOKENS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bank",
      "outputs": [
        {
          "internalType": "contract IBank",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "changePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "existingCombinations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPaidTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getTokenTraits",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isThief",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "uniform",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "hair",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "eyes",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "facialHair",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "headgear",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "neckGear",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "accessory",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "alphaIndex",
              "type": "uint8"
            }
          ],
          "internalType": "struct IPoliceAndThief.ThiefPolice",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "inWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isStakingActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "loot",
      "outputs": [
        {
          "internalType": "contract ILOOT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "stake",
          "type": "bool"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mintCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minted",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintedWithWhitelist",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "onlyWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "randomSource",
      "outputs": [
        {
          "internalType": "contract ISeed",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rarities",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bank",
          "type": "address"
        }
      ],
      "name": "setBank",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_paidTokens",
          "type": "uint256"
        }
      ],
      "name": "setPaidTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_paused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISeed",
          "name": "_seed",
          "type": "address"
        }
      ],
      "name": "setRandomSource",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        }
      ],
      "name": "setWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenTraits",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isThief",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "uniform",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "hair",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "eyes",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "facialHair",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "headgear",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "neckGear",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "accessory",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "alphaIndex",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "traits",
      "outputs": [
        {
          "internalType": "contract ITraits",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelistLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "contracts/IERC721.sol",
    "12": "contracts/IERC721Enumerable.sol",
    "13": "contracts/IERC721Metadata.sol",
    "15": "contracts/ILOOT.sol",
    "16": "contracts/IPoliceAndThief.sol",
    "17": "contracts/ISeed.sol",
    "18": "contracts/ITraits.sol",
    "2": "contracts/Context.sol",
    "20": "contracts/Ownable.sol",
    "21": "contracts/Pauseable.sol",
    "22": "contracts/PoliceAndThief.sol",
    "3": "contracts/ERC165.sol",
    "5": "contracts/ERC721.sol",
    "6": "contracts/ERC721Enumerable.sol",
    "7": "contracts/IBank.sol",
    "8": "contracts/IERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/PoliceAndThief.sol",
    "exportedSymbols": {
      "Address": [
        4774
      ],
      "Context": [
        3101
      ],
      "ERC165": [
        4798
      ],
      "ERC721": [
        4446
      ],
      "ERC721Enumerable": [
        3439
      ],
      "IBank": [
        3457
      ],
      "IERC165": [
        5156
      ],
      "IERC721": [
        4914
      ],
      "IERC721Enumerable": [
        4477
      ],
      "IERC721Metadata": [
        4941
      ],
      "IERC721Receiver": [
        1233
      ],
      "ILOOT": [
        3467
      ],
      "IPoliceAndThief": [
        3507
      ],
      "ISeed": [
        3522
      ],
      "ITraits": [
        3541
      ],
      "Ownable": [
        3079
      ],
      "Pauseable": [
        1420
      ],
      "PoliceAndThief": [
        2444
      ],
      "Strings": [
        5144
      ]
    },
    "id": 2445,
    "license": "MIT LICENSE",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1422,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "41:23:22"
      },
      {
        "absolutePath": "contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 1423,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2445,
        "sourceUnit": 3080,
        "src": "66:23:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Pauseable.sol",
        "file": "./Pauseable.sol",
        "id": 1424,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2445,
        "sourceUnit": 1421,
        "src": "90:25:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 1425,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2445,
        "sourceUnit": 3440,
        "src": "116:32:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/IPoliceAndThief.sol",
        "file": "./IPoliceAndThief.sol",
        "id": 1426,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2445,
        "sourceUnit": 3508,
        "src": "149:31:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/IBank.sol",
        "file": "./IBank.sol",
        "id": 1427,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2445,
        "sourceUnit": 3458,
        "src": "181:21:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ITraits.sol",
        "file": "./ITraits.sol",
        "id": 1428,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2445,
        "sourceUnit": 3542,
        "src": "203:23:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ILOOT.sol",
        "file": "./ILOOT.sol",
        "id": 1429,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2445,
        "sourceUnit": 3468,
        "src": "227:21:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Pauseable.sol",
        "file": "./Pauseable.sol",
        "id": 1430,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2445,
        "sourceUnit": 1421,
        "src": "249:25:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ISeed.sol",
        "file": "./ISeed.sol",
        "id": 1431,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2445,
        "sourceUnit": 3523,
        "src": "275:21:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1432,
              "name": "IPoliceAndThief",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3507,
              "src": "329:15:22"
            },
            "id": 1433,
            "nodeType": "InheritanceSpecifier",
            "src": "329:15:22"
          },
          {
            "baseName": {
              "id": 1434,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3439,
              "src": "350:16:22"
            },
            "id": 1435,
            "nodeType": "InheritanceSpecifier",
            "src": "350:16:22"
          },
          {
            "baseName": {
              "id": 1436,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3079,
              "src": "372:7:22"
            },
            "id": 1437,
            "nodeType": "InheritanceSpecifier",
            "src": "372:7:22"
          },
          {
            "baseName": {
              "id": 1438,
              "name": "Pauseable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1420,
              "src": "385:9:22"
            },
            "id": 1439,
            "nodeType": "InheritanceSpecifier",
            "src": "385:9:22"
          }
        ],
        "canonicalName": "PoliceAndThief",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2444,
        "linearizedBaseContracts": [
          2444,
          1420,
          3079,
          3439,
          4477,
          4446,
          4941,
          4914,
          4798,
          5156,
          3101,
          3507
        ],
        "name": "PoliceAndThief",
        "nameLocation": "307:14:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c002d23d",
            "id": 1442,
            "mutability": "mutable",
            "name": "MINT_PRICE",
            "nameLocation": "434:10:22",
            "nodeType": "VariableDeclaration",
            "scope": 2444,
            "src": "419:37:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1440,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "419:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "312e37",
              "id": 1441,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "447:9:22",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1700000000000000000_by_1",
                "typeString": "int_const 1700000000000000000"
              },
              "value": "1.7"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f0292a03",
            "id": 1445,
            "mutability": "mutable",
            "name": "MAX_MINT",
            "nameLocation": "477:8:22",
            "nodeType": "VariableDeclaration",
            "scope": 2444,
            "src": "462:28:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1443,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "462:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3330",
              "id": 1444,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "488:2:22",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_30_by_1",
                "typeString": "int_const 30"
              },
              "value": "30"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f47c84c5",
            "id": 1447,
            "mutability": "immutable",
            "name": "MAX_TOKENS",
            "nameLocation": "590:10:22",
            "nodeType": "VariableDeclaration",
            "scope": 2444,
            "src": "565:35:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1446,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "565:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c084f540",
            "id": 1449,
            "mutability": "mutable",
            "name": "PAID_TOKENS",
            "nameLocation": "694:11:22",
            "nodeType": "VariableDeclaration",
            "scope": 2444,
            "src": "679:26:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1448,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "679:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4f02c420",
            "id": 1451,
            "mutability": "mutable",
            "name": "minted",
            "nameLocation": "773:6:22",
            "nodeType": "VariableDeclaration",
            "scope": 2444,
            "src": "759:20:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 1450,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "759:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e05c57bf",
            "id": 1456,
            "mutability": "mutable",
            "name": "tokenTraits",
            "nameLocation": "895:11:22",
            "nodeType": "VariableDeclaration",
            "scope": 2444,
            "src": "856:50:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ThiefPolice_$3488_storage_$",
              "typeString": "mapping(uint256 => struct IPoliceAndThief.ThiefPolice)"
            },
            "typeName": {
              "id": 1455,
              "keyType": {
                "id": 1452,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "864:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "856:31:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ThiefPolice_$3488_storage_$",
                "typeString": "mapping(uint256 => struct IPoliceAndThief.ThiefPolice)"
              },
              "valueType": {
                "id": 1454,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1453,
                  "name": "ThiefPolice",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3488,
                  "src": "875:11:22"
                },
                "referencedDeclaration": 3488,
                "src": "875:11:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ThiefPolice_$3488_storage_ptr",
                  "typeString": "struct IPoliceAndThief.ThiefPolice"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a1b8f374",
            "id": 1460,
            "mutability": "mutable",
            "name": "existingCombinations",
            "nameLocation": "1068:20:22",
            "nodeType": "VariableDeclaration",
            "scope": 2444,
            "src": "1033:55:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1459,
              "keyType": {
                "id": 1457,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1041:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1033:27:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1458,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1052:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "17b8e1cf",
            "id": 1464,
            "mutability": "mutable",
            "name": "rarities",
            "nameLocation": "1237:8:22",
            "nodeType": "VariableDeclaration",
            "scope": 2444,
            "src": "1220:25:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint8_$18_storage",
              "typeString": "uint8[18]"
            },
            "typeName": {
              "baseType": {
                "id": 1461,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1220:5:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "id": 1463,
              "length": {
                "hexValue": "3138",
                "id": 1462,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1226:2:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              },
              "nodeType": "ArrayTypeName",
              "src": "1220:9:22",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint8_$18_storage_ptr",
                "typeString": "uint8[18]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "76cdb03b",
            "id": 1467,
            "mutability": "mutable",
            "name": "bank",
            "nameLocation": "1405:4:22",
            "nodeType": "VariableDeclaration",
            "scope": 2444,
            "src": "1392:17:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IBank_$3457",
              "typeString": "contract IBank"
            },
            "typeName": {
              "id": 1466,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1465,
                "name": "IBank",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3457,
                "src": "1392:5:22"
              },
              "referencedDeclaration": 3457,
              "src": "1392:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBank_$3457",
                "typeString": "contract IBank"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9b7b2ab0",
            "id": 1470,
            "mutability": "mutable",
            "name": "loot",
            "nameLocation": "1474:4:22",
            "nodeType": "VariableDeclaration",
            "scope": 2444,
            "src": "1461:17:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILOOT_$3467",
              "typeString": "contract ILOOT"
            },
            "typeName": {
              "id": 1469,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1468,
                "name": "ILOOT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3467,
                "src": "1461:5:22"
              },
              "referencedDeclaration": 3467,
              "src": "1461:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILOOT_$3467",
                "typeString": "contract ILOOT"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e1fc334f",
            "id": 1473,
            "mutability": "mutable",
            "name": "traits",
            "nameLocation": "1526:6:22",
            "nodeType": "VariableDeclaration",
            "scope": 2444,
            "src": "1511:21:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ITraits_$3541",
              "typeString": "contract ITraits"
            },
            "typeName": {
              "id": 1472,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1471,
                "name": "ITraits",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3541,
                "src": "1511:7:22"
              },
              "referencedDeclaration": 3541,
              "src": "1511:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITraits_$3541",
                "typeString": "contract ITraits"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c89b766",
            "id": 1476,
            "mutability": "mutable",
            "name": "randomSource",
            "nameLocation": "1552:12:22",
            "nodeType": "VariableDeclaration",
            "scope": 2444,
            "src": "1539:25:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISeed_$3522",
              "typeString": "contract ISeed"
            },
            "typeName": {
              "id": 1475,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1474,
                "name": "ISeed",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3522,
                "src": "1539:5:22"
              },
              "referencedDeclaration": 3522,
              "src": "1539:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISeed_$3522",
                "typeString": "contract ISeed"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1479,
            "mutability": "mutable",
            "name": "_reentrant",
            "nameLocation": "1584:10:22",
            "nodeType": "VariableDeclaration",
            "scope": 2444,
            "src": "1571:31:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1477,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1571:4:22",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 1478,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1597:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "e2aafa21",
            "id": 1483,
            "mutability": "mutable",
            "name": "inWhitelist",
            "nameLocation": "1641:11:22",
            "nodeType": "VariableDeclaration",
            "scope": 2444,
            "src": "1609:43:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1482,
              "keyType": {
                "id": 1480,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1617:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1609:24:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1481,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1628:4:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a88e0996",
            "id": 1486,
            "mutability": "mutable",
            "name": "onlyWhitelist",
            "nameLocation": "1671:13:22",
            "nodeType": "VariableDeclaration",
            "scope": 2444,
            "src": "1659:32:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1484,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1659:4:22",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 1485,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1687:4:22",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a6ac4b35",
            "id": 1489,
            "mutability": "mutable",
            "name": "stakingActive",
            "nameLocation": "1709:13:22",
            "nodeType": "VariableDeclaration",
            "scope": 2444,
            "src": "1697:33:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1487,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1697:4:22",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 1488,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1725:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "302150e5",
            "id": 1492,
            "mutability": "mutable",
            "name": "whitelistLimit",
            "nameLocation": "1752:14:22",
            "nodeType": "VariableDeclaration",
            "scope": 2444,
            "src": "1737:36:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1490,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1737:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33303030",
              "id": 1491,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1769:4:22",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000_by_1",
                "typeString": "int_const 3000"
              },
              "value": "3000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "712d2cc7",
            "id": 1495,
            "mutability": "mutable",
            "name": "mintedWithWhitelist",
            "nameLocation": "1794:19:22",
            "nodeType": "VariableDeclaration",
            "scope": 2444,
            "src": "1779:38:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1493,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1779:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1494,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1816:1:22",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1512,
              "nodeType": "Block",
              "src": "1848:120:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1866:11:22",
                        "subExpression": {
                          "id": 1498,
                          "name": "_reentrant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1479,
                          "src": "1867:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f207265656e7472616e6379",
                        "id": 1500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1879:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36eebddbf802e1cdcddad2b477585a755cd53423db8d0d8f4151b4fa07952290",
                          "typeString": "literal_string \"No reentrancy\""
                        },
                        "value": "No reentrancy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36eebddbf802e1cdcddad2b477585a755cd53423db8d0d8f4151b4fa07952290",
                          "typeString": "literal_string \"No reentrancy\""
                        }
                      ],
                      "id": 1497,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1858:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1858:37:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1502,
                  "nodeType": "ExpressionStatement",
                  "src": "1858:37:22"
                },
                {
                  "expression": {
                    "id": 1505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1503,
                      "name": "_reentrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1479,
                      "src": "1905:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1918:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1905:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1506,
                  "nodeType": "ExpressionStatement",
                  "src": "1905:17:22"
                },
                {
                  "id": 1507,
                  "nodeType": "PlaceholderStatement",
                  "src": "1932:1:22"
                },
                {
                  "expression": {
                    "id": 1510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1508,
                      "name": "_reentrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1479,
                      "src": "1943:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1956:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1943:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1511,
                  "nodeType": "ExpressionStatement",
                  "src": "1943:18:22"
                }
              ]
            },
            "id": 1513,
            "name": "nonReentrant",
            "nameLocation": "1833:12:22",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1845:2:22"
            },
            "src": "1824:144:22",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1547,
              "nodeType": "Block",
              "src": "2160:127:22",
              "statements": [
                {
                  "expression": {
                    "id": 1531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1529,
                      "name": "loot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1470,
                      "src": "2170:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILOOT_$3467",
                        "typeString": "contract ILOOT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1530,
                      "name": "_loot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1517,
                      "src": "2177:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILOOT_$3467",
                        "typeString": "contract ILOOT"
                      }
                    },
                    "src": "2170:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILOOT_$3467",
                      "typeString": "contract ILOOT"
                    }
                  },
                  "id": 1532,
                  "nodeType": "ExpressionStatement",
                  "src": "2170:12:22"
                },
                {
                  "expression": {
                    "id": 1535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1533,
                      "name": "traits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1473,
                      "src": "2192:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITraits_$3541",
                        "typeString": "contract ITraits"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1534,
                      "name": "_traits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1520,
                      "src": "2201:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITraits_$3541",
                        "typeString": "contract ITraits"
                      }
                    },
                    "src": "2192:16:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITraits_$3541",
                      "typeString": "contract ITraits"
                    }
                  },
                  "id": 1536,
                  "nodeType": "ExpressionStatement",
                  "src": "2192:16:22"
                },
                {
                  "expression": {
                    "id": 1539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1537,
                      "name": "MAX_TOKENS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1447,
                      "src": "2219:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1538,
                      "name": "_maxTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1522,
                      "src": "2232:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2219:23:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1540,
                  "nodeType": "ExpressionStatement",
                  "src": "2219:23:22"
                },
                {
                  "expression": {
                    "id": 1545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1541,
                      "name": "PAID_TOKENS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1449,
                      "src": "2252:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1542,
                        "name": "_maxTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1522,
                        "src": "2266:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 1543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2279:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "src": "2266:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2252:28:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1546,
                  "nodeType": "ExpressionStatement",
                  "src": "2252:28:22"
                }
              ]
            },
            "documentation": {
              "id": 1514,
              "nodeType": "StructuredDocumentation",
              "src": "1974:58:22",
              "text": " instantiates contract and rarity tables"
            },
            "id": 1548,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "506f6c6963652047616d65",
                    "id": 1525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2136:13:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3826575ec8cfcdd1197ae125d5cf23ebf7646a2d96b682a16d0fabce411dd457",
                      "typeString": "literal_string \"Police Game\""
                    },
                    "value": "Police Game"
                  },
                  {
                    "hexValue": "5747414d45",
                    "id": 1526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2151:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3545e405049a2a75fbee3d5bb9172ec8bda2c224eaa763d2ebbd712422ef0c13",
                      "typeString": "literal_string \"WGAME\""
                    },
                    "value": "WGAME"
                  }
                ],
                "id": 1527,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1524,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4446,
                  "src": "2129:6:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "2129:30:22"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1517,
                  "mutability": "mutable",
                  "name": "_loot",
                  "nameLocation": "2064:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1548,
                  "src": "2058:11:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILOOT_$3467",
                    "typeString": "contract ILOOT"
                  },
                  "typeName": {
                    "id": 1516,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1515,
                      "name": "ILOOT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3467,
                      "src": "2058:5:22"
                    },
                    "referencedDeclaration": 3467,
                    "src": "2058:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILOOT_$3467",
                      "typeString": "contract ILOOT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1520,
                  "mutability": "mutable",
                  "name": "_traits",
                  "nameLocation": "2087:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1548,
                  "src": "2079:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITraits_$3541",
                    "typeString": "contract ITraits"
                  },
                  "typeName": {
                    "id": 1519,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1518,
                      "name": "ITraits",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3541,
                      "src": "2079:7:22"
                    },
                    "referencedDeclaration": 3541,
                    "src": "2079:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITraits_$3541",
                      "typeString": "contract ITraits"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1522,
                  "mutability": "mutable",
                  "name": "_maxTokens",
                  "nameLocation": "2112:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1548,
                  "src": "2104:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2104:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2048:80:22"
            },
            "returnParameters": {
              "id": 1528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2160:0:22"
            },
            "scope": 2444,
            "src": "2037:250:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1560,
              "nodeType": "Block",
              "src": "2350:37:22",
              "statements": [
                {
                  "expression": {
                    "id": 1558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1556,
                      "name": "randomSource",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1476,
                      "src": "2360:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISeed_$3522",
                        "typeString": "contract ISeed"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1557,
                      "name": "_seed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1551,
                      "src": "2375:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISeed_$3522",
                        "typeString": "contract ISeed"
                      }
                    },
                    "src": "2360:20:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISeed_$3522",
                      "typeString": "contract ISeed"
                    }
                  },
                  "id": 1559,
                  "nodeType": "ExpressionStatement",
                  "src": "2360:20:22"
                }
              ]
            },
            "functionSelector": "d773826d",
            "id": 1561,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1554,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1553,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3036,
                  "src": "2340:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "2340:9:22"
              }
            ],
            "name": "setRandomSource",
            "nameLocation": "2302:15:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1551,
                  "mutability": "mutable",
                  "name": "_seed",
                  "nameLocation": "2324:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1561,
                  "src": "2318:11:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISeed_$3522",
                    "typeString": "contract ISeed"
                  },
                  "typeName": {
                    "id": 1550,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1549,
                      "name": "ISeed",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3522,
                      "src": "2318:5:22"
                    },
                    "referencedDeclaration": 3522,
                    "src": "2318:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISeed_$3522",
                      "typeString": "contract ISeed"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2317:13:22"
            },
            "returnParameters": {
              "id": 1555,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2350:0:22"
            },
            "scope": 2444,
            "src": "2293:94:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1831,
              "nodeType": "Block",
              "src": "2662:1870:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2680:6:22",
                          "subExpression": {
                            "id": 1574,
                            "name": "stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1566,
                            "src": "2681:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 1576,
                          "name": "stakingActive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1489,
                          "src": "2690:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2680:23:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67206e6f7420616374697661746564",
                        "id": 1578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2705:23:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_541bad5fcb7be80f9e60fd2e142dd8ba49b16f98c9edd6698b8d53841de40f4d",
                          "typeString": "literal_string \"Staking not activated\""
                        },
                        "value": "Staking not activated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_541bad5fcb7be80f9e60fd2e142dd8ba49b16f98c9edd6698b8d53841de40f4d",
                          "typeString": "literal_string \"Staking not activated\""
                        }
                      ],
                      "id": 1573,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2672:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2672:57:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1580,
                  "nodeType": "ExpressionStatement",
                  "src": "2672:57:22"
                },
                {
                  "condition": {
                    "id": 1581,
                    "name": "onlyWhitelist",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1486,
                    "src": "2744:13:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1591,
                  "nodeType": "IfStatement",
                  "src": "2740:95:22",
                  "trueBody": {
                    "id": 1590,
                    "nodeType": "Block",
                    "src": "2759:76:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1583,
                                "name": "inWhitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1483,
                                "src": "2781:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 1586,
                              "indexExpression": {
                                "expression": {
                                  "id": 1584,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2793:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2793:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2781:23:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f742077686974656c6973746564",
                              "id": 1587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2806:17:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
                                "typeString": "literal_string \"Not whitelisted\""
                              },
                              "value": "Not whitelisted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
                                "typeString": "literal_string \"Not whitelisted\""
                              }
                            ],
                            "id": 1582,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2773:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2773:51:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1589,
                        "nodeType": "ExpressionStatement",
                        "src": "2773:51:22"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1593,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "2853:2:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 1594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "2853:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1595,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3091,
                            "src": "2866:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2866:12:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2853:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920454f41",
                        "id": 1598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2880:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34db4db51712b904eff14e0d798b5cfced0ebf7fcecfd05d567e4ce1d1aa9861",
                          "typeString": "literal_string \"Only EOA\""
                        },
                        "value": "Only EOA"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_34db4db51712b904eff14e0d798b5cfced0ebf7fcecfd05d567e4ce1d1aa9861",
                          "typeString": "literal_string \"Only EOA\""
                        }
                      ],
                      "id": 1592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2845:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2845:46:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1600,
                  "nodeType": "ExpressionStatement",
                  "src": "2845:46:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1602,
                            "name": "minted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1451,
                            "src": "2909:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1603,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1564,
                            "src": "2918:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2909:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1605,
                          "name": "MAX_TOKENS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1447,
                          "src": "2928:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2909:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c20746f6b656e73206d696e746564",
                        "id": 1607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2940:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a400c07bb67a06c03f358edc1048982b27f79d13cec217cd075a5ae667872ec",
                          "typeString": "literal_string \"All tokens minted\""
                        },
                        "value": "All tokens minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a400c07bb67a06c03f358edc1048982b27f79d13cec217cd075a5ae667872ec",
                          "typeString": "literal_string \"All tokens minted\""
                        }
                      ],
                      "id": 1601,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2901:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2901:59:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1609,
                  "nodeType": "ExpressionStatement",
                  "src": "2901:59:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1611,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1564,
                            "src": "2978:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2987:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2978:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1614,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1564,
                            "src": "2992:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1615,
                            "name": "MAX_MINT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1445,
                            "src": "3002:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2992:18:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2978:32:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d696e7420616d6f756e74",
                        "id": 1618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3012:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d09ebb52078fc9feb81c9f713b49d0a566c8a41a31c620eb6bbd74a2ce3c24f3",
                          "typeString": "literal_string \"Invalid mint amount\""
                        },
                        "value": "Invalid mint amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d09ebb52078fc9feb81c9f713b49d0a566c8a41a31c620eb6bbd74a2ce3c24f3",
                          "typeString": "literal_string \"Invalid mint amount\""
                        }
                      ],
                      "id": 1610,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2970:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2970:64:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1620,
                  "nodeType": "ExpressionStatement",
                  "src": "2970:64:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1621,
                      "name": "minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1451,
                      "src": "3049:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1622,
                      "name": "PAID_TOKENS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1449,
                      "src": "3058:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3049:20:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1651,
                    "nodeType": "Block",
                    "src": "3303:48:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1645,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3325:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1646,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3325:9:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1647,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3338:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3325:14:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1644,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3317:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3317:23:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1650,
                        "nodeType": "ExpressionStatement",
                        "src": "3317:23:22"
                      }
                    ]
                  },
                  "id": 1652,
                  "nodeType": "IfStatement",
                  "src": "3045:306:22",
                  "trueBody": {
                    "id": 1643,
                    "nodeType": "Block",
                    "src": "3071:226:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1627,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1625,
                                  "name": "minted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1451,
                                  "src": "3110:6:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1626,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1564,
                                  "src": "3119:6:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3110:15:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1628,
                                "name": "PAID_TOKENS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1449,
                                "src": "3129:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3110:30:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416c6c20746f6b656e73206f6e2d73616c6520616c726561647920736f6c64",
                              "id": 1630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3158:33:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_601d33d42398f84213916f15ba847266832ca9e6bcd598a166a3c8f0f8cebc70",
                                "typeString": "literal_string \"All tokens on-sale already sold\""
                              },
                              "value": "All tokens on-sale already sold"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_601d33d42398f84213916f15ba847266832ca9e6bcd598a166a3c8f0f8cebc70",
                                "typeString": "literal_string \"All tokens on-sale already sold\""
                              }
                            ],
                            "id": 1624,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3085:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3085:120:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1632,
                        "nodeType": "ExpressionStatement",
                        "src": "3085:120:22"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1634,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1564,
                                  "src": "3227:6:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1635,
                                  "name": "MINT_PRICE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1442,
                                  "src": "3236:10:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3227:19:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1637,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3250:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1638,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3250:9:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3227:32:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964207061796d656e7420616d6f756e74",
                              "id": 1640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3261:24:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_31abbd0ed2b9e8faf5c1118eb5955eeb9201915fb1c187e92b72e48044438aaa",
                                "typeString": "literal_string \"Invalid payment amount\""
                              },
                              "value": "Invalid payment amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_31abbd0ed2b9e8faf5c1118eb5955eeb9201915fb1c187e92b72e48044438aaa",
                                "typeString": "literal_string \"Invalid payment amount\""
                              }
                            ],
                            "id": 1633,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3219:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3219:67:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1642,
                        "nodeType": "ExpressionStatement",
                        "src": "3219:67:22"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1654
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1654,
                      "mutability": "mutable",
                      "name": "totalLootCost",
                      "nameLocation": "3369:13:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 1831,
                      "src": "3361:21:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1653,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3361:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1656,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3385:1:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3361:25:22"
                },
                {
                  "assignments": [
                    1661
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1661,
                      "mutability": "mutable",
                      "name": "tokenIds",
                      "nameLocation": "3412:8:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 1831,
                      "src": "3396:24:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                        "typeString": "uint16[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1659,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "3396:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1660,
                        "nodeType": "ArrayTypeName",
                        "src": "3396:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1667,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1665,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1564,
                        "src": "3436:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3423:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint16_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint16[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1662,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "3427:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1663,
                        "nodeType": "ArrayTypeName",
                        "src": "3427:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      }
                    },
                    "id": 1666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3423:20:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3396:47:22"
                },
                {
                  "assignments": [
                    1672
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1672,
                      "mutability": "mutable",
                      "name": "owners",
                      "nameLocation": "3470:6:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 1831,
                      "src": "3453:23:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1670,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3453:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1671,
                        "nodeType": "ArrayTypeName",
                        "src": "3453:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1678,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1676,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1564,
                        "src": "3493:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3479:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1673,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3483:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1674,
                        "nodeType": "ArrayTypeName",
                        "src": "3483:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 1677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3479:21:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3453:47:22"
                },
                {
                  "assignments": [
                    1680
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1680,
                      "mutability": "mutable",
                      "name": "seed",
                      "nameLocation": "3518:4:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 1831,
                      "src": "3510:12:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1679,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3510:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1681,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3510:12:22"
                },
                {
                  "assignments": [
                    1683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1683,
                      "mutability": "mutable",
                      "name": "firstMinted",
                      "nameLocation": "3540:11:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 1831,
                      "src": "3532:19:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1682,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3532:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1685,
                  "initialValue": {
                    "id": 1684,
                    "name": "minted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1451,
                    "src": "3554:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3532:28:22"
                },
                {
                  "body": {
                    "id": 1768,
                    "nodeType": "Block",
                    "src": "3608:554:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 1697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "3622:8:22",
                          "subExpression": {
                            "id": 1696,
                            "name": "minted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1451,
                            "src": "3622:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1698,
                        "nodeType": "ExpressionStatement",
                        "src": "3622:8:22"
                      },
                      {
                        "expression": {
                          "id": 1703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1699,
                            "name": "seed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1680,
                            "src": "3644:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1701,
                                "name": "minted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1451,
                                "src": "3658:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              ],
                              "id": 1700,
                              "name": "random",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2283,
                              "src": "3651:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view returns (uint256)"
                              }
                            },
                            "id": 1702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3651:14:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3644:21:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1704,
                        "nodeType": "ExpressionStatement",
                        "src": "3644:21:22"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1708,
                                "name": "minted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1451,
                                "src": "3699:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "^",
                              "rightExpression": {
                                "id": 1709,
                                "name": "seed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1680,
                                "src": "3708:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3699:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1705,
                              "name": "randomSource",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1476,
                              "src": "3679:12:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISeed_$3522",
                                "typeString": "contract ISeed"
                              }
                            },
                            "id": 1707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "update",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3521,
                            "src": "3679:19:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) external returns (uint256)"
                            }
                          },
                          "id": 1711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3679:34:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1712,
                        "nodeType": "ExpressionStatement",
                        "src": "3679:34:22"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1714,
                              "name": "minted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1451,
                              "src": "3736:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "id": 1715,
                              "name": "seed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1680,
                              "src": "3744:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1713,
                            "name": "generate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1957,
                            "src": "3727:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_struct$_ThiefPolice_$3488_memory_ptr_$",
                              "typeString": "function (uint256,uint256) returns (struct IPoliceAndThief.ThiefPolice memory)"
                            }
                          },
                          "id": 1716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3727:22:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                            "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                          }
                        },
                        "id": 1717,
                        "nodeType": "ExpressionStatement",
                        "src": "3727:22:22"
                      },
                      {
                        "assignments": [
                          1719
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1719,
                            "mutability": "mutable",
                            "name": "recipient",
                            "nameLocation": "3771:9:22",
                            "nodeType": "VariableDeclaration",
                            "scope": 1768,
                            "src": "3763:17:22",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1718,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3763:7:22",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1723,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1721,
                              "name": "seed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1680,
                              "src": "3799:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1720,
                            "name": "selectRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2021,
                            "src": "3783:15:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3783:21:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3763:41:22"
                      },
                      {
                        "expression": {
                          "id": 1728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1724,
                            "name": "totalLootCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1654,
                            "src": "3818:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1726,
                                "name": "minted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1451,
                                "src": "3844:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              ],
                              "id": 1725,
                              "name": "mintCost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1871,
                              "src": "3835:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view returns (uint256)"
                              }
                            },
                            "id": 1727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3835:16:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3818:33:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1729,
                        "nodeType": "ExpressionStatement",
                        "src": "3818:33:22"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "3869:6:22",
                            "subExpression": {
                              "id": 1730,
                              "name": "stake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1566,
                              "src": "3870:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1732,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1719,
                              "src": "3879:9:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1733,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3091,
                                "src": "3892:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3892:12:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3879:25:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3869:35:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1759,
                          "nodeType": "Block",
                          "src": "3966:96:22",
                          "statements": [
                            {
                              "expression": {
                                "id": 1748,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1744,
                                    "name": "tokenIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1661,
                                    "src": "3984:8:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                                      "typeString": "uint16[] memory"
                                    }
                                  },
                                  "id": 1746,
                                  "indexExpression": {
                                    "id": 1745,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1687,
                                    "src": "3993:1:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3984:11:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1747,
                                  "name": "minted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1451,
                                  "src": "3998:6:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "3984:20:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 1749,
                              "nodeType": "ExpressionStatement",
                              "src": "3984:20:22"
                            },
                            {
                              "expression": {
                                "id": 1757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1750,
                                    "name": "owners",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1672,
                                    "src": "4022:6:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1752,
                                  "indexExpression": {
                                    "id": 1751,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1687,
                                    "src": "4029:1:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4022:9:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1755,
                                      "name": "bank",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1467,
                                      "src": "4042:4:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IBank_$3457",
                                        "typeString": "contract IBank"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IBank_$3457",
                                        "typeString": "contract IBank"
                                      }
                                    ],
                                    "id": 1754,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4034:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1753,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4034:7:22",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1756,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4034:13:22",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4022:25:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1758,
                              "nodeType": "ExpressionStatement",
                              "src": "4022:25:22"
                            }
                          ]
                        },
                        "id": 1760,
                        "nodeType": "IfStatement",
                        "src": "3865:197:22",
                        "trueBody": {
                          "id": 1743,
                          "nodeType": "Block",
                          "src": "3906:54:22",
                          "statements": [
                            {
                              "expression": {
                                "id": 1741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1737,
                                    "name": "owners",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1672,
                                    "src": "3924:6:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1739,
                                  "indexExpression": {
                                    "id": 1738,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1687,
                                    "src": "3931:1:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3924:9:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1740,
                                  "name": "recipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1719,
                                  "src": "3936:9:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3924:21:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1742,
                              "nodeType": "ExpressionStatement",
                              "src": "3924:21:22"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "id": 1761,
                          "name": "onlyWhitelist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1486,
                          "src": "4080:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1767,
                        "nodeType": "IfStatement",
                        "src": "4076:76:22",
                        "trueBody": {
                          "id": 1766,
                          "nodeType": "Block",
                          "src": "4095:57:22",
                          "statements": [
                            {
                              "expression": {
                                "id": 1764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1762,
                                  "name": "mintedWithWhitelist",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1495,
                                  "src": "4113:19:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1763,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4136:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "4113:24:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1765,
                              "nodeType": "ExpressionStatement",
                              "src": "4113:24:22"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1690,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1687,
                      "src": "3591:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1691,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1564,
                      "src": "3595:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3591:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1769,
                  "initializationExpression": {
                    "assignments": [
                      1687
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1687,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3584:1:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 1769,
                        "src": "3576:9:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1686,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3576:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1689,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3588:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3576:13:22"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3603:3:22",
                      "subExpression": {
                        "id": 1693,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1687,
                        "src": "3603:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1695,
                    "nodeType": "ExpressionStatement",
                    "src": "3603:3:22"
                  },
                  "nodeType": "ForStatement",
                  "src": "3571:591:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1770,
                      "name": "totalLootCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1654,
                      "src": "4176:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4192:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4176:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1781,
                  "nodeType": "IfStatement",
                  "src": "4172:61:22",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1776,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3091,
                            "src": "4205:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4205:12:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1778,
                          "name": "totalLootCost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1654,
                          "src": "4219:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1773,
                          "name": "loot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1470,
                          "src": "4195:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILOOT_$3467",
                            "typeString": "contract ILOOT"
                          }
                        },
                        "id": 1775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "burn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3466,
                        "src": "4195:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) external"
                        }
                      },
                      "id": 1779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4195:38:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1780,
                    "nodeType": "ExpressionStatement",
                    "src": "4195:38:22"
                  }
                },
                {
                  "body": {
                    "id": 1819,
                    "nodeType": "Block",
                    "src": "4288:168:22",
                    "statements": [
                      {
                        "assignments": [
                          1794
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1794,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "4310:2:22",
                            "nodeType": "VariableDeclaration",
                            "scope": 1819,
                            "src": "4302:10:22",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1793,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4302:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1800,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1795,
                              "name": "firstMinted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1683,
                              "src": "4315:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1796,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1783,
                              "src": "4329:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4315:15:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4333:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4315:19:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4302:32:22"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4352:6:22",
                            "subExpression": {
                              "id": 1801,
                              "name": "stake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1566,
                              "src": "4353:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 1803,
                                "name": "owners",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1672,
                                "src": "4362:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 1805,
                              "indexExpression": {
                                "id": 1804,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1783,
                                "src": "4369:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4362:9:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1806,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3091,
                                "src": "4375:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4375:12:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4362:25:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4352:35:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1818,
                        "nodeType": "IfStatement",
                        "src": "4348:98:22",
                        "trueBody": {
                          "id": 1817,
                          "nodeType": "Block",
                          "src": "4389:57:22",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1811,
                                      "name": "owners",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1672,
                                      "src": "4417:6:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 1813,
                                    "indexExpression": {
                                      "id": 1812,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1783,
                                      "src": "4424:1:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4417:9:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1814,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1794,
                                    "src": "4428:2:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1810,
                                  "name": "_safeMint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4155,
                                    4171
                                  ],
                                  "referencedDeclaration": 4155,
                                  "src": "4407:9:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 1815,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4407:24:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1816,
                              "nodeType": "ExpressionStatement",
                              "src": "4407:24:22"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1786,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1783,
                      "src": "4264:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1787,
                        "name": "owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1672,
                        "src": "4268:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4268:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4264:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1820,
                  "initializationExpression": {
                    "assignments": [
                      1783
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1783,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4257:1:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 1820,
                        "src": "4249:9:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1782,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4249:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1785,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4261:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4249:13:22"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4283:3:22",
                      "subExpression": {
                        "id": 1790,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1783,
                        "src": "4283:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1792,
                    "nodeType": "ExpressionStatement",
                    "src": "4283:3:22"
                  },
                  "nodeType": "ForStatement",
                  "src": "4244:212:22"
                },
                {
                  "condition": {
                    "id": 1821,
                    "name": "stake",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1566,
                    "src": "4469:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1830,
                  "nodeType": "IfStatement",
                  "src": "4465:60:22",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1825,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3091,
                            "src": "4502:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4502:12:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1827,
                          "name": "tokenIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1661,
                          "src": "4516:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                            "typeString": "uint16[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                            "typeString": "uint16[] memory"
                          }
                        ],
                        "expression": {
                          "id": 1822,
                          "name": "bank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1467,
                          "src": "4476:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBank_$3457",
                            "typeString": "contract IBank"
                          }
                        },
                        "id": 1824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addManyToBankAndPack",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3449,
                        "src": "4476:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_uint16_$dyn_memory_ptr_$returns$__$",
                          "typeString": "function (address,uint16[] memory) external"
                        }
                      },
                      "id": 1828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4476:49:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1829,
                    "nodeType": "ExpressionStatement",
                    "src": "4476:49:22"
                  }
                }
              ]
            },
            "documentation": {
              "id": 1562,
              "nodeType": "StructuredDocumentation",
              "src": "2414:121:22",
              "text": " mint a token - 90% Thief, 10% Polices\n The first 20% are free to claim, the remaining cost $LOOT"
            },
            "functionSelector": "67f68fac",
            "id": 1832,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1569,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1568,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1513,
                  "src": "2623:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "2623:12:22"
              },
              {
                "id": 1571,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1570,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1376,
                  "src": "2644:13:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "2644:13:22"
              }
            ],
            "name": "mint",
            "nameLocation": "2549:4:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1564,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2562:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1832,
                  "src": "2554:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2554:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1566,
                  "mutability": "mutable",
                  "name": "stake",
                  "nameLocation": "2575:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1832,
                  "src": "2570:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1565,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2570:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2553:28:22"
            },
            "returnParameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2662:0:22"
            },
            "scope": 2444,
            "src": "2540:1992:22",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1870,
              "nodeType": "Block",
              "src": "4870:211:22",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1840,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1835,
                      "src": "4884:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 1841,
                      "name": "PAID_TOKENS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1449,
                      "src": "4895:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4884:22:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1845,
                  "nodeType": "IfStatement",
                  "src": "4880:36:22",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 1843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4915:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 1839,
                    "id": 1844,
                    "nodeType": "Return",
                    "src": "4908:8:22"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1846,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1835,
                      "src": "4930:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1847,
                              "name": "MAX_TOKENS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1447,
                              "src": "4942:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 1848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4955:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "4942:14:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1850,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4941:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 1851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4960:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "src": "4941:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4930:31:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1856,
                  "nodeType": "IfStatement",
                  "src": "4926:55:22",
                  "trueBody": {
                    "expression": {
                      "hexValue": "3230303030",
                      "id": 1854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4970:11:22",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                        "typeString": "int_const 20000000000000000000000"
                      },
                      "value": "20000"
                    },
                    "functionReturnParameters": 1839,
                    "id": 1855,
                    "nodeType": "Return",
                    "src": "4963:18:22"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1857,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1835,
                      "src": "4995:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1858,
                              "name": "MAX_TOKENS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1447,
                              "src": "5007:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "34",
                              "id": 1859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5020:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "src": "5007:14:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1861,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5006:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 1862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5025:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "src": "5006:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4995:31:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1867,
                  "nodeType": "IfStatement",
                  "src": "4991:55:22",
                  "trueBody": {
                    "expression": {
                      "hexValue": "3430303030",
                      "id": 1865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5035:11:22",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_40000000000000000000000_by_1",
                        "typeString": "int_const 40000000000000000000000"
                      },
                      "value": "40000"
                    },
                    "functionReturnParameters": 1839,
                    "id": 1866,
                    "nodeType": "Return",
                    "src": "5028:18:22"
                  }
                },
                {
                  "expression": {
                    "hexValue": "3630303030",
                    "id": 1868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5063:11:22",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_60000000000000000000000_by_1",
                      "typeString": "int_const 60000000000000000000000"
                    },
                    "value": "60000"
                  },
                  "functionReturnParameters": 1839,
                  "id": 1869,
                  "nodeType": "Return",
                  "src": "5056:18:22"
                }
              ]
            },
            "documentation": {
              "id": 1833,
              "nodeType": "StructuredDocumentation",
              "src": "4538:262:22",
              "text": " the first 20% are paid in AVAX\n the next 20% are 20000 $LOOT\n the next 40% are 40000 $LOOT\n the final 20% are 80000 $LOOT\n @param tokenId the ID to check the cost of to mint\n @return the cost of the given token ID"
            },
            "functionSelector": "27de8f27",
            "id": 1871,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintCost",
            "nameLocation": "4814:8:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1835,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4831:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1871,
                  "src": "4823:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4823:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4822:17:22"
            },
            "returnParameters": {
              "id": 1839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1838,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1871,
                  "src": "4861:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4861:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4860:9:22"
            },
            "scope": 2444,
            "src": "4805:276:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4004
            ],
            "body": {
              "id": 1906,
              "nodeType": "Block",
              "src": "5219:339:22",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1883,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3091,
                        "src": "5321:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5321:12:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1887,
                          "name": "bank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1467,
                          "src": "5345:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBank_$3457",
                            "typeString": "contract IBank"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IBank_$3457",
                            "typeString": "contract IBank"
                          }
                        ],
                        "id": 1886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5337:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1885,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5337:7:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5337:13:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5321:29:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1899,
                  "nodeType": "IfStatement",
                  "src": "5317:196:22",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1892,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3091,
                                "src": "5408:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5408:12:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1894,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1877,
                              "src": "5422:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1891,
                            "name": "_isApprovedOrOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4140,
                            "src": "5389:18:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) view returns (bool)"
                            }
                          },
                          "id": 1895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5389:41:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                          "id": 1896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5448:51:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                            "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                          },
                          "value": "ERC721: transfer caller is not owner nor approved"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                            "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                          }
                        ],
                        "id": 1890,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "5364:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5364:149:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1898,
                    "nodeType": "ExpressionStatement",
                    "src": "5364:149:22"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1901,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1873,
                        "src": "5533:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1902,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1875,
                        "src": "5539:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1903,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1877,
                        "src": "5543:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1900,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4348,
                      "src": "5523:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5523:28:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1905,
                  "nodeType": "ExpressionStatement",
                  "src": "5523:28:22"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 1907,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1881,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1880,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1513,
                  "src": "5206:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "5206:12:22"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "5096:12:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1879,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5197:8:22"
            },
            "parameters": {
              "id": 1878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1873,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5126:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1907,
                  "src": "5118:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1872,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5118:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1875,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5148:2:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1907,
                  "src": "5140:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5140:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1877,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5168:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1907,
                  "src": "5160:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1876,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5160:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5108:73:22"
            },
            "returnParameters": {
              "id": 1882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5219:0:22"
            },
            "scope": 2444,
            "src": "5087:471:22",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1956,
              "nodeType": "Block",
              "src": "5987:276:22",
              "statements": [
                {
                  "expression": {
                    "id": 1922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1918,
                      "name": "t",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1916,
                      "src": "5997:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                        "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1920,
                          "name": "seed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1912,
                          "src": "6014:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1919,
                        "name": "selectTraits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2213,
                        "src": "6001:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_ThiefPolice_$3488_memory_ptr_$",
                          "typeString": "function (uint256) view returns (struct IPoliceAndThief.ThiefPolice memory)"
                        }
                      },
                      "id": 1921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6001:18:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                        "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                      }
                    },
                    "src": "5997:22:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                      "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                    }
                  },
                  "id": 1923,
                  "nodeType": "ExpressionStatement",
                  "src": "5997:22:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1924,
                        "name": "existingCombinations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1460,
                        "src": "6033:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1928,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1926,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1916,
                            "src": "6067:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                              "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                              "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                            }
                          ],
                          "id": 1925,
                          "name": "structToHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2250,
                          "src": "6054:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ThiefPolice_$3488_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (struct IPoliceAndThief.ThiefPolice memory) pure returns (uint256)"
                          }
                        },
                        "id": 1927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6054:15:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6033:37:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6074:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6033:42:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1948,
                  "nodeType": "IfStatement",
                  "src": "6029:180:22",
                  "trueBody": {
                    "id": 1947,
                    "nodeType": "Block",
                    "src": "6077:132:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 1935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1931,
                              "name": "tokenTraits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1456,
                              "src": "6091:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ThiefPolice_$3488_storage_$",
                                "typeString": "mapping(uint256 => struct IPoliceAndThief.ThiefPolice storage ref)"
                              }
                            },
                            "id": 1933,
                            "indexExpression": {
                              "id": 1932,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1910,
                              "src": "6103:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6091:20:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ThiefPolice_$3488_storage",
                              "typeString": "struct IPoliceAndThief.ThiefPolice storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1934,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1916,
                            "src": "6114:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                              "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                            }
                          },
                          "src": "6091:24:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ThiefPolice_$3488_storage",
                            "typeString": "struct IPoliceAndThief.ThiefPolice storage ref"
                          }
                        },
                        "id": 1936,
                        "nodeType": "ExpressionStatement",
                        "src": "6091:24:22"
                      },
                      {
                        "expression": {
                          "id": 1943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1937,
                              "name": "existingCombinations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1460,
                              "src": "6129:20:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1941,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 1939,
                                  "name": "t",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1916,
                                  "src": "6163:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                                    "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                                    "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                                  }
                                ],
                                "id": 1938,
                                "name": "structToHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2250,
                                "src": "6150:12:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_struct$_ThiefPolice_$3488_memory_ptr_$returns$_t_uint256_$",
                                  "typeString": "function (struct IPoliceAndThief.ThiefPolice memory) pure returns (uint256)"
                                }
                              },
                              "id": 1940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6150:15:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6129:37:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1942,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1910,
                            "src": "6169:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6129:47:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1944,
                        "nodeType": "ExpressionStatement",
                        "src": "6129:47:22"
                      },
                      {
                        "expression": {
                          "id": 1945,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1916,
                          "src": "6197:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                            "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                          }
                        },
                        "functionReturnParameters": 1917,
                        "id": 1946,
                        "nodeType": "Return",
                        "src": "6190:8:22"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1950,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1910,
                        "src": "6234:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1952,
                            "name": "seed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1912,
                            "src": "6250:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1951,
                          "name": "random",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2283,
                          "src": "6243:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view returns (uint256)"
                          }
                        },
                        "id": 1953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6243:12:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1949,
                      "name": "generate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1957,
                      "src": "6225:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_struct$_ThiefPolice_$3488_memory_ptr_$",
                        "typeString": "function (uint256,uint256) returns (struct IPoliceAndThief.ThiefPolice memory)"
                      }
                    },
                    "id": 1954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6225:31:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                      "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                    }
                  },
                  "functionReturnParameters": 1917,
                  "id": 1955,
                  "nodeType": "Return",
                  "src": "6218:38:22"
                }
              ]
            },
            "documentation": {
              "id": 1908,
              "nodeType": "StructuredDocumentation",
              "src": "5585:288:22",
              "text": " generates traits for a specific token, checking to make sure it's unique\n @param tokenId the id of the token to generate traits for\n @param seed a pseudorandom 256 bit number to derive traits from\n @return t - a struct of traits for the given token ID"
            },
            "id": 1957,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generate",
            "nameLocation": "5887:8:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1910,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5904:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1957,
                  "src": "5896:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5896:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1912,
                  "mutability": "mutable",
                  "name": "seed",
                  "nameLocation": "5921:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1957,
                  "src": "5913:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5913:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5895:31:22"
            },
            "returnParameters": {
              "id": 1917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1916,
                  "mutability": "mutable",
                  "name": "t",
                  "nameLocation": "5980:1:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1957,
                  "src": "5961:20:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                    "typeString": "struct IPoliceAndThief.ThiefPolice"
                  },
                  "typeName": {
                    "id": 1915,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1914,
                      "name": "ThiefPolice",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3488,
                      "src": "5961:11:22"
                    },
                    "referencedDeclaration": 3488,
                    "src": "5961:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ThiefPolice_$3488_storage_ptr",
                      "typeString": "struct IPoliceAndThief.ThiefPolice"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5960:22:22"
            },
            "scope": 2444,
            "src": "5878:385:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1973,
              "nodeType": "Block",
              "src": "6795:59:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1969,
                        "name": "seed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1960,
                        "src": "6831:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "id": 1970,
                        "name": "traitType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1962,
                        "src": "6837:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 1967,
                        "name": "traits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1473,
                        "src": "6812:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITraits_$3541",
                          "typeString": "contract ITraits"
                        }
                      },
                      "id": 1968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selectTrait",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3540,
                      "src": "6812:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint16_$_t_uint8_$returns$_t_uint8_$",
                        "typeString": "function (uint16,uint8) view external returns (uint8)"
                      }
                    },
                    "id": 1971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6812:35:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 1966,
                  "id": 1972,
                  "nodeType": "Return",
                  "src": "6805:42:22"
                }
              ]
            },
            "documentation": {
              "id": 1958,
              "nodeType": "StructuredDocumentation",
              "src": "6269:412:22",
              "text": " uses A.J. Walker's Alias algorithm for O(1) rarity table lookup\n ensuring O(1) instead of O(n) reduces mint cost by more than 50%\n probability & alias tables are generated off-chain beforehand\n @param seed portion of the 256 bit seed to remove trait correlation\n @param traitType the trait type to select a trait for\n @return the ID of the randomly selected trait"
            },
            "id": 1974,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selectTrait",
            "nameLocation": "6695:11:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1960,
                  "mutability": "mutable",
                  "name": "seed",
                  "nameLocation": "6714:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1974,
                  "src": "6707:11:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1959,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "6707:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1962,
                  "mutability": "mutable",
                  "name": "traitType",
                  "nameLocation": "6726:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1974,
                  "src": "6720:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1961,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6720:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6706:30:22"
            },
            "returnParameters": {
              "id": 1966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1965,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1974,
                  "src": "6784:5:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1964,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6784:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6783:7:22"
            },
            "scope": 2444,
            "src": "6686:168:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2020,
              "nodeType": "Block",
              "src": "7235:333:22",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1982,
                        "name": "minted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1451,
                        "src": "7249:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 1983,
                        "name": "PAID_TOKENS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1449,
                        "src": "7259:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7249:21:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1987,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1985,
                                    "name": "seed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1977,
                                    "src": "7276:4:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">>",
                                  "rightExpression": {
                                    "hexValue": "323435",
                                    "id": 1986,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7284:3:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_245_by_1",
                                      "typeString": "int_const 245"
                                    },
                                    "value": "245"
                                  },
                                  "src": "7276:11:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1988,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "7275:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "hexValue": "3130",
                              "id": 1989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7291:2:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "src": "7275:18:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1991,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7274:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7298:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7274:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7249:50:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1998,
                  "nodeType": "IfStatement",
                  "src": "7245:87:22",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1995,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3091,
                        "src": "7320:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7320:12:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "functionReturnParameters": 1981,
                    "id": 1997,
                    "nodeType": "Return",
                    "src": "7313:19:22"
                  }
                },
                {
                  "assignments": [
                    2000
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2000,
                      "mutability": "mutable",
                      "name": "thief",
                      "nameLocation": "7391:5:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2020,
                      "src": "7383:13:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1999,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7383:7:22",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2007,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2003,
                          "name": "seed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1977,
                          "src": "7422:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">>",
                        "rightExpression": {
                          "hexValue": "313434",
                          "id": 2004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7430:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_144_by_1",
                            "typeString": "int_const 144"
                          },
                          "value": "144"
                        },
                        "src": "7422:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2001,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1467,
                        "src": "7399:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBank_$3457",
                          "typeString": "contract IBank"
                        }
                      },
                      "id": 2002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "randomPoliceOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3456,
                      "src": "7399:22:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 2006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7399:35:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7383:51:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2008,
                      "name": "thief",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2000,
                      "src": "7497:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 2011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7514:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7506:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2009,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7506:7:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7506:12:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7497:21:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2017,
                  "nodeType": "IfStatement",
                  "src": "7493:46:22",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2014,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3091,
                        "src": "7527:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 2015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7527:12:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "functionReturnParameters": 1981,
                    "id": 2016,
                    "nodeType": "Return",
                    "src": "7520:19:22"
                  }
                },
                {
                  "expression": {
                    "id": 2018,
                    "name": "thief",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2000,
                    "src": "7556:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1981,
                  "id": 2019,
                  "nodeType": "Return",
                  "src": "7549:12:22"
                }
              ]
            },
            "documentation": {
              "id": 1975,
              "nodeType": "StructuredDocumentation",
              "src": "6860:299:22",
              "text": " the first 20% (ETH purchases) go to the minter\n the remaining 80% have a 10% chance to be given to a random staked police\n @param seed a random value to select a recipient from\n @return the address of the recipient (either the minter or the Police thief's owner)"
            },
            "id": 2021,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selectRecipient",
            "nameLocation": "7173:15:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1977,
                  "mutability": "mutable",
                  "name": "seed",
                  "nameLocation": "7197:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2021,
                  "src": "7189:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7189:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7188:14:22"
            },
            "returnParameters": {
              "id": 1981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1980,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2021,
                  "src": "7226:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7226:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7225:9:22"
            },
            "scope": 2444,
            "src": "7164:404:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2212,
              "nodeType": "Block",
              "src": "7900:834:22",
              "statements": [
                {
                  "expression": {
                    "id": 2041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2030,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2028,
                        "src": "7910:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                          "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                        }
                      },
                      "id": 2032,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isThief",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3471,
                      "src": "7910:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2033,
                                "name": "seed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2024,
                                "src": "7923:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&",
                              "rightExpression": {
                                "hexValue": "307846464646",
                                "id": 2034,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7930:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_65535_by_1",
                                  "typeString": "int_const 65535"
                                },
                                "value": "0xFFFF"
                              },
                              "src": "7923:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2036,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7922:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 2037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7940:2:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "7922:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7946:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7922:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7910:37:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2042,
                  "nodeType": "ExpressionStatement",
                  "src": "7910:37:22"
                },
                {
                  "assignments": [
                    2044
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2044,
                      "mutability": "mutable",
                      "name": "shift",
                      "nameLocation": "7963:5:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 2212,
                      "src": "7957:11:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 2043,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "7957:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2050,
                  "initialValue": {
                    "condition": {
                      "expression": {
                        "id": 2045,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2028,
                        "src": "7971:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                          "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                        }
                      },
                      "id": 2046,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isThief",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3471,
                      "src": "7971:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "3130",
                      "id": 2048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7987:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "id": 2049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "7971:18:22",
                    "trueExpression": {
                      "hexValue": "30",
                      "id": 2047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7983:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7957:32:22"
                },
                {
                  "expression": {
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2051,
                      "name": "seed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2024,
                      "src": "8000:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": ">>=",
                    "rightHandSide": {
                      "hexValue": "3136",
                      "id": 2052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8009:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_16_by_1",
                        "typeString": "int_const 16"
                      },
                      "value": "16"
                    },
                    "src": "8000:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2054,
                  "nodeType": "ExpressionStatement",
                  "src": "8000:11:22"
                },
                {
                  "expression": {
                    "id": 2069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2055,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2028,
                        "src": "8021:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                          "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                        }
                      },
                      "id": 2057,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "uniform",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3473,
                      "src": "8021:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2061,
                                "name": "seed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2024,
                                "src": "8052:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&",
                              "rightExpression": {
                                "hexValue": "307846464646",
                                "id": 2062,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8059:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_65535_by_1",
                                  "typeString": "int_const 65535"
                                },
                                "value": "0xFFFF"
                              },
                              "src": "8052:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8045:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint16_$",
                              "typeString": "type(uint16)"
                            },
                            "typeName": {
                              "id": 2059,
                              "name": "uint16",
                              "nodeType": "ElementaryTypeName",
                              "src": "8045:6:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8045:21:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 2067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "30",
                            "id": 2065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8068:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 2066,
                            "name": "shift",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2044,
                            "src": "8072:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "8068:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 2058,
                        "name": "selectTrait",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1974,
                        "src": "8033:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint16_$_t_uint8_$returns$_t_uint8_$",
                          "typeString": "function (uint16,uint8) view returns (uint8)"
                        }
                      },
                      "id": 2068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8033:45:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "8021:57:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2070,
                  "nodeType": "ExpressionStatement",
                  "src": "8021:57:22"
                },
                {
                  "expression": {
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2071,
                      "name": "seed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2024,
                      "src": "8089:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": ">>=",
                    "rightHandSide": {
                      "hexValue": "3136",
                      "id": 2072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8098:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_16_by_1",
                        "typeString": "int_const 16"
                      },
                      "value": "16"
                    },
                    "src": "8089:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2074,
                  "nodeType": "ExpressionStatement",
                  "src": "8089:11:22"
                },
                {
                  "expression": {
                    "id": 2089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2075,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2028,
                        "src": "8110:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                          "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                        }
                      },
                      "id": 2077,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "hair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3475,
                      "src": "8110:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2081,
                                "name": "seed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2024,
                                "src": "8138:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&",
                              "rightExpression": {
                                "hexValue": "307846464646",
                                "id": 2082,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8145:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_65535_by_1",
                                  "typeString": "int_const 65535"
                                },
                                "value": "0xFFFF"
                              },
                              "src": "8138:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8131:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint16_$",
                              "typeString": "type(uint16)"
                            },
                            "typeName": {
                              "id": 2079,
                              "name": "uint16",
                              "nodeType": "ElementaryTypeName",
                              "src": "8131:6:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8131:21:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 2087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31",
                            "id": 2085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8154:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 2086,
                            "name": "shift",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2044,
                            "src": "8158:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "8154:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 2078,
                        "name": "selectTrait",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1974,
                        "src": "8119:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint16_$_t_uint8_$returns$_t_uint8_$",
                          "typeString": "function (uint16,uint8) view returns (uint8)"
                        }
                      },
                      "id": 2088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8119:45:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "8110:54:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2090,
                  "nodeType": "ExpressionStatement",
                  "src": "8110:54:22"
                },
                {
                  "expression": {
                    "id": 2093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2091,
                      "name": "seed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2024,
                      "src": "8175:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": ">>=",
                    "rightHandSide": {
                      "hexValue": "3136",
                      "id": 2092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8184:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_16_by_1",
                        "typeString": "int_const 16"
                      },
                      "value": "16"
                    },
                    "src": "8175:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2094,
                  "nodeType": "ExpressionStatement",
                  "src": "8175:11:22"
                },
                {
                  "expression": {
                    "id": 2109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2095,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2028,
                        "src": "8196:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                          "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                        }
                      },
                      "id": 2097,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "facialHair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3479,
                      "src": "8196:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2101,
                                "name": "seed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2024,
                                "src": "8230:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&",
                              "rightExpression": {
                                "hexValue": "307846464646",
                                "id": 2102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8237:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_65535_by_1",
                                  "typeString": "int_const 65535"
                                },
                                "value": "0xFFFF"
                              },
                              "src": "8230:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8223:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint16_$",
                              "typeString": "type(uint16)"
                            },
                            "typeName": {
                              "id": 2099,
                              "name": "uint16",
                              "nodeType": "ElementaryTypeName",
                              "src": "8223:6:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8223:21:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 2107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 2105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8246:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 2106,
                            "name": "shift",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2044,
                            "src": "8250:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "8246:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 2098,
                        "name": "selectTrait",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1974,
                        "src": "8211:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint16_$_t_uint8_$returns$_t_uint8_$",
                          "typeString": "function (uint16,uint8) view returns (uint8)"
                        }
                      },
                      "id": 2108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8211:45:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "8196:60:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2110,
                  "nodeType": "ExpressionStatement",
                  "src": "8196:60:22"
                },
                {
                  "expression": {
                    "id": 2113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2111,
                      "name": "seed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2024,
                      "src": "8267:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": ">>=",
                    "rightHandSide": {
                      "hexValue": "3136",
                      "id": 2112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8276:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_16_by_1",
                        "typeString": "int_const 16"
                      },
                      "value": "16"
                    },
                    "src": "8267:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2114,
                  "nodeType": "ExpressionStatement",
                  "src": "8267:11:22"
                },
                {
                  "expression": {
                    "id": 2129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2115,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2028,
                        "src": "8288:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                          "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                        }
                      },
                      "id": 2117,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "eyes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3477,
                      "src": "8288:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2121,
                                "name": "seed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2024,
                                "src": "8316:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&",
                              "rightExpression": {
                                "hexValue": "307846464646",
                                "id": 2122,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8323:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_65535_by_1",
                                  "typeString": "int_const 65535"
                                },
                                "value": "0xFFFF"
                              },
                              "src": "8316:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8309:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint16_$",
                              "typeString": "type(uint16)"
                            },
                            "typeName": {
                              "id": 2119,
                              "name": "uint16",
                              "nodeType": "ElementaryTypeName",
                              "src": "8309:6:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8309:21:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 2127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "33",
                            "id": 2125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8332:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 2126,
                            "name": "shift",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2044,
                            "src": "8336:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "8332:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 2118,
                        "name": "selectTrait",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1974,
                        "src": "8297:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint16_$_t_uint8_$returns$_t_uint8_$",
                          "typeString": "function (uint16,uint8) view returns (uint8)"
                        }
                      },
                      "id": 2128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8297:45:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "8288:54:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2130,
                  "nodeType": "ExpressionStatement",
                  "src": "8288:54:22"
                },
                {
                  "expression": {
                    "id": 2133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2131,
                      "name": "seed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2024,
                      "src": "8353:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": ">>=",
                    "rightHandSide": {
                      "hexValue": "3136",
                      "id": 2132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8362:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_16_by_1",
                        "typeString": "int_const 16"
                      },
                      "value": "16"
                    },
                    "src": "8353:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2134,
                  "nodeType": "ExpressionStatement",
                  "src": "8353:11:22"
                },
                {
                  "expression": {
                    "id": 2149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2135,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2028,
                        "src": "8374:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                          "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                        }
                      },
                      "id": 2137,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "accessory",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3485,
                      "src": "8374:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2141,
                                "name": "seed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2024,
                                "src": "8407:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&",
                              "rightExpression": {
                                "hexValue": "307846464646",
                                "id": 2142,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8414:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_65535_by_1",
                                  "typeString": "int_const 65535"
                                },
                                "value": "0xFFFF"
                              },
                              "src": "8407:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8400:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint16_$",
                              "typeString": "type(uint16)"
                            },
                            "typeName": {
                              "id": 2139,
                              "name": "uint16",
                              "nodeType": "ElementaryTypeName",
                              "src": "8400:6:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8400:21:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 2147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "34",
                            "id": 2145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8423:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 2146,
                            "name": "shift",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2044,
                            "src": "8427:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "8423:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 2138,
                        "name": "selectTrait",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1974,
                        "src": "8388:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint16_$_t_uint8_$returns$_t_uint8_$",
                          "typeString": "function (uint16,uint8) view returns (uint8)"
                        }
                      },
                      "id": 2148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8388:45:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "8374:59:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2150,
                  "nodeType": "ExpressionStatement",
                  "src": "8374:59:22"
                },
                {
                  "expression": {
                    "id": 2153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2151,
                      "name": "seed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2024,
                      "src": "8444:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": ">>=",
                    "rightHandSide": {
                      "hexValue": "3136",
                      "id": 2152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8453:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_16_by_1",
                        "typeString": "int_const 16"
                      },
                      "value": "16"
                    },
                    "src": "8444:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2154,
                  "nodeType": "ExpressionStatement",
                  "src": "8444:11:22"
                },
                {
                  "expression": {
                    "id": 2169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2155,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2028,
                        "src": "8465:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                          "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                        }
                      },
                      "id": 2157,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "headgear",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3481,
                      "src": "8465:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2161,
                                "name": "seed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2024,
                                "src": "8497:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&",
                              "rightExpression": {
                                "hexValue": "307846464646",
                                "id": 2162,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8504:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_65535_by_1",
                                  "typeString": "int_const 65535"
                                },
                                "value": "0xFFFF"
                              },
                              "src": "8497:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8490:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint16_$",
                              "typeString": "type(uint16)"
                            },
                            "typeName": {
                              "id": 2159,
                              "name": "uint16",
                              "nodeType": "ElementaryTypeName",
                              "src": "8490:6:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8490:21:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 2167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "35",
                            "id": 2165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8513:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 2166,
                            "name": "shift",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2044,
                            "src": "8517:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "8513:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 2158,
                        "name": "selectTrait",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1974,
                        "src": "8478:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint16_$_t_uint8_$returns$_t_uint8_$",
                          "typeString": "function (uint16,uint8) view returns (uint8)"
                        }
                      },
                      "id": 2168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8478:45:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "8465:58:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2170,
                  "nodeType": "ExpressionStatement",
                  "src": "8465:58:22"
                },
                {
                  "expression": {
                    "id": 2173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2171,
                      "name": "seed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2024,
                      "src": "8534:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": ">>=",
                    "rightHandSide": {
                      "hexValue": "3136",
                      "id": 2172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8543:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_16_by_1",
                        "typeString": "int_const 16"
                      },
                      "value": "16"
                    },
                    "src": "8534:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2174,
                  "nodeType": "ExpressionStatement",
                  "src": "8534:11:22"
                },
                {
                  "condition": {
                    "id": 2177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "8559:10:22",
                    "subExpression": {
                      "expression": {
                        "id": 2175,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2028,
                        "src": "8560:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                          "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                        }
                      },
                      "id": 2176,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isThief",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3471,
                      "src": "8560:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2211,
                  "nodeType": "IfStatement",
                  "src": "8555:173:22",
                  "trueBody": {
                    "id": 2210,
                    "nodeType": "Block",
                    "src": "8571:157:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 2192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2178,
                              "name": "t",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2028,
                              "src": "8585:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                                "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                              }
                            },
                            "id": 2180,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "neckGear",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3483,
                            "src": "8585:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2186,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2184,
                                      "name": "seed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2024,
                                      "src": "8617:4:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&",
                                    "rightExpression": {
                                      "hexValue": "307846464646",
                                      "id": 2185,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8624:6:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_65535_by_1",
                                        "typeString": "int_const 65535"
                                      },
                                      "value": "0xFFFF"
                                    },
                                    "src": "8617:13:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2183,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8610:6:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint16_$",
                                    "typeString": "type(uint16)"
                                  },
                                  "typeName": {
                                    "id": 2182,
                                    "name": "uint16",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8610:6:22",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8610:21:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 2190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "36",
                                  "id": 2188,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8633:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 2189,
                                  "name": "shift",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2044,
                                  "src": "8637:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "8633:9:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 2181,
                              "name": "selectTrait",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1974,
                              "src": "8598:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint16_$_t_uint8_$returns$_t_uint8_$",
                                "typeString": "function (uint16,uint8) view returns (uint8)"
                              }
                            },
                            "id": 2191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8598:45:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "8585:58:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 2193,
                        "nodeType": "ExpressionStatement",
                        "src": "8585:58:22"
                      },
                      {
                        "expression": {
                          "id": 2208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2194,
                              "name": "t",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2028,
                              "src": "8657:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                                "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                              }
                            },
                            "id": 2196,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "alphaIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3487,
                            "src": "8657:12:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2202,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2200,
                                      "name": "seed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2024,
                                      "src": "8691:4:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&",
                                    "rightExpression": {
                                      "hexValue": "307846464646",
                                      "id": 2201,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8698:6:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_65535_by_1",
                                        "typeString": "int_const 65535"
                                      },
                                      "value": "0xFFFF"
                                    },
                                    "src": "8691:13:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2199,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8684:6:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint16_$",
                                    "typeString": "type(uint16)"
                                  },
                                  "typeName": {
                                    "id": 2198,
                                    "name": "uint16",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8684:6:22",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2203,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8684:21:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 2206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "37",
                                  "id": 2204,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8707:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_7_by_1",
                                    "typeString": "int_const 7"
                                  },
                                  "value": "7"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 2205,
                                  "name": "shift",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2044,
                                  "src": "8711:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "8707:9:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 2197,
                              "name": "selectTrait",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1974,
                              "src": "8672:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint16_$_t_uint8_$returns$_t_uint8_$",
                                "typeString": "function (uint16,uint8) view returns (uint8)"
                              }
                            },
                            "id": 2207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8672:45:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "8657:60:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 2209,
                        "nodeType": "ExpressionStatement",
                        "src": "8657:60:22"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2022,
              "nodeType": "StructuredDocumentation",
              "src": "7574:212:22",
              "text": " selects the species and all of its traits based on the seed value\n @param seed a pseudorandom 256 bit number to derive traits from\n @return t -  a struct of randomly selected traits"
            },
            "id": 2213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selectTraits",
            "nameLocation": "7800:12:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2024,
                  "mutability": "mutable",
                  "name": "seed",
                  "nameLocation": "7821:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2213,
                  "src": "7813:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7813:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7812:14:22"
            },
            "returnParameters": {
              "id": 2029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2028,
                  "mutability": "mutable",
                  "name": "t",
                  "nameLocation": "7893:1:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2213,
                  "src": "7874:20:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                    "typeString": "struct IPoliceAndThief.ThiefPolice"
                  },
                  "typeName": {
                    "id": 2027,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2026,
                      "name": "ThiefPolice",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3488,
                      "src": "7874:11:22"
                    },
                    "referencedDeclaration": 3488,
                    "src": "7874:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ThiefPolice_$3488_storage_ptr",
                      "typeString": "struct IPoliceAndThief.ThiefPolice"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7873:22:22"
            },
            "scope": 2444,
            "src": "7791:943:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2249,
              "nodeType": "Block",
              "src": "9020:481:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2227,
                                  "name": "s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2217,
                                  "src": "9147:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                                    "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                                  }
                                },
                                "id": 2228,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isThief",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3471,
                                "src": "9147:9:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2229,
                                  "name": "s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2217,
                                  "src": "9182:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                                    "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                                  }
                                },
                                "id": 2230,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "uniform",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3473,
                                "src": "9182:9:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2231,
                                  "name": "s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2217,
                                  "src": "9217:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                                    "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                                  }
                                },
                                "id": 2232,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "hair",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3475,
                                "src": "9217:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2233,
                                  "name": "s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2217,
                                  "src": "9249:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                                    "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                                  }
                                },
                                "id": 2234,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "facialHair",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3479,
                                "src": "9249:12:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2235,
                                  "name": "s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2217,
                                  "src": "9287:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                                    "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                                  }
                                },
                                "id": 2236,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "eyes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3477,
                                "src": "9287:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2237,
                                  "name": "s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2217,
                                  "src": "9319:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                                    "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                                  }
                                },
                                "id": 2238,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "headgear",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3481,
                                "src": "9319:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2239,
                                  "name": "s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2217,
                                  "src": "9355:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                                    "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                                  }
                                },
                                "id": 2240,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "accessory",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3485,
                                "src": "9355:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2241,
                                  "name": "s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2217,
                                  "src": "9392:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                                    "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                                  }
                                },
                                "id": 2242,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "neckGear",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3483,
                                "src": "9392:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2243,
                                  "name": "s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2217,
                                  "src": "9428:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                                    "typeString": "struct IPoliceAndThief.ThiefPolice memory"
                                  }
                                },
                                "id": 2244,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "alphaIndex",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3487,
                                "src": "9428:12:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "expression": {
                                "id": 2225,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "9105:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 2226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "9105:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 2245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9105:357:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2224,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "9074:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 2246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9074:406:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9049:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 2222,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9049:7:22",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9049:445:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2221,
                  "id": 2248,
                  "nodeType": "Return",
                  "src": "9030:464:22"
                }
              ]
            },
            "documentation": {
              "id": 2214,
              "nodeType": "StructuredDocumentation",
              "src": "8740:171:22",
              "text": " converts a struct to a 256 bit hash to check for uniqueness\n @param s the struct to pack into a hash\n @return the 256 bit hash of the struct"
            },
            "id": 2250,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "structToHash",
            "nameLocation": "8925:12:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2217,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "8957:1:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2250,
                  "src": "8938:20:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                    "typeString": "struct IPoliceAndThief.ThiefPolice"
                  },
                  "typeName": {
                    "id": 2216,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2215,
                      "name": "ThiefPolice",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3488,
                      "src": "8938:11:22"
                    },
                    "referencedDeclaration": 3488,
                    "src": "8938:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ThiefPolice_$3488_storage_ptr",
                      "typeString": "struct IPoliceAndThief.ThiefPolice"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8937:22:22"
            },
            "returnParameters": {
              "id": 2221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2220,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2250,
                  "src": "9007:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9007:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9006:9:22"
            },
            "scope": 2444,
            "src": "8916:585:22",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2282,
              "nodeType": "Block",
              "src": "9753:343:22",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2263,
                                    "name": "tx",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -26,
                                    "src": "9880:2:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_transaction",
                                      "typeString": "tx"
                                    }
                                  },
                                  "id": 2264,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "origin",
                                  "nodeType": "MemberAccess",
                                  "src": "9880:9:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2269,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 2266,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "9925:5:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 2267,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "number",
                                        "nodeType": "MemberAccess",
                                        "src": "9925:12:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 2268,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9940:1:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "9925:16:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 2265,
                                    "name": "blockhash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -5,
                                    "src": "9915:9:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                                      "typeString": "function (uint256) view returns (bytes32)"
                                    }
                                  },
                                  "id": 2270,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9915:27:22",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2271,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9968:5:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2272,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9968:15:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 2273,
                                  "name": "seed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2253,
                                  "src": "10009:4:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2261,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "9838:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2262,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9838:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9838:197:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2260,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "9807:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9807:246:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 2259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9782:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 2258,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9782:7:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9782:285:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "^",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 2277,
                          "name": "randomSource",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1476,
                          "src": "10070:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISeed_$3522",
                            "typeString": "contract ISeed"
                          }
                        },
                        "id": 2278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3514,
                        "src": "10070:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 2279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10070:19:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9782:307:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2257,
                  "id": 2281,
                  "nodeType": "Return",
                  "src": "9763:326:22"
                }
              ]
            },
            "documentation": {
              "id": 2251,
              "nodeType": "StructuredDocumentation",
              "src": "9507:179:22",
              "text": " generates a pseudorandom number\n @param seed a value ensure different outcomes for different sources in the same block\n @return a pseudorandom value"
            },
            "id": 2283,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "random",
            "nameLocation": "9700:6:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2253,
                  "mutability": "mutable",
                  "name": "seed",
                  "nameLocation": "9715:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2283,
                  "src": "9707:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9707:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9706:14:22"
            },
            "returnParameters": {
              "id": 2257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2256,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2283,
                  "src": "9744:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9744:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9743:9:22"
            },
            "scope": 2444,
            "src": "9691:405:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3501
            ],
            "body": {
              "id": 2296,
              "nodeType": "Block",
              "src": "10248:44:22",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2292,
                      "name": "tokenTraits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1456,
                      "src": "10265:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ThiefPolice_$3488_storage_$",
                        "typeString": "mapping(uint256 => struct IPoliceAndThief.ThiefPolice storage ref)"
                      }
                    },
                    "id": 2294,
                    "indexExpression": {
                      "id": 2293,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2285,
                      "src": "10277:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10265:20:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ThiefPolice_$3488_storage",
                      "typeString": "struct IPoliceAndThief.ThiefPolice storage ref"
                    }
                  },
                  "functionReturnParameters": 2291,
                  "id": 2295,
                  "nodeType": "Return",
                  "src": "10258:27:22"
                }
              ]
            },
            "functionSelector": "94e56847",
            "id": 2297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenTraits",
            "nameLocation": "10128:14:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2287,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10198:8:22"
            },
            "parameters": {
              "id": 2286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2285,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10151:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2297,
                  "src": "10143:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10143:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10142:17:22"
            },
            "returnParameters": {
              "id": 2291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2290,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2297,
                  "src": "10224:18:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ThiefPolice_$3488_memory_ptr",
                    "typeString": "struct IPoliceAndThief.ThiefPolice"
                  },
                  "typeName": {
                    "id": 2289,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2288,
                      "name": "ThiefPolice",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3488,
                      "src": "10224:11:22"
                    },
                    "referencedDeclaration": 3488,
                    "src": "10224:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ThiefPolice_$3488_storage_ptr",
                      "typeString": "struct IPoliceAndThief.ThiefPolice"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10223:20:22"
            },
            "scope": 2444,
            "src": "10119:173:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3493
            ],
            "body": {
              "id": 2305,
              "nodeType": "Block",
              "src": "10364:35:22",
              "statements": [
                {
                  "expression": {
                    "id": 2303,
                    "name": "PAID_TOKENS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1449,
                    "src": "10381:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2302,
                  "id": 2304,
                  "nodeType": "Return",
                  "src": "10374:18:22"
                }
              ]
            },
            "functionSelector": "4018b1f8",
            "id": 2306,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPaidTokens",
            "nameLocation": "10307:13:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2299,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10337:8:22"
            },
            "parameters": {
              "id": 2298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10320:2:22"
            },
            "returnParameters": {
              "id": 2302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2301,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2306,
                  "src": "10355:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10355:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10354:9:22"
            },
            "scope": 2444,
            "src": "10298:101:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3506
            ],
            "body": {
              "id": 2314,
              "nodeType": "Block",
              "src": "10470:37:22",
              "statements": [
                {
                  "expression": {
                    "id": 2312,
                    "name": "stakingActive",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1489,
                    "src": "10487:13:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2311,
                  "id": 2313,
                  "nodeType": "Return",
                  "src": "10480:20:22"
                }
              ]
            },
            "functionSelector": "61f64457",
            "id": 2315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStakingActive",
            "nameLocation": "10414:15:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2308,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10446:8:22"
            },
            "parameters": {
              "id": 2307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10429:2:22"
            },
            "returnParameters": {
              "id": 2311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2310,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2315,
                  "src": "10464:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2309,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10464:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10463:6:22"
            },
            "scope": 2444,
            "src": "10405:102:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2329,
              "nodeType": "Block",
              "src": "10724:36:22",
              "statements": [
                {
                  "expression": {
                    "id": 2327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2323,
                      "name": "bank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "10734:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBank_$3457",
                        "typeString": "contract IBank"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2325,
                          "name": "_bank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2318,
                          "src": "10747:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2324,
                        "name": "IBank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3457,
                        "src": "10741:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IBank_$3457_$",
                          "typeString": "type(contract IBank)"
                        }
                      },
                      "id": 2326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10741:12:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBank_$3457",
                        "typeString": "contract IBank"
                      }
                    },
                    "src": "10734:19:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBank_$3457",
                      "typeString": "contract IBank"
                    }
                  },
                  "id": 2328,
                  "nodeType": "ExpressionStatement",
                  "src": "10734:19:22"
                }
              ]
            },
            "documentation": {
              "id": 2316,
              "nodeType": "StructuredDocumentation",
              "src": "10531:137:22",
              "text": " called after deployment so that the contract can get random police thieves\n @param _bank the address of the Bank"
            },
            "functionSelector": "090d23b9",
            "id": 2330,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2321,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2320,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3036,
                  "src": "10714:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "10714:9:22"
              }
            ],
            "name": "setBank",
            "nameLocation": "10682:7:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2318,
                  "mutability": "mutable",
                  "name": "_bank",
                  "nameLocation": "10698:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2330,
                  "src": "10690:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10690:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10689:15:22"
            },
            "returnParameters": {
              "id": 2322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10724:0:22"
            },
            "scope": 2444,
            "src": "10673:87:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2349,
              "nodeType": "Block",
              "src": "10872:65:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2344,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "10916:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PoliceAndThief_$2444",
                                "typeString": "contract PoliceAndThief"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PoliceAndThief_$2444",
                                "typeString": "contract PoliceAndThief"
                              }
                            ],
                            "id": 2343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10908:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2342,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10908:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10908:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "10908:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2338,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3022,
                              "src": "10890:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10890:7:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10882:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 2336,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10882:8:22",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10882:16:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 2341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "10882:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10882:48:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2348,
                  "nodeType": "ExpressionStatement",
                  "src": "10882:48:22"
                }
              ]
            },
            "documentation": {
              "id": 2331,
              "nodeType": "StructuredDocumentation",
              "src": "10766:62:22",
              "text": " allows owner to withdraw funds from minting"
            },
            "functionSelector": "3ccfd60b",
            "id": 2350,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2334,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2333,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3036,
                  "src": "10862:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "10862:9:22"
              }
            ],
            "name": "withdraw",
            "nameLocation": "10842:8:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10850:2:22"
            },
            "returnParameters": {
              "id": 2335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10872:0:22"
            },
            "scope": 2444,
            "src": "10833:104:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2362,
              "nodeType": "Block",
              "src": "11067:42:22",
              "statements": [
                {
                  "expression": {
                    "id": 2360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2358,
                      "name": "PAID_TOKENS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1449,
                      "src": "11077:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2359,
                      "name": "_paidTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2353,
                      "src": "11091:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11077:25:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2361,
                  "nodeType": "ExpressionStatement",
                  "src": "11077:25:22"
                }
              ]
            },
            "documentation": {
              "id": 2351,
              "nodeType": "StructuredDocumentation",
              "src": "10943:56:22",
              "text": " updates the number of tokens for sale"
            },
            "functionSelector": "3431a753",
            "id": 2363,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2356,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2355,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3036,
                  "src": "11057:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "11057:9:22"
              }
            ],
            "name": "setPaidTokens",
            "nameLocation": "11013:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2353,
                  "mutability": "mutable",
                  "name": "_paidTokens",
                  "nameLocation": "11035:11:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2363,
                  "src": "11027:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11027:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11026:21:22"
            },
            "returnParameters": {
              "id": 2357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11067:0:22"
            },
            "scope": 2444,
            "src": "11004:105:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2379,
              "nodeType": "Block",
              "src": "11231:63:22",
              "statements": [
                {
                  "condition": {
                    "id": 2371,
                    "name": "_paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2366,
                    "src": "11245:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2375,
                        "name": "_unpause",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1419,
                        "src": "11277:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 2376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11277:10:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2377,
                    "nodeType": "ExpressionStatement",
                    "src": "11277:10:22"
                  },
                  "id": 2378,
                  "nodeType": "IfStatement",
                  "src": "11241:46:22",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2372,
                        "name": "_pause",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1403,
                        "src": "11254:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 2373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11254:8:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2374,
                    "nodeType": "ExpressionStatement",
                    "src": "11254:8:22"
                  }
                }
              ]
            },
            "documentation": {
              "id": 2364,
              "nodeType": "StructuredDocumentation",
              "src": "11115:59:22",
              "text": " enables owner to pause / unpause minting"
            },
            "functionSelector": "16c38b3c",
            "id": 2380,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2369,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2368,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3036,
                  "src": "11221:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "11221:9:22"
              }
            ],
            "name": "setPaused",
            "nameLocation": "11188:9:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2366,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "11203:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2380,
                  "src": "11198:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2365,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11198:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11197:14:22"
            },
            "returnParameters": {
              "id": 2370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11231:0:22"
            },
            "scope": 2444,
            "src": "11179:115:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2409,
              "nodeType": "Block",
              "src": "11365:112:22",
              "statements": [
                {
                  "body": {
                    "id": 2407,
                    "nodeType": "Block",
                    "src": "11418:53:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 2405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2399,
                              "name": "inWhitelist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1483,
                              "src": "11432:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 2403,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 2400,
                                "name": "addrs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2383,
                                "src": "11444:5:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 2402,
                              "indexExpression": {
                                "id": 2401,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2389,
                                "src": "11450:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11444:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11432:21:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11456:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "11432:28:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2406,
                        "nodeType": "ExpressionStatement",
                        "src": "11432:28:22"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2392,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2389,
                      "src": "11395:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2393,
                        "name": "addrs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2383,
                        "src": "11399:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11399:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11395:16:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2408,
                  "initializationExpression": {
                    "assignments": [
                      2389
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2389,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11388:1:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 2408,
                        "src": "11380:9:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2388,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11380:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2391,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11392:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11380:13:22"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11413:3:22",
                      "subExpression": {
                        "id": 2396,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2389,
                        "src": "11413:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2398,
                    "nodeType": "ExpressionStatement",
                    "src": "11413:3:22"
                  },
                  "nodeType": "ForStatement",
                  "src": "11375:96:22"
                }
              ]
            },
            "functionSelector": "f4217648",
            "id": 2410,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2386,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2385,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3036,
                  "src": "11355:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "11355:9:22"
              }
            ],
            "name": "setWhitelist",
            "nameLocation": "11309:12:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2383,
                  "mutability": "mutable",
                  "name": "addrs",
                  "nameLocation": "11339:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2410,
                  "src": "11322:22:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2381,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "11322:7:22",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2382,
                    "nodeType": "ArrayTypeName",
                    "src": "11322:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11321:24:22"
            },
            "returnParameters": {
              "id": 2387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11365:0:22"
            },
            "scope": 2444,
            "src": "11300:177:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3852
            ],
            "body": {
              "id": 2430,
              "nodeType": "Block",
              "src": "11618:168:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2420,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2412,
                            "src": "11657:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2419,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4099,
                          "src": "11649:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11649:16:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 2422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11679:49:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 2418,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11628:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11628:110:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2424,
                  "nodeType": "ExpressionStatement",
                  "src": "11628:110:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2427,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2412,
                        "src": "11771:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2425,
                        "name": "traits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1473,
                        "src": "11755:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITraits_$3541",
                          "typeString": "contract ITraits"
                        }
                      },
                      "id": 2426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3531,
                      "src": "11755:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory)"
                      }
                    },
                    "id": 2428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11755:24:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 2417,
                  "id": 2429,
                  "nodeType": "Return",
                  "src": "11748:31:22"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 2431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "11511:8:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2414,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11573:8:22"
            },
            "parameters": {
              "id": 2413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2412,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11528:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2431,
                  "src": "11520:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11520:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11519:17:22"
            },
            "returnParameters": {
              "id": 2417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2416,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2431,
                  "src": "11599:13:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2415,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11599:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11598:15:22"
            },
            "scope": 2444,
            "src": "11502:284:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2442,
              "nodeType": "Block",
              "src": "11846:36:22",
              "statements": [
                {
                  "expression": {
                    "id": 2440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2438,
                      "name": "MINT_PRICE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1442,
                      "src": "11856:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2439,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2433,
                      "src": "11869:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11856:19:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2441,
                  "nodeType": "ExpressionStatement",
                  "src": "11856:19:22"
                }
              ]
            },
            "functionSelector": "a2b40d19",
            "id": 2443,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2436,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2435,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3036,
                  "src": "11836:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "11836:9:22"
              }
            ],
            "name": "changePrice",
            "nameLocation": "11801:11:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2433,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "11821:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2443,
                  "src": "11813:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11813:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11812:16:22"
            },
            "returnParameters": {
              "id": 2437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11846:0:22"
            },
            "scope": 2444,
            "src": "11792:90:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2445,
        "src": "298:11586:22",
        "usedErrors": []
      }
    ],
    "src": "41:11844:22"
  },
  "bytecode": "60a06040526717979cfe362a0000600b55601e600c556015805460ff60a01b191690556017805461ffff19166001179055610bb860185560006019553480156200004857600080fd5b5060405162003626380380620036268339810160408190526200006b9162000265565b604080518082018252600b81526a506f6c6963652047616d6560a81b6020808301918252835180850190945260058452645747414d4560d81b908401528151919291620000bb91600091620001a6565b508051620000d1906001906020840190620001a6565b505050620000ee620000e86200015060201b60201c565b62000154565b600a805460ff60a01b1916600160a01b179055601380546001600160a01b038086166001600160a01b0319928316179092556014805492851692909116919091179055608081905262000143600582620002ad565b600d55506200030d915050565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001b490620002d0565b90600052602060002090601f016020900481019282620001d8576000855562000223565b82601f10620001f357805160ff191683800117855562000223565b8280016001018555821562000223579182015b828111156200022357825182559160200191906001019062000206565b506200023192915062000235565b5090565b5b8082111562000231576000815560010162000236565b6001600160a01b03811681146200026257600080fd5b50565b6000806000606084860312156200027b57600080fd5b835162000288816200024c565b60208501519093506200029b816200024c565b80925050604084015190509250925092565b600082620002cb57634e487b7160e01b600052601260045260246000fd5b500490565b600181811c90821680620002e557607f821691505b602082108114156200030757634e487b7160e01b600052602260045260246000fd5b50919050565b6080516132e86200033e6000396000818161097401528181610d9701528181610de5015261122f01526132e86000f3fe6080604052600436106102935760003560e01c8063712d2cc71161015a578063c002d23d116100c1578063e2aafa211161007a578063e2aafa2114610893578063e985e9c5146108c3578063f0292a031461090c578063f2fde38b14610922578063f421764814610942578063f47c84c51461096257600080fd5b8063c002d23d14610733578063c084f54014610749578063c87b56dd1461075f578063d773826d1461077f578063e05c57bf1461079f578063e1fc334f1461087357600080fd5b8063a1b8f37411610113578063a1b8f3741461066d578063a22cb4651461069a578063a2b40d19146106ba578063a6ac4b35146106da578063a88e0996146106f9578063b88d4fde1461071357600080fd5b8063712d2cc7146105b757806376cdb03b146105cd5780638da5cb5b146105ed57806394e568471461060b57806395d89b41146106385780639b7b2ab01461064d57600080fd5b8063302150e5116101fe5780634f6ccce7116101b75780634f6ccce7146105085780635c975abb1461052857806361f64457146105475780636352211e1461056457806367f68fac1461058457806370a082311461059757600080fd5b8063302150e51461045a5780633431a753146104705780633ccfd60b146104905780634018b1f8146104a557806342842e0e146104ba5780634f02c420146104da57600080fd5b806316c38b3c1161025057806316c38b3c1461038957806317b8e1cf146103a957806318160ddd146103db57806323b872dd146103fa57806327de8f271461041a5780632f745c591461043a57600080fd5b806301ffc9a71461029857806306fdde03146102cd578063081812fc146102ef578063090d23b914610327578063095ea7b3146103495780630c89b76614610369575b600080fd5b3480156102a457600080fd5b506102b86102b3366004612b1f565b610996565b60405190151581526020015b60405180910390f35b3480156102d957600080fd5b506102e26109c1565b6040516102c49190612b75565b3480156102fb57600080fd5b5061030f61030a366004612ba8565b610a53565b6040516001600160a01b0390911681526020016102c4565b34801561033357600080fd5b50610347610342366004612bd6565b610aed565b005b34801561035557600080fd5b50610347610364366004612bf3565b610b39565b34801561037557600080fd5b5060155461030f906001600160a01b031681565b34801561039557600080fd5b506103476103a4366004612c34565b610c4f565b3480156103b557600080fd5b506103c96103c4366004612ba8565b610c92565b60405160ff90911681526020016102c4565b3480156103e757600080fd5b506008545b6040519081526020016102c4565b34801561040657600080fd5b50610347610415366004612c4f565b610cbc565b34801561042657600080fd5b506103ec610435366004612ba8565b610d7d565b34801561044657600080fd5b506103ec610455366004612bf3565b610e3d565b34801561046657600080fd5b506103ec60185481565b34801561047c57600080fd5b5061034761048b366004612ba8565b610ed3565b34801561049c57600080fd5b50610347610f02565b3480156104b157600080fd5b50600d546103ec565b3480156104c657600080fd5b506103476104d5366004612c4f565b610f65565b3480156104e657600080fd5b50600e546104f59061ffff1681565b60405161ffff90911681526020016102c4565b34801561051457600080fd5b506103ec610523366004612ba8565b610f80565b34801561053457600080fd5b50600a54600160a01b900460ff166102b8565b34801561055357600080fd5b50601754610100900460ff166102b8565b34801561057057600080fd5b5061030f61057f366004612ba8565b611013565b610347610592366004612c90565b61108a565b3480156105a357600080fd5b506103ec6105b2366004612bd6565b6117f4565b3480156105c357600080fd5b506103ec60195481565b3480156105d957600080fd5b5060125461030f906001600160a01b031681565b3480156105f957600080fd5b50600a546001600160a01b031661030f565b34801561061757600080fd5b5061062b610626366004612ba8565b61187b565b6040516102c49190612cbc565b34801561064457600080fd5b506102e2611922565b34801561065957600080fd5b5060135461030f906001600160a01b031681565b34801561067957600080fd5b506103ec610688366004612ba8565b60106020526000908152604090205481565b3480156106a657600080fd5b506103476106b5366004612d68565b611931565b3480156106c657600080fd5b506103476106d5366004612ba8565b6119f6565b3480156106e657600080fd5b506017546102b890610100900460ff1681565b34801561070557600080fd5b506017546102b89060ff1681565b34801561071f57600080fd5b5061034761072e366004612e03565b611a25565b34801561073f57600080fd5b506103ec600b5481565b34801561075557600080fd5b506103ec600d5481565b34801561076b57600080fd5b506102e261077a366004612ba8565b611a5c565b34801561078b57600080fd5b5061034761079a366004612bd6565b611b4c565b3480156107ab57600080fd5b506108216107ba366004612ba8565b600f6020526000908152604090205460ff808216916101008104821691620100008204811691630100000081048216916401000000008204811691650100000000008104821691600160301b8204811691600160381b8104821691600160401b9091041689565b604080519915158a5260ff98891660208b01529688169689019690965293861660608801529185166080870152841660a0860152831660c0850152821660e084015216610100820152610120016102c4565b34801561087f57600080fd5b5060145461030f906001600160a01b031681565b34801561089f57600080fd5b506102b86108ae366004612bd6565b60166020526000908152604090205460ff1681565b3480156108cf57600080fd5b506102b86108de366004612eb2565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561091857600080fd5b506103ec600c5481565b34801561092e57600080fd5b5061034761093d366004612bd6565b611b98565b34801561094e57600080fd5b5061034761095d366004612eeb565b611c30565b34801561096e57600080fd5b506103ec7f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b0319821663780e9d6360e01b14806109bb57506109bb82611cc6565b92915050565b6060600080546109d090612f9d565b80601f01602080910402602001604051908101604052809291908181526020018280546109fc90612f9d565b8015610a495780601f10610a1e57610100808354040283529160200191610a49565b820191906000526020600020905b815481529060010190602001808311610a2c57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610ad15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600a546001600160a01b03163314610b175760405162461bcd60e51b8152600401610ac890612fd2565b601280546001600160a01b0319166001600160a01b0392909216919091179055565b6000610b4482611013565b9050806001600160a01b0316836001600160a01b03161415610bb25760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610ac8565b336001600160a01b0382161480610bce5750610bce81336108de565b610c405760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610ac8565b610c4a8383611d16565b505050565b600a546001600160a01b03163314610c795760405162461bcd60e51b8152600401610ac890612fd2565b8015610c8a57610c87611d84565b50565b610c87611e2a565b60118160128110610ca257600080fd5b60209182820401919006915054906101000a900460ff1681565b601554600160a01b900460ff1615610d065760405162461bcd60e51b815260206004820152600d60248201526c4e6f207265656e7472616e637960981b6044820152606401610ac8565b6015805460ff60a01b1916600160a01b1790556012546001600160a01b0316610d2c3390565b6001600160a01b031614610d6057610d443382611eaf565b610d605760405162461bcd60e51b8152600401610ac890613007565b610d6b838383611fa6565b50506015805460ff60a01b1916905550565b6000600d548211610d9057506000919050565b6005610dbd7f0000000000000000000000000000000000000000000000000000000000000000600261306e565b610dc791906130a3565b8211610dde575069043c33c1937564800000919050565b6005610e0b7f0000000000000000000000000000000000000000000000000000000000000000600461306e565b610e1591906130a3565b8211610e2c5750690878678326eac9000000919050565b50690cb49b44ba602d800000919050565b6000610e48836117f4565b8210610eaa5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610ac8565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b03163314610efd5760405162461bcd60e51b8152600401610ac890612fd2565b600d55565b600a546001600160a01b03163314610f2c5760405162461bcd60e51b8152600401610ac890612fd2565b600a546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610c87573d6000803e3d6000fd5b610c4a83838360405180602001604052806000815250611a25565b6000610f8b60085490565b8210610fee5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610ac8565b60088281548110611001576110016130b7565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806109bb5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610ac8565b601554600160a01b900460ff16156110d45760405162461bcd60e51b815260206004820152600d60248201526c4e6f207265656e7472616e637960981b6044820152606401610ac8565b6015805460ff60a01b1916600160a01b1790556110fb600a5460ff600160a01b9091041690565b1561113c5760405162461bcd60e51b815260206004820152601160248201527014185d5cd958589b194e881c185d5cd959607a1b6044820152606401610ac8565b8015806111505750601754610100900460ff165b6111945760405162461bcd60e51b815260206004820152601560248201527414dd185ada5b99c81b9bdd081858dd1a5d985d1959605a1b6044820152606401610ac8565b60175460ff16156111f0573360009081526016602052604090205460ff166111f05760405162461bcd60e51b815260206004820152600f60248201526e139bdd081dda1a5d195b1a5cdd1959608a1b6044820152606401610ac8565b32331461122a5760405162461bcd60e51b81526020600482015260086024820152674f6e6c7920454f4160c01b6044820152606401610ac8565b600e547f00000000000000000000000000000000000000000000000000000000000000009061125e90849061ffff166130cd565b11156112a05760405162461bcd60e51b8152602060048201526011602482015270105b1b081d1bdad95b9cc81b5a5b9d1959607a1b6044820152606401610ac8565b6000821180156112b25750600c548211155b6112f45760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081b5a5b9d08185b5bdd5b9d606a1b6044820152606401610ac8565b600d54600e5461ffff1610156113c157600d54600e5461131990849061ffff166130cd565b11156113675760405162461bcd60e51b815260206004820152601f60248201527f416c6c20746f6b656e73206f6e2d73616c6520616c726561647920736f6c64006044820152606401610ac8565b34600b5483611376919061306e565b146113bc5760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081c185e5b595b9d08185b5bdd5b9d60521b6044820152606401610ac8565b6113cc565b34156113cc57600080fd5b6000808367ffffffffffffffff8111156113e8576113e8612d94565b604051908082528060200260200182016040528015611411578160200160208202803683370190505b50905060008467ffffffffffffffff81111561142f5761142f612d94565b604051908082528060200260200182016040528015611458578160200160208202803683370190505b50600e5490915060009061ffff16815b8781101561166257600e805461ffff16906000611484836130e5565b82546101009290920a61ffff818102199093169183160217909155600e546114ad925016612151565b601554600e54604051634155c48560e11b815261ffff909116831860048201529194506001600160a01b0316906382ab890a906024016020604051808303816000875af1158015611502573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115269190613107565b50600e546115389061ffff168461221d565b50600061154484612398565b600e549091506115579061ffff16610d7d565b61156190886130cd565b965087158061157957506001600160a01b0381163314155b156115b65780858381518110611591576115916130b7565b60200260200101906001600160a01b031690816001600160a01b03168152505061162b565b600e54865161ffff909116908790849081106115d4576115d46130b7565b61ffff9092166020928302919091019091015260125485516001600160a01b039091169086908490811061160a5761160a6130b7565b60200260200101906001600160a01b031690816001600160a01b0316815250505b60175460ff161561164f5760016019600082825461164991906130cd565b90915550505b508061165a81613120565b915050611468565b5084156116dc576013546001600160a01b0316639dc29fac336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101889052604401600060405180830381600087803b1580156116c357600080fd5b505af11580156116d7573d6000803e3d6000fd5b505050505b60005b83518110156117745760006116f482846130cd565b6116ff9060016130cd565b90508715806117395750336001600160a01b0316858381518110611725576117256130b7565b60200260200101516001600160a01b031614155b1561176157611761858381518110611753576117536130b7565b602002602001015182612455565b508061176c81613120565b9150506116df565b5085156117de576012546001600160a01b0316635b51914233866040518363ffffffff1660e01b81526004016117ab92919061313b565b600060405180830381600087803b1580156117c557600080fd5b505af11580156117d9573d6000803e3d6000fd5b505050505b50506015805460ff60a01b191690555050505050565b60006001600160a01b03821661185f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610ac8565b506001600160a01b031660009081526003602052604090205490565b611883612ad3565b506000908152600f6020908152604091829020825161012081018452905460ff808216151583526101008083048216948401949094526201000082048116948301949094526301000000810484166060830152640100000000810484166080830152650100000000008104841660a0830152600160301b8104841660c0830152600160381b8104841660e0830152600160401b90049092169082015290565b6060600180546109d090612f9d565b6001600160a01b03821633141561198a5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610ac8565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600a546001600160a01b03163314611a205760405162461bcd60e51b8152600401610ac890612fd2565b600b55565b611a2f3383611eaf565b611a4b5760405162461bcd60e51b8152600401610ac890613007565b611a56848484610cbc565b50505050565b6000818152600260205260409020546060906001600160a01b0316611adb5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610ac8565b60145460405163c87b56dd60e01b8152600481018490526001600160a01b039091169063c87b56dd90602401600060405180830381865afa158015611b24573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109bb9190810190613195565b600a546001600160a01b03163314611b765760405162461bcd60e51b8152600401610ac890612fd2565b601580546001600160a01b0319166001600160a01b0392909216919091179055565b600a546001600160a01b03163314611bc25760405162461bcd60e51b8152600401610ac890612fd2565b6001600160a01b038116611c275760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610ac8565b610c878161246f565b600a546001600160a01b03163314611c5a5760405162461bcd60e51b8152600401610ac890612fd2565b60005b8151811015611cc257600160166000848481518110611c7e57611c7e6130b7565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580611cba81613120565b915050611c5d565b5050565b60006001600160e01b031982166380ac58cd60e01b1480611cf757506001600160e01b03198216635b5e139f60e01b145b806109bb57506301ffc9a760e01b6001600160e01b03198316146109bb565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611d4b82611013565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600a54600160a01b900460ff1615611dd25760405162461bcd60e51b815260206004820152601160248201527014185d5cd958589b194e881c185d5cd959607a1b6044820152606401610ac8565b600a805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611e0d3390565b6040516001600160a01b03909116815260200160405180910390a1565b600a54600160a01b900460ff16611e7b5760405162461bcd60e51b815260206004820152601560248201527414185d5cd958589b194e881b9bdd081c185d5cd959605a1b6044820152606401610ac8565b600a805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33611e0d565b6000818152600260205260408120546001600160a01b0316611f285760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610ac8565b6000611f3383611013565b9050806001600160a01b0316846001600160a01b03161480611f6e5750836001600160a01b0316611f6384610a53565b6001600160a01b0316145b80611f9e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316611fb982611013565b6001600160a01b0316146120215760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610ac8565b6001600160a01b0382166120835760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610ac8565b61208e8383836124c1565b612099600082611d16565b6001600160a01b03831660009081526003602052604081208054600192906120c290849061320c565b90915550506001600160a01b03821660009081526003602052604081208054600192906120f09084906130cd565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60155460408051633eca3c9560e11b815290516000926001600160a01b031691637d94792a9160048083019260209291908290030181865afa15801561219b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121bf9190613107565b326121cb60014361320c565b60405160609290921b6bffffffffffffffffffffffff191660208301524060348201524260548201526074810184905260940160408051601f1981840301815291905280516020909101201892915050565b612225612ad3565b61222e82612579565b90506010600061223d836126c4565b8152602001908152602001600020546000141561237f576000838152600f602090815260408083208451815493860151928601516060870151608088015160a089015160c08a015160e08b0151610100808d015161ffff19909b1697151561ff0019169790971760ff998a169097029690961763ffff00001916620100009589169590950263ff0000001916949094176301000000938816939093029290921765ffff0000000019166401000000009187169190910265ff000000000019161765010000000000918616919091021767ffff0000000000001916600160301b9185169190910267ff00000000000000191617600160381b918416919091021768ff00000000000000001916600160401b92909316919091029190911790558390601090612369846126c4565b81526020810191909152604001600020556109bb565b6123918361238c84612151565b61221d565b9392505050565b600d54600e5460009161ffff9091161115806123c157506123be600a60f584901c613223565b15155b156123cc57336109bb565b601254604051634f36f72560e11b8152609084901c60048201526000916001600160a01b031690639e6dee4a90602401602060405180830381865afa158015612419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243d9190613237565b90506001600160a01b0381166109bb57339392505050565b611cc2828260405180602001604052806000815250612771565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03831661251c5761251781600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61253f565b816001600160a01b0316836001600160a01b03161461253f5761253f838261277b565b6001600160a01b03821661255657610c4a81612818565b826001600160a01b0316826001600160a01b031614610c4a57610c4a82826128c7565b612581612ad3565b612590600a61ffff8416613223565b15158082526000906125a357600a6125a6565b60005b60109390931c9290506125c761ffff84166125c2836000613254565b61290b565b60ff16602083015260109290921c916125e961ffff84166125c2836001613254565b60ff16604083015260109290921c9161260b61ffff84166125c2836002613254565b60ff16608083015260109290921c9161262d61ffff84166125c2836003613254565b60ff16606083015260109290921c9161264f61ffff84166125c2836004613254565b60ff1660e083015260109290921c9161267161ffff84166125c2836005613254565b60ff1660a0830152815160109390931c926126be5761269961ffff84166125c2836006613254565b60ff1660c08301526126b461ffff84166125c2836007613254565b60ff166101008301525b50919050565b80516020808301516040808501516080860151606087015160a088015160e089015160c08a0151610100909a0151865199151560f890811b8b8b01526001600160f81b031998811b891660218c015295861b881660228b015293851b871660238a015291841b86166024890152831b85166025880152821b8416602687015295811b831660278601529490941b166028830152825180830360090181526029909201909252805191012090565b610c4a8383612985565b60006001612788846117f4565b612792919061320c565b6000838152600760205260409020549091508082146127e5576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061282a9060019061320c565b60008381526009602052604081205460088054939450909284908110612852576128526130b7565b906000526020600020015490508060088381548110612873576128736130b7565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806128ab576128ab613279565b6001900381819060005260206000200160009055905550505050565b60006128d2836117f4565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6014546040516353584b4960e11b815261ffff8416600482015260ff831660248201526000916001600160a01b03169063a6b0969290604401602060405180830381865afa158015612961573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612391919061328f565b6001600160a01b0382166129db5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610ac8565b6000818152600260205260409020546001600160a01b031615612a405760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610ac8565b612a4c600083836124c1565b6001600160a01b0382166000908152600360205260408120805460019290612a759084906130cd565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915290565b600060208284031215612b3157600080fd5b81356001600160e01b03198116811461239157600080fd5b60005b83811015612b64578181015183820152602001612b4c565b83811115611a565750506000910152565b6020815260008251806020840152612b94816040850160208701612b49565b601f01601f19169190910160400192915050565b600060208284031215612bba57600080fd5b5035919050565b6001600160a01b0381168114610c8757600080fd5b600060208284031215612be857600080fd5b813561239181612bc1565b60008060408385031215612c0657600080fd5b8235612c1181612bc1565b946020939093013593505050565b80358015158114612c2f57600080fd5b919050565b600060208284031215612c4657600080fd5b61239182612c1f565b600080600060608486031215612c6457600080fd5b8335612c6f81612bc1565b92506020840135612c7f81612bc1565b929592945050506040919091013590565b60008060408385031215612ca357600080fd5b82359150612cb360208401612c1f565b90509250929050565b60006101208201905082511515825260ff60208401511660208301526040830151612cec604084018260ff169052565b506060830151612d01606084018260ff169052565b506080830151612d16608084018260ff169052565b5060a0830151612d2b60a084018260ff169052565b5060c0830151612d4060c084018260ff169052565b5060e0830151612d5560e084018260ff169052565b506101009283015160ff16919092015290565b60008060408385031215612d7b57600080fd5b8235612d8681612bc1565b9150612cb360208401612c1f565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612dd357612dd3612d94565b604052919050565b600067ffffffffffffffff821115612df557612df5612d94565b50601f01601f191660200190565b60008060008060808587031215612e1957600080fd5b8435612e2481612bc1565b93506020850135612e3481612bc1565b925060408501359150606085013567ffffffffffffffff811115612e5757600080fd5b8501601f81018713612e6857600080fd5b8035612e7b612e7682612ddb565b612daa565b818152886020838501011115612e9057600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b60008060408385031215612ec557600080fd5b8235612ed081612bc1565b91506020830135612ee081612bc1565b809150509250929050565b60006020808385031215612efe57600080fd5b823567ffffffffffffffff80821115612f1657600080fd5b818501915085601f830112612f2a57600080fd5b813581811115612f3c57612f3c612d94565b8060051b9150612f4d848301612daa565b8181529183018401918481019088841115612f6757600080fd5b938501935b83851015612f915784359250612f8183612bc1565b8282529385019390850190612f6c565b98975050505050505050565b600181811c90821680612fb157607f821691505b602082108114156126be57634e487b7160e01b600052602260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561308857613088613058565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826130b2576130b261308d565b500490565b634e487b7160e01b600052603260045260246000fd5b600082198211156130e0576130e0613058565b500190565b600061ffff808316818114156130fd576130fd613058565b6001019392505050565b60006020828403121561311957600080fd5b5051919050565b600060001982141561313457613134613058565b5060010190565b6001600160a01b038316815260406020808301829052835191830182905260009184820191906060850190845b8181101561318857845161ffff1683529383019391830191600101613168565b5090979650505050505050565b6000602082840312156131a757600080fd5b815167ffffffffffffffff8111156131be57600080fd5b8201601f810184136131cf57600080fd5b80516131dd612e7682612ddb565b8181528560208385010111156131f257600080fd5b613203826020830160208601612b49565b95945050505050565b60008282101561321e5761321e613058565b500390565b6000826132325761323261308d565b500690565b60006020828403121561324957600080fd5b815161239181612bc1565b600060ff821660ff84168060ff0382111561327157613271613058565b019392505050565b634e487b7160e01b600052603160045260246000fd5b6000602082840312156132a157600080fd5b815160ff8116811461239157600080fdfea26469706673582212205a4dd2836e3861496b084418b43ee337de79d872c422eb2b064735460a6b2d0764736f6c634300080b0033",
  "bytecodeSha1": "eb9979448b77d8fb0b3f6930b7a2cdd1591ec561",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "PoliceAndThief",
  "coverageMap": {
    "branches": {
      "11": {},
      "12": {},
      "13": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {},
      "2": {},
      "20": {
        "Ownable.transferOwnership": {
          "188": [
            1528,
            1550,
            true
          ]
        }
      },
      "21": {},
      "22": {
        "PoliceAndThief.generate": {
          "166": [
            6033,
            6075,
            false
          ]
        },
        "PoliceAndThief.mint": {
          "147": [
            2681,
            2686,
            true
          ],
          "148": [
            2690,
            2703,
            true
          ],
          "149": [
            2744,
            2757,
            false
          ],
          "150": [
            2781,
            2804,
            true
          ],
          "151": [
            2853,
            2878,
            true
          ],
          "152": [
            2909,
            2938,
            true
          ],
          "153": [
            2978,
            2988,
            false
          ],
          "154": [
            2992,
            3010,
            true
          ],
          "155": [
            3049,
            3069,
            false
          ],
          "156": [
            3110,
            3140,
            true
          ],
          "157": [
            3227,
            3259,
            true
          ],
          "158": [
            3325,
            3339,
            true
          ],
          "159": [
            3870,
            3875,
            true
          ],
          "160": [
            3879,
            3904,
            false
          ],
          "161": [
            4080,
            4093,
            false
          ],
          "162": [
            4176,
            4193,
            false
          ],
          "163": [
            4353,
            4358,
            true
          ],
          "164": [
            4362,
            4387,
            false
          ],
          "165": [
            4469,
            4474,
            false
          ]
        },
        "PoliceAndThief.mintCost": {
          "144": [
            4884,
            4906,
            false
          ],
          "145": [
            4930,
            4961,
            false
          ],
          "146": [
            4995,
            5026,
            false
          ]
        },
        "PoliceAndThief.selectRecipient": {
          "167": [
            7249,
            7270,
            true
          ],
          "168": [
            7274,
            7299,
            false
          ],
          "169": [
            7497,
            7518,
            false
          ]
        },
        "PoliceAndThief.selectTraits": {
          "170": [
            8560,
            8569,
            false
          ]
        },
        "PoliceAndThief.setPaused": {
          "141": [
            11245,
            11252,
            false
          ]
        },
        "PoliceAndThief.transferFrom": {
          "142": [
            5321,
            5350,
            false
          ],
          "143": [
            5389,
            5430,
            true
          ]
        }
      },
      "3": {},
      "5": {
        "ERC721._mint": {
          "180": [
            9654,
            9670,
            true
          ]
        },
        "ERC721._transfer": {
          "178": [
            10976,
            11007,
            true
          ],
          "179": [
            11092,
            11108,
            true
          ]
        },
        "ERC721.approve": {
          "171": [
            3857,
            3868,
            true
          ],
          "172": [
            3938,
            3959,
            true
          ],
          "173": [
            3963,
            4000,
            true
          ]
        },
        "ERC721.balanceOf": {
          "175": [
            1990,
            2009,
            true
          ]
        },
        "ERC721.ownerOf": {
          "174": [
            2372,
            2391,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "177": [
            6053,
            6094,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "176": [
            4674,
            4698,
            true
          ]
        }
      },
      "6": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "183": [
            2966,
            2984,
            false
          ],
          "184": [
            3061,
            3071,
            false
          ],
          "185": [
            3158,
            3174,
            false
          ],
          "186": [
            3256,
            3266,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "187": [
            5309,
            5337,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "182": [
            2022,
            2060,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "181": [
            1459,
            1490,
            true
          ]
        }
      },
      "7": {},
      "8": {}
    },
    "statements": {
      "11": {},
      "12": {},
      "13": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {},
      "2": {
        "Context._msgSender": {
          "11": [
            659,
            676
          ]
        }
      },
      "20": {
        "Ownable._setOwner": {
          "98": [
            1746,
            1763
          ],
          "99": [
            1773,
            1818
          ]
        },
        "Ownable.owner": {
          "4": [
            1053,
            1066
          ]
        },
        "Ownable.transferOwnership": {
          "67": [
            1507,
            1614
          ],
          "68": [
            1624,
            1643
          ]
        }
      },
      "21": {
        "Pauseable._pause": {
          "75": [
            1859,
            1873
          ],
          "76": [
            1883,
            1908
          ]
        },
        "Pauseable._unpause": {
          "77": [
            2105,
            2120
          ],
          "78": [
            2130,
            2157
          ]
        },
        "Pauseable.paused": {
          "2": [
            1096,
            1110
          ]
        }
      },
      "22": {
        "PoliceAndThief.changePrice": {
          "61": [
            11856,
            11875
          ]
        },
        "PoliceAndThief.generate": {
          "90": [
            5997,
            6019
          ],
          "91": [
            6091,
            6115
          ],
          "92": [
            6129,
            6176
          ],
          "93": [
            6190,
            6198
          ],
          "94": [
            6218,
            6256
          ]
        },
        "PoliceAndThief.getPaidTokens": {
          "1": [
            10374,
            10392
          ]
        },
        "PoliceAndThief.getTokenTraits": {
          "56": [
            10258,
            10285
          ]
        },
        "PoliceAndThief.isStakingActive": {
          "3": [
            10480,
            10500
          ]
        },
        "PoliceAndThief.mint": {
          "32": [
            2672,
            2729
          ],
          "33": [
            2773,
            2824
          ],
          "34": [
            2845,
            2891
          ],
          "35": [
            2901,
            2960
          ],
          "36": [
            2970,
            3034
          ],
          "37": [
            3085,
            3205
          ],
          "38": [
            3219,
            3286
          ],
          "39": [
            3317,
            3340
          ],
          "40": [
            3622,
            3630
          ],
          "41": [
            3644,
            3665
          ],
          "42": [
            3679,
            3713
          ],
          "43": [
            3727,
            3749
          ],
          "44": [
            3818,
            3851
          ],
          "45": [
            3924,
            3945
          ],
          "46": [
            3984,
            4004
          ],
          "47": [
            4022,
            4047
          ],
          "48": [
            4113,
            4137
          ],
          "49": [
            3603,
            3606
          ],
          "50": [
            4195,
            4233
          ],
          "51": [
            4407,
            4431
          ],
          "52": [
            4283,
            4286
          ],
          "53": [
            4476,
            4525
          ]
        },
        "PoliceAndThief.mintCost": {
          "20": [
            4908,
            4916
          ],
          "21": [
            4963,
            4981
          ],
          "22": [
            5028,
            5046
          ],
          "23": [
            5056,
            5074
          ]
        },
        "PoliceAndThief.random": {
          "89": [
            9763,
            10089
          ]
        },
        "PoliceAndThief.selectRecipient": {
          "95": [
            7313,
            7332
          ],
          "96": [
            7520,
            7539
          ]
        },
        "PoliceAndThief.selectTrait": {
          "134": [
            6805,
            6847
          ]
        },
        "PoliceAndThief.selectTraits": {
          "106": [
            7910,
            7947
          ],
          "107": [
            8000,
            8011
          ],
          "108": [
            8021,
            8078
          ],
          "109": [
            8089,
            8100
          ],
          "110": [
            8110,
            8164
          ],
          "111": [
            8175,
            8186
          ],
          "112": [
            8196,
            8256
          ],
          "113": [
            8267,
            8278
          ],
          "114": [
            8288,
            8342
          ],
          "115": [
            8353,
            8364
          ],
          "116": [
            8374,
            8433
          ],
          "117": [
            8444,
            8455
          ],
          "118": [
            8465,
            8523
          ],
          "119": [
            8534,
            8545
          ],
          "120": [
            8585,
            8643
          ],
          "121": [
            8657,
            8717
          ]
        },
        "PoliceAndThief.setBank": {
          "12": [
            10734,
            10753
          ]
        },
        "PoliceAndThief.setPaidTokens": {
          "26": [
            11077,
            11102
          ]
        },
        "PoliceAndThief.setPaused": {
          "16": [
            11254,
            11262
          ],
          "17": [
            11277,
            11287
          ]
        },
        "PoliceAndThief.setRandomSource": {
          "66": [
            2360,
            2380
          ]
        },
        "PoliceAndThief.setWhitelist": {
          "69": [
            11432,
            11460
          ],
          "70": [
            11413,
            11416
          ]
        },
        "PoliceAndThief.structToHash": {
          "122": [
            9030,
            9494
          ]
        },
        "PoliceAndThief.tokenURI": {
          "64": [
            11628,
            11738
          ],
          "65": [
            11748,
            11779
          ]
        },
        "PoliceAndThief.transferFrom": {
          "18": [
            5364,
            5513
          ],
          "19": [
            5523,
            5551
          ]
        },
        "PoliceAndThief.withdraw": {
          "27": [
            10882,
            10930
          ]
        }
      },
      "3": {
        "ERC165.supportsInterface": {
          "72": [
            908,
            955
          ]
        }
      },
      "5": {
        "ERC721._approve": {
          "73": [
            11615,
            11644
          ],
          "74": [
            11654,
            11705
          ]
        },
        "ERC721._exists": {
          "8": [
            7804,
            7841
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "79": [
            8151,
            8258
          ],
          "80": [
            8317,
            8437
          ]
        },
        "ERC721._mint": {
          "135": [
            9646,
            9707
          ],
          "136": [
            9717,
            9775
          ],
          "137": [
            9786,
            9831
          ],
          "138": [
            9842,
            9860
          ],
          "139": [
            9870,
            9891
          ],
          "140": [
            9902,
            9940
          ]
        },
        "ERC721._safeMint": {
          "97": [
            8849,
            8875
          ],
          "123": [
            9228,
            9246
          ]
        },
        "ERC721._transfer": {
          "81": [
            10955,
            11074
          ],
          "82": [
            11084,
            11149
          ],
          "83": [
            11160,
            11199
          ],
          "84": [
            11261,
            11290
          ],
          "85": [
            11301,
            11321
          ],
          "86": [
            11331,
            11349
          ],
          "87": [
            11359,
            11380
          ],
          "88": [
            11391,
            11423
          ]
        },
        "ERC721.approve": {
          "13": [
            3849,
            3906
          ],
          "14": [
            3917,
            4082
          ],
          "15": [
            4093,
            4114
          ]
        },
        "ERC721.balanceOf": {
          "54": [
            1969,
            2077
          ],
          "55": [
            2087,
            2110
          ]
        },
        "ERC721.getApproved": {
          "9": [
            4321,
            4428
          ],
          "10": [
            4439,
            4470
          ]
        },
        "ERC721.isApprovedForAll": {
          "5": [
            5085,
            5127
          ]
        },
        "ERC721.name": {
          "7": [
            2628,
            2640
          ]
        },
        "ERC721.ownerOf": {
          "31": [
            2351,
            2458
          ]
        },
        "ERC721.safeTransferFrom": {
          "28": [
            5759,
            5798
          ],
          "62": [
            6032,
            6169
          ],
          "63": [
            6179,
            6210
          ]
        },
        "ERC721.setApprovalForAll": {
          "58": [
            4666,
            4728
          ],
          "59": [
            4739,
            4792
          ],
          "60": [
            4802,
            4855
          ]
        },
        "ERC721.supportsInterface": {
          "71": [
            1593,
            1768
          ]
        },
        "ERC721.symbol": {
          "57": [
            2792,
            2806
          ]
        }
      },
      "6": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "101": [
            4121,
            4165
          ],
          "102": [
            4175,
            4199
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "132": [
            3764,
            3798
          ],
          "133": [
            3808,
            3843
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "100": [
            3000,
            3040
          ],
          "103": [
            3087,
            3134
          ],
          "104": [
            3190,
            3235
          ],
          "105": [
            3282,
            3322
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "128": [
            6824,
            6860
          ],
          "129": [
            6928,
            6969
          ],
          "130": [
            7090,
            7121
          ],
          "131": [
            7131,
            7147
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "124": [
            5424,
            5468
          ],
          "125": [
            5540,
            5583
          ],
          "126": [
            5714,
            5747
          ],
          "127": [
            5757,
            5798
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "6": [
            1071,
            1192
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "29": [
            2001,
            2130
          ],
          "30": [
            2140,
            2164
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "24": [
            1438,
            1559
          ],
          "25": [
            1569,
            1602
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "0": [
            1760,
            1784
          ]
        }
      },
      "7": {},
      "8": {}
    }
  },
  "dependencies": [
    "Context",
    "ERC165",
    "ERC721",
    "ERC721Enumerable",
    "IBank",
    "IERC165",
    "IERC721",
    "IERC721Enumerable",
    "IERC721Metadata",
    "ILOOT",
    "IPoliceAndThief",
    "ISeed",
    "ITraits",
    "Ownable",
    "Pauseable"
  ],
  "deployedBytecode": "6080604052600436106102935760003560e01c8063712d2cc71161015a578063c002d23d116100c1578063e2aafa211161007a578063e2aafa2114610893578063e985e9c5146108c3578063f0292a031461090c578063f2fde38b14610922578063f421764814610942578063f47c84c51461096257600080fd5b8063c002d23d14610733578063c084f54014610749578063c87b56dd1461075f578063d773826d1461077f578063e05c57bf1461079f578063e1fc334f1461087357600080fd5b8063a1b8f37411610113578063a1b8f3741461066d578063a22cb4651461069a578063a2b40d19146106ba578063a6ac4b35146106da578063a88e0996146106f9578063b88d4fde1461071357600080fd5b8063712d2cc7146105b757806376cdb03b146105cd5780638da5cb5b146105ed57806394e568471461060b57806395d89b41146106385780639b7b2ab01461064d57600080fd5b8063302150e5116101fe5780634f6ccce7116101b75780634f6ccce7146105085780635c975abb1461052857806361f64457146105475780636352211e1461056457806367f68fac1461058457806370a082311461059757600080fd5b8063302150e51461045a5780633431a753146104705780633ccfd60b146104905780634018b1f8146104a557806342842e0e146104ba5780634f02c420146104da57600080fd5b806316c38b3c1161025057806316c38b3c1461038957806317b8e1cf146103a957806318160ddd146103db57806323b872dd146103fa57806327de8f271461041a5780632f745c591461043a57600080fd5b806301ffc9a71461029857806306fdde03146102cd578063081812fc146102ef578063090d23b914610327578063095ea7b3146103495780630c89b76614610369575b600080fd5b3480156102a457600080fd5b506102b86102b3366004612b1f565b610996565b60405190151581526020015b60405180910390f35b3480156102d957600080fd5b506102e26109c1565b6040516102c49190612b75565b3480156102fb57600080fd5b5061030f61030a366004612ba8565b610a53565b6040516001600160a01b0390911681526020016102c4565b34801561033357600080fd5b50610347610342366004612bd6565b610aed565b005b34801561035557600080fd5b50610347610364366004612bf3565b610b39565b34801561037557600080fd5b5060155461030f906001600160a01b031681565b34801561039557600080fd5b506103476103a4366004612c34565b610c4f565b3480156103b557600080fd5b506103c96103c4366004612ba8565b610c92565b60405160ff90911681526020016102c4565b3480156103e757600080fd5b506008545b6040519081526020016102c4565b34801561040657600080fd5b50610347610415366004612c4f565b610cbc565b34801561042657600080fd5b506103ec610435366004612ba8565b610d7d565b34801561044657600080fd5b506103ec610455366004612bf3565b610e3d565b34801561046657600080fd5b506103ec60185481565b34801561047c57600080fd5b5061034761048b366004612ba8565b610ed3565b34801561049c57600080fd5b50610347610f02565b3480156104b157600080fd5b50600d546103ec565b3480156104c657600080fd5b506103476104d5366004612c4f565b610f65565b3480156104e657600080fd5b50600e546104f59061ffff1681565b60405161ffff90911681526020016102c4565b34801561051457600080fd5b506103ec610523366004612ba8565b610f80565b34801561053457600080fd5b50600a54600160a01b900460ff166102b8565b34801561055357600080fd5b50601754610100900460ff166102b8565b34801561057057600080fd5b5061030f61057f366004612ba8565b611013565b610347610592366004612c90565b61108a565b3480156105a357600080fd5b506103ec6105b2366004612bd6565b6117f4565b3480156105c357600080fd5b506103ec60195481565b3480156105d957600080fd5b5060125461030f906001600160a01b031681565b3480156105f957600080fd5b50600a546001600160a01b031661030f565b34801561061757600080fd5b5061062b610626366004612ba8565b61187b565b6040516102c49190612cbc565b34801561064457600080fd5b506102e2611922565b34801561065957600080fd5b5060135461030f906001600160a01b031681565b34801561067957600080fd5b506103ec610688366004612ba8565b60106020526000908152604090205481565b3480156106a657600080fd5b506103476106b5366004612d68565b611931565b3480156106c657600080fd5b506103476106d5366004612ba8565b6119f6565b3480156106e657600080fd5b506017546102b890610100900460ff1681565b34801561070557600080fd5b506017546102b89060ff1681565b34801561071f57600080fd5b5061034761072e366004612e03565b611a25565b34801561073f57600080fd5b506103ec600b5481565b34801561075557600080fd5b506103ec600d5481565b34801561076b57600080fd5b506102e261077a366004612ba8565b611a5c565b34801561078b57600080fd5b5061034761079a366004612bd6565b611b4c565b3480156107ab57600080fd5b506108216107ba366004612ba8565b600f6020526000908152604090205460ff808216916101008104821691620100008204811691630100000081048216916401000000008204811691650100000000008104821691600160301b8204811691600160381b8104821691600160401b9091041689565b604080519915158a5260ff98891660208b01529688169689019690965293861660608801529185166080870152841660a0860152831660c0850152821660e084015216610100820152610120016102c4565b34801561087f57600080fd5b5060145461030f906001600160a01b031681565b34801561089f57600080fd5b506102b86108ae366004612bd6565b60166020526000908152604090205460ff1681565b3480156108cf57600080fd5b506102b86108de366004612eb2565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561091857600080fd5b506103ec600c5481565b34801561092e57600080fd5b5061034761093d366004612bd6565b611b98565b34801561094e57600080fd5b5061034761095d366004612eeb565b611c30565b34801561096e57600080fd5b506103ec7f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b0319821663780e9d6360e01b14806109bb57506109bb82611cc6565b92915050565b6060600080546109d090612f9d565b80601f01602080910402602001604051908101604052809291908181526020018280546109fc90612f9d565b8015610a495780601f10610a1e57610100808354040283529160200191610a49565b820191906000526020600020905b815481529060010190602001808311610a2c57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610ad15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600a546001600160a01b03163314610b175760405162461bcd60e51b8152600401610ac890612fd2565b601280546001600160a01b0319166001600160a01b0392909216919091179055565b6000610b4482611013565b9050806001600160a01b0316836001600160a01b03161415610bb25760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610ac8565b336001600160a01b0382161480610bce5750610bce81336108de565b610c405760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610ac8565b610c4a8383611d16565b505050565b600a546001600160a01b03163314610c795760405162461bcd60e51b8152600401610ac890612fd2565b8015610c8a57610c87611d84565b50565b610c87611e2a565b60118160128110610ca257600080fd5b60209182820401919006915054906101000a900460ff1681565b601554600160a01b900460ff1615610d065760405162461bcd60e51b815260206004820152600d60248201526c4e6f207265656e7472616e637960981b6044820152606401610ac8565b6015805460ff60a01b1916600160a01b1790556012546001600160a01b0316610d2c3390565b6001600160a01b031614610d6057610d443382611eaf565b610d605760405162461bcd60e51b8152600401610ac890613007565b610d6b838383611fa6565b50506015805460ff60a01b1916905550565b6000600d548211610d9057506000919050565b6005610dbd7f0000000000000000000000000000000000000000000000000000000000000000600261306e565b610dc791906130a3565b8211610dde575069043c33c1937564800000919050565b6005610e0b7f0000000000000000000000000000000000000000000000000000000000000000600461306e565b610e1591906130a3565b8211610e2c5750690878678326eac9000000919050565b50690cb49b44ba602d800000919050565b6000610e48836117f4565b8210610eaa5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610ac8565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b03163314610efd5760405162461bcd60e51b8152600401610ac890612fd2565b600d55565b600a546001600160a01b03163314610f2c5760405162461bcd60e51b8152600401610ac890612fd2565b600a546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610c87573d6000803e3d6000fd5b610c4a83838360405180602001604052806000815250611a25565b6000610f8b60085490565b8210610fee5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610ac8565b60088281548110611001576110016130b7565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806109bb5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610ac8565b601554600160a01b900460ff16156110d45760405162461bcd60e51b815260206004820152600d60248201526c4e6f207265656e7472616e637960981b6044820152606401610ac8565b6015805460ff60a01b1916600160a01b1790556110fb600a5460ff600160a01b9091041690565b1561113c5760405162461bcd60e51b815260206004820152601160248201527014185d5cd958589b194e881c185d5cd959607a1b6044820152606401610ac8565b8015806111505750601754610100900460ff165b6111945760405162461bcd60e51b815260206004820152601560248201527414dd185ada5b99c81b9bdd081858dd1a5d985d1959605a1b6044820152606401610ac8565b60175460ff16156111f0573360009081526016602052604090205460ff166111f05760405162461bcd60e51b815260206004820152600f60248201526e139bdd081dda1a5d195b1a5cdd1959608a1b6044820152606401610ac8565b32331461122a5760405162461bcd60e51b81526020600482015260086024820152674f6e6c7920454f4160c01b6044820152606401610ac8565b600e547f00000000000000000000000000000000000000000000000000000000000000009061125e90849061ffff166130cd565b11156112a05760405162461bcd60e51b8152602060048201526011602482015270105b1b081d1bdad95b9cc81b5a5b9d1959607a1b6044820152606401610ac8565b6000821180156112b25750600c548211155b6112f45760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081b5a5b9d08185b5bdd5b9d606a1b6044820152606401610ac8565b600d54600e5461ffff1610156113c157600d54600e5461131990849061ffff166130cd565b11156113675760405162461bcd60e51b815260206004820152601f60248201527f416c6c20746f6b656e73206f6e2d73616c6520616c726561647920736f6c64006044820152606401610ac8565b34600b5483611376919061306e565b146113bc5760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081c185e5b595b9d08185b5bdd5b9d60521b6044820152606401610ac8565b6113cc565b34156113cc57600080fd5b6000808367ffffffffffffffff8111156113e8576113e8612d94565b604051908082528060200260200182016040528015611411578160200160208202803683370190505b50905060008467ffffffffffffffff81111561142f5761142f612d94565b604051908082528060200260200182016040528015611458578160200160208202803683370190505b50600e5490915060009061ffff16815b8781101561166257600e805461ffff16906000611484836130e5565b82546101009290920a61ffff818102199093169183160217909155600e546114ad925016612151565b601554600e54604051634155c48560e11b815261ffff909116831860048201529194506001600160a01b0316906382ab890a906024016020604051808303816000875af1158015611502573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115269190613107565b50600e546115389061ffff168461221d565b50600061154484612398565b600e549091506115579061ffff16610d7d565b61156190886130cd565b965087158061157957506001600160a01b0381163314155b156115b65780858381518110611591576115916130b7565b60200260200101906001600160a01b031690816001600160a01b03168152505061162b565b600e54865161ffff909116908790849081106115d4576115d46130b7565b61ffff9092166020928302919091019091015260125485516001600160a01b039091169086908490811061160a5761160a6130b7565b60200260200101906001600160a01b031690816001600160a01b0316815250505b60175460ff161561164f5760016019600082825461164991906130cd565b90915550505b508061165a81613120565b915050611468565b5084156116dc576013546001600160a01b0316639dc29fac336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101889052604401600060405180830381600087803b1580156116c357600080fd5b505af11580156116d7573d6000803e3d6000fd5b505050505b60005b83518110156117745760006116f482846130cd565b6116ff9060016130cd565b90508715806117395750336001600160a01b0316858381518110611725576117256130b7565b60200260200101516001600160a01b031614155b1561176157611761858381518110611753576117536130b7565b602002602001015182612455565b508061176c81613120565b9150506116df565b5085156117de576012546001600160a01b0316635b51914233866040518363ffffffff1660e01b81526004016117ab92919061313b565b600060405180830381600087803b1580156117c557600080fd5b505af11580156117d9573d6000803e3d6000fd5b505050505b50506015805460ff60a01b191690555050505050565b60006001600160a01b03821661185f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610ac8565b506001600160a01b031660009081526003602052604090205490565b611883612ad3565b506000908152600f6020908152604091829020825161012081018452905460ff808216151583526101008083048216948401949094526201000082048116948301949094526301000000810484166060830152640100000000810484166080830152650100000000008104841660a0830152600160301b8104841660c0830152600160381b8104841660e0830152600160401b90049092169082015290565b6060600180546109d090612f9d565b6001600160a01b03821633141561198a5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610ac8565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600a546001600160a01b03163314611a205760405162461bcd60e51b8152600401610ac890612fd2565b600b55565b611a2f3383611eaf565b611a4b5760405162461bcd60e51b8152600401610ac890613007565b611a56848484610cbc565b50505050565b6000818152600260205260409020546060906001600160a01b0316611adb5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610ac8565b60145460405163c87b56dd60e01b8152600481018490526001600160a01b039091169063c87b56dd90602401600060405180830381865afa158015611b24573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109bb9190810190613195565b600a546001600160a01b03163314611b765760405162461bcd60e51b8152600401610ac890612fd2565b601580546001600160a01b0319166001600160a01b0392909216919091179055565b600a546001600160a01b03163314611bc25760405162461bcd60e51b8152600401610ac890612fd2565b6001600160a01b038116611c275760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610ac8565b610c878161246f565b600a546001600160a01b03163314611c5a5760405162461bcd60e51b8152600401610ac890612fd2565b60005b8151811015611cc257600160166000848481518110611c7e57611c7e6130b7565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580611cba81613120565b915050611c5d565b5050565b60006001600160e01b031982166380ac58cd60e01b1480611cf757506001600160e01b03198216635b5e139f60e01b145b806109bb57506301ffc9a760e01b6001600160e01b03198316146109bb565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611d4b82611013565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600a54600160a01b900460ff1615611dd25760405162461bcd60e51b815260206004820152601160248201527014185d5cd958589b194e881c185d5cd959607a1b6044820152606401610ac8565b600a805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611e0d3390565b6040516001600160a01b03909116815260200160405180910390a1565b600a54600160a01b900460ff16611e7b5760405162461bcd60e51b815260206004820152601560248201527414185d5cd958589b194e881b9bdd081c185d5cd959605a1b6044820152606401610ac8565b600a805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33611e0d565b6000818152600260205260408120546001600160a01b0316611f285760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610ac8565b6000611f3383611013565b9050806001600160a01b0316846001600160a01b03161480611f6e5750836001600160a01b0316611f6384610a53565b6001600160a01b0316145b80611f9e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316611fb982611013565b6001600160a01b0316146120215760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610ac8565b6001600160a01b0382166120835760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610ac8565b61208e8383836124c1565b612099600082611d16565b6001600160a01b03831660009081526003602052604081208054600192906120c290849061320c565b90915550506001600160a01b03821660009081526003602052604081208054600192906120f09084906130cd565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60155460408051633eca3c9560e11b815290516000926001600160a01b031691637d94792a9160048083019260209291908290030181865afa15801561219b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121bf9190613107565b326121cb60014361320c565b60405160609290921b6bffffffffffffffffffffffff191660208301524060348201524260548201526074810184905260940160408051601f1981840301815291905280516020909101201892915050565b612225612ad3565b61222e82612579565b90506010600061223d836126c4565b8152602001908152602001600020546000141561237f576000838152600f602090815260408083208451815493860151928601516060870151608088015160a089015160c08a015160e08b0151610100808d015161ffff19909b1697151561ff0019169790971760ff998a169097029690961763ffff00001916620100009589169590950263ff0000001916949094176301000000938816939093029290921765ffff0000000019166401000000009187169190910265ff000000000019161765010000000000918616919091021767ffff0000000000001916600160301b9185169190910267ff00000000000000191617600160381b918416919091021768ff00000000000000001916600160401b92909316919091029190911790558390601090612369846126c4565b81526020810191909152604001600020556109bb565b6123918361238c84612151565b61221d565b9392505050565b600d54600e5460009161ffff9091161115806123c157506123be600a60f584901c613223565b15155b156123cc57336109bb565b601254604051634f36f72560e11b8152609084901c60048201526000916001600160a01b031690639e6dee4a90602401602060405180830381865afa158015612419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243d9190613237565b90506001600160a01b0381166109bb57339392505050565b611cc2828260405180602001604052806000815250612771565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03831661251c5761251781600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61253f565b816001600160a01b0316836001600160a01b03161461253f5761253f838261277b565b6001600160a01b03821661255657610c4a81612818565b826001600160a01b0316826001600160a01b031614610c4a57610c4a82826128c7565b612581612ad3565b612590600a61ffff8416613223565b15158082526000906125a357600a6125a6565b60005b60109390931c9290506125c761ffff84166125c2836000613254565b61290b565b60ff16602083015260109290921c916125e961ffff84166125c2836001613254565b60ff16604083015260109290921c9161260b61ffff84166125c2836002613254565b60ff16608083015260109290921c9161262d61ffff84166125c2836003613254565b60ff16606083015260109290921c9161264f61ffff84166125c2836004613254565b60ff1660e083015260109290921c9161267161ffff84166125c2836005613254565b60ff1660a0830152815160109390931c926126be5761269961ffff84166125c2836006613254565b60ff1660c08301526126b461ffff84166125c2836007613254565b60ff166101008301525b50919050565b80516020808301516040808501516080860151606087015160a088015160e089015160c08a0151610100909a0151865199151560f890811b8b8b01526001600160f81b031998811b891660218c015295861b881660228b015293851b871660238a015291841b86166024890152831b85166025880152821b8416602687015295811b831660278601529490941b166028830152825180830360090181526029909201909252805191012090565b610c4a8383612985565b60006001612788846117f4565b612792919061320c565b6000838152600760205260409020549091508082146127e5576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061282a9060019061320c565b60008381526009602052604081205460088054939450909284908110612852576128526130b7565b906000526020600020015490508060088381548110612873576128736130b7565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806128ab576128ab613279565b6001900381819060005260206000200160009055905550505050565b60006128d2836117f4565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6014546040516353584b4960e11b815261ffff8416600482015260ff831660248201526000916001600160a01b03169063a6b0969290604401602060405180830381865afa158015612961573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612391919061328f565b6001600160a01b0382166129db5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610ac8565b6000818152600260205260409020546001600160a01b031615612a405760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610ac8565b612a4c600083836124c1565b6001600160a01b0382166000908152600360205260408120805460019290612a759084906130cd565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915290565b600060208284031215612b3157600080fd5b81356001600160e01b03198116811461239157600080fd5b60005b83811015612b64578181015183820152602001612b4c565b83811115611a565750506000910152565b6020815260008251806020840152612b94816040850160208701612b49565b601f01601f19169190910160400192915050565b600060208284031215612bba57600080fd5b5035919050565b6001600160a01b0381168114610c8757600080fd5b600060208284031215612be857600080fd5b813561239181612bc1565b60008060408385031215612c0657600080fd5b8235612c1181612bc1565b946020939093013593505050565b80358015158114612c2f57600080fd5b919050565b600060208284031215612c4657600080fd5b61239182612c1f565b600080600060608486031215612c6457600080fd5b8335612c6f81612bc1565b92506020840135612c7f81612bc1565b929592945050506040919091013590565b60008060408385031215612ca357600080fd5b82359150612cb360208401612c1f565b90509250929050565b60006101208201905082511515825260ff60208401511660208301526040830151612cec604084018260ff169052565b506060830151612d01606084018260ff169052565b506080830151612d16608084018260ff169052565b5060a0830151612d2b60a084018260ff169052565b5060c0830151612d4060c084018260ff169052565b5060e0830151612d5560e084018260ff169052565b506101009283015160ff16919092015290565b60008060408385031215612d7b57600080fd5b8235612d8681612bc1565b9150612cb360208401612c1f565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612dd357612dd3612d94565b604052919050565b600067ffffffffffffffff821115612df557612df5612d94565b50601f01601f191660200190565b60008060008060808587031215612e1957600080fd5b8435612e2481612bc1565b93506020850135612e3481612bc1565b925060408501359150606085013567ffffffffffffffff811115612e5757600080fd5b8501601f81018713612e6857600080fd5b8035612e7b612e7682612ddb565b612daa565b818152886020838501011115612e9057600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b60008060408385031215612ec557600080fd5b8235612ed081612bc1565b91506020830135612ee081612bc1565b809150509250929050565b60006020808385031215612efe57600080fd5b823567ffffffffffffffff80821115612f1657600080fd5b818501915085601f830112612f2a57600080fd5b813581811115612f3c57612f3c612d94565b8060051b9150612f4d848301612daa565b8181529183018401918481019088841115612f6757600080fd5b938501935b83851015612f915784359250612f8183612bc1565b8282529385019390850190612f6c565b98975050505050505050565b600181811c90821680612fb157607f821691505b602082108114156126be57634e487b7160e01b600052602260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561308857613088613058565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826130b2576130b261308d565b500490565b634e487b7160e01b600052603260045260246000fd5b600082198211156130e0576130e0613058565b500190565b600061ffff808316818114156130fd576130fd613058565b6001019392505050565b60006020828403121561311957600080fd5b5051919050565b600060001982141561313457613134613058565b5060010190565b6001600160a01b038316815260406020808301829052835191830182905260009184820191906060850190845b8181101561318857845161ffff1683529383019391830191600101613168565b5090979650505050505050565b6000602082840312156131a757600080fd5b815167ffffffffffffffff8111156131be57600080fd5b8201601f810184136131cf57600080fd5b80516131dd612e7682612ddb565b8181528560208385010111156131f257600080fd5b613203826020830160208601612b49565b95945050505050565b60008282101561321e5761321e613058565b500390565b6000826132325761323261308d565b500690565b60006020828403121561324957600080fd5b815161239181612bc1565b600060ff821660ff84168060ff0382111561327157613271613058565b019392505050565b634e487b7160e01b600052603160045260246000fd5b6000602082840312156132a157600080fd5b815160ff8116811461239157600080fdfea26469706673582212205a4dd2836e3861496b084418b43ee337de79d872c422eb2b064735460a6b2d0764736f6c634300080b0033",
  "deployedSourceMap": "298:11586:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;909:290:6;;;;;;;;;;-1:-1:-1;909:290:6;;;;;:::i;:::-;;:::i;:::-;;;470:14:24;;463:22;445:41;;433:2;418:18;909:290:6;;;;;;;;2549:98:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4182:295::-;;;;;;;;;;-1:-1:-1;4182:295:5;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1497:32:24;;;1479:51;;1467:2;1452:18;4182:295:5;1333:203:24;10673:87:22;;;;;;;;;;-1:-1:-1;10673:87:22;;;;;:::i;:::-;;:::i;:::-;;3720:401:5;;;;;;;;;;-1:-1:-1;3720:401:5;;;;;:::i;:::-;;:::i;1539:25:22:-;;;;;;;;;;-1:-1:-1;1539:25:22;;;;-1:-1:-1;;;;;1539:25:22;;;11179:115;;;;;;;;;;-1:-1:-1;11179:115:22;;;;;:::i;:::-;;:::i;1220:25::-;;;;;;;;;;-1:-1:-1;1220:25:22;;;;;:::i;:::-;;:::i;:::-;;;3082:4:24;3070:17;;;3052:36;;3040:2;3025:18;1220:25:22;2910:184:24;1680:111:6;;;;;;;;;;-1:-1:-1;1767:10:6;:17;1680:111;;;3245:25:24;;;3233:2;3218:18;1680:111:6;3099:177:24;5087:471:22;;;;;;;;;;-1:-1:-1;5087:471:22;;;;;:::i;:::-;;:::i;4805:276::-;;;;;;;;;;-1:-1:-1;4805:276:22;;;;;:::i;:::-;;:::i;1278:331:6:-;;;;;;;;;;-1:-1:-1;1278:331:6;;;;;:::i;:::-;;:::i;1737:36:22:-;;;;;;;;;;;;;;;;11004:105;;;;;;;;;;-1:-1:-1;11004:105:22;;;;;:::i;:::-;;:::i;10833:104::-;;;;;;;;;;;;;:::i;10298:101::-;;;;;;;;;;-1:-1:-1;10381:11:22;;10298:101;;5626:179:5;;;;;;;;;;-1:-1:-1;5626:179:5;;;;;:::i;:::-;;:::i;759:20:22:-;;;;;;;;;;-1:-1:-1;759:20:22;;;;;;;;;;;3916:6:24;3904:19;;;3886:38;;3874:2;3859:18;759:20:22;3742:188:24;1863:308:6;;;;;;;;;;-1:-1:-1;1863:308:6;;;;;:::i;:::-;;:::i;1033:84:21:-;;;;;;;;;;-1:-1:-1;1103:7:21;;-1:-1:-1;;;1103:7:21;;;;1033:84;;10405:102:22;;;;;;;;;;-1:-1:-1;10487:13:22;;;;;;;10405:102;;2174:313:5;;;;;;;;;;-1:-1:-1;2174:313:5;;;;;:::i;:::-;;:::i;2540:1992:22:-;;;;;;:::i;:::-;;:::i;1834:283:5:-;;;;;;;;;;-1:-1:-1;1834:283:5;;;;;:::i;:::-;;:::i;1779:38:22:-;;;;;;;;;;;;;;;;1392:17;;;;;;;;;;-1:-1:-1;1392:17:22;;;;-1:-1:-1;;;;;1392:17:22;;;988:85:20;;;;;;;;;;-1:-1:-1;1060:6:20;;-1:-1:-1;;;;;1060:6:20;988:85;;10119:173:22;;;;;;;;;;-1:-1:-1;10119:173:22;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2711:102:5:-;;;;;;;;;;;;;:::i;1461:17:22:-;;;;;;;;;;-1:-1:-1;1461:17:22;;;;-1:-1:-1;;;;;1461:17:22;;;1033:55;;;;;;;;;;-1:-1:-1;1033:55:22;;;;;:::i;:::-;;;;;;;;;;;;;;4544:318:5;;;;;;;;;;-1:-1:-1;4544:318:5;;;;;:::i;:::-;;:::i;11792:90:22:-;;;;;;;;;;-1:-1:-1;11792:90:22;;;;;:::i;:::-;;:::i;1697:33::-;;;;;;;;;;-1:-1:-1;1697:33:22;;;;;;;;;;;1659:32;;;;;;;;;;-1:-1:-1;1659:32:22;;;;;;;;5871:346:5;;;;;;;;;;-1:-1:-1;5871:346:5;;;;;:::i;:::-;;:::i;419:37:22:-;;;;;;;;;;;;;;;;679:26;;;;;;;;;;;;;;;;11502:284;;;;;;;;;;-1:-1:-1;11502:284:22;;;;;:::i;:::-;;:::i;2293:94::-;;;;;;;;;;-1:-1:-1;2293:94:22;;;;;:::i;:::-;;:::i;856:50::-;;;;;;;;;;-1:-1:-1;856:50:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;856:50:22;;;;;-1:-1:-1;;;856:50:22;;;;;-1:-1:-1;;;856:50:22;;;;;;;;;;8444:14:24;;8437:22;8419:41;;8479:4;8519:15;;;8514:2;8499:18;;8492:43;8571:15;;;8551:18;;;8544:43;;;;8623:15;;;8618:2;8603:18;;8596:43;8676:15;;;8670:3;8655:19;;8648:44;8729:15;;8723:3;8708:19;;8701:44;8782:15;;8776:3;8761:19;;8754:44;8835:15;;8829:3;8814:19;;8807:44;8888:15;8882:3;8867:19;;8860:44;8406:3;8391:19;856:50:22;8086:824:24;1511:21:22;;;;;;;;;;-1:-1:-1;1511:21:22;;;;-1:-1:-1;;;;;1511:21:22;;;1609:43;;;;;;;;;;-1:-1:-1;1609:43:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;4928:206:5;;;;;;;;;;-1:-1:-1;4928:206:5;;;;;:::i;:::-;-1:-1:-1;;;;;5092:25:5;;;5065:4;5092:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4928:206;462:28:22;;;;;;;;;;;;;;;;1427:223:20;;;;;;;;;;-1:-1:-1;1427:223:20;;;;;:::i;:::-;;:::i;11300:177:22:-;;;;;;;;;;-1:-1:-1;11300:177:22;;;;;:::i;:::-;;:::i;565:35::-;;;;;;;;;;;;;;;909:290:6;1051:4;-1:-1:-1;;;;;;1090:50:6;;-1:-1:-1;;;1090:50:6;;:102;;;1156:36;1180:11;1156:23;:36::i;:::-;1071:121;909:290;-1:-1:-1;;909:290:6:o;2549:98:5:-;2603:13;2635:5;2628:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2549:98;:::o;4182:295::-;4298:7;7811:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7811:16:5;4321:107;;;;-1:-1:-1;;;4321:107:5;;11145:2:24;4321:107:5;;;11127:21:24;11184:2;11164:18;;;11157:30;11223:34;11203:18;;;11196:62;-1:-1:-1;;;11274:18:24;;;11267:42;11326:19;;4321:107:5;;;;;;;;;-1:-1:-1;4446:24:5;;;;:15;:24;;;;;;-1:-1:-1;;;;;4446:24:5;;4182:295::o;10673:87:22:-;1060:6:20;;-1:-1:-1;;;;;1060:6:20;666:10:2;1200:23:20;1192:68;;;;-1:-1:-1;;;1192:68:20;;;;;;;:::i;:::-;10734:4:22::1;:19:::0;;-1:-1:-1;;;;;;10734:19:22::1;-1:-1:-1::0;;;;;10734:19:22;;;::::1;::::0;;;::::1;::::0;;10673:87::o;3720:401:5:-;3800:13;3816:23;3831:7;3816:14;:23::i;:::-;3800:39;;3863:5;-1:-1:-1;;;;;3857:11:5;:2;-1:-1:-1;;;;;3857:11:5;;;3849:57;;;;-1:-1:-1;;;3849:57:5;;11919:2:24;3849:57:5;;;11901:21:24;11958:2;11938:18;;;11931:30;11997:34;11977:18;;;11970:62;-1:-1:-1;;;12048:18:24;;;12041:31;12089:19;;3849:57:5;11717:397:24;3849:57:5;666:10:2;-1:-1:-1;;;;;3938:21:5;;;;:62;;-1:-1:-1;3963:37:5;3980:5;666:10:2;4928:206:5;:::i;3963:37::-;3917:165;;;;-1:-1:-1;;;3917:165:5;;12321:2:24;3917:165:5;;;12303:21:24;12360:2;12340:18;;;12333:30;12399:34;12379:18;;;12372:62;12470:26;12450:18;;;12443:54;12514:19;;3917:165:5;12119:420:24;3917:165:5;4093:21;4102:2;4106:7;4093:8;:21::i;:::-;3790:331;3720:401;;:::o;11179:115:22:-;1060:6:20;;-1:-1:-1;;;;;1060:6:20;666:10:2;1200:23:20;1192:68;;;;-1:-1:-1;;;1192:68:20;;;;;;;:::i;:::-;11245:7:22::1;11241:46;;;11254:8;:6;:8::i;:::-;11179:115:::0;:::o;11241:46::-:1;11277:10;:8;:10::i;1220:25::-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5087:471::-;1867:10;;-1:-1:-1;;;1867:10:22;;;;1866:11;1858:37;;;;-1:-1:-1;;;1858:37:22;;12746:2:24;1858:37:22;;;12728:21:24;12785:2;12765:18;;;12758:30;-1:-1:-1;;;12804:18:24;;;12797:43;12857:18;;1858:37:22;12544:337:24;1858:37:22;1905:10;:17;;-1:-1:-1;;;;1905:17:22;-1:-1:-1;;;1905:17:22;;;5345:4:::1;::::0;-1:-1:-1;;;;;5345:4:22::1;5321:12;666:10:2::0;;587:96;5321:12:22::1;-1:-1:-1::0;;;;;5321:29:22::1;;5317:196;;5389:41;666:10:2::0;5422:7:22::1;5389:18;:41::i;:::-;5364:149;;;;-1:-1:-1::0;;;5364:149:22::1;;;;;;;:::i;:::-;5523:28;5533:4;5539:2;5543:7;5523:9;:28::i;:::-;-1:-1:-1::0;;1943:10:22;:18;;-1:-1:-1;;;;1943:18:22;;;-1:-1:-1;5087:471:22:o;4805:276::-;4861:7;4895:11;;4884:7;:22;4880:36;;-1:-1:-1;4915:1:22;;4805:276;-1:-1:-1;4805:276:22:o;4880:36::-;4960:1;4942:14;:10;4955:1;4942:14;:::i;:::-;4941:20;;;;:::i;:::-;4930:7;:31;4926:55;;-1:-1:-1;4970:11:22;;4805:276;-1:-1:-1;4805:276:22:o;4926:55::-;5025:1;5007:14;:10;5020:1;5007:14;:::i;:::-;5006:20;;;;:::i;:::-;4995:7;:31;4991:55;;-1:-1:-1;5035:11:22;;4805:276;-1:-1:-1;4805:276:22:o;4991:55::-;-1:-1:-1;5063:11:22;;4805:276;-1:-1:-1;4805:276:22:o;1278:331:6:-;1415:7;1467:23;1484:5;1467:16;:23::i;:::-;1459:5;:31;1438:121;;;;-1:-1:-1;;;1438:121:6;;14068:2:24;1438:121:6;;;14050:21:24;14107:2;14087:18;;;14080:30;14146:34;14126:18;;;14119:62;-1:-1:-1;;;14197:18:24;;;14190:41;14248:19;;1438:121:6;13866:407:24;1438:121:6;-1:-1:-1;;;;;;1576:19:6;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1278:331::o;11004:105:22:-;1060:6:20;;-1:-1:-1;;;;;1060:6:20;666:10:2;1200:23:20;1192:68;;;;-1:-1:-1;;;1192:68:20;;;;;;;:::i;:::-;11077:11:22::1;:25:::0;11004:105::o;10833:104::-;1060:6:20;;-1:-1:-1;;;;;1060:6:20;666:10:2;1200:23:20;1192:68;;;;-1:-1:-1;;;1192:68:20;;;;;;;:::i;:::-;1060:6;;10882:48:22::1;::::0;-1:-1:-1;;;;;1060:6:20;;;;10908:21:22::1;10882:48:::0;::::1;;;::::0;::::1;::::0;;;10908:21;1060:6:20;10882:48:22;::::1;;;;;;;;;;;;;::::0;::::1;;;;5626:179:5::0;5759:39;5776:4;5782:2;5786:7;5759:39;;;;;;;;;;;;:16;:39::i;1863:308:6:-;1978:7;2030:30;1767:10;:17;;1680:111;2030:30;2022:5;:38;2001:129;;;;-1:-1:-1;;;2001:129:6;;14480:2:24;2001:129:6;;;14462:21:24;14519:2;14499:18;;;14492:30;14558:34;14538:18;;;14531:62;-1:-1:-1;;;14609:18:24;;;14602:42;14661:19;;2001:129:6;14278:408:24;2001:129:6;2147:10;2158:5;2147:17;;;;;;;;:::i;:::-;;;;;;;;;2140:24;;1863:308;;;:::o;2174:313:5:-;2286:7;2325:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2325:16:5;2372:19;2351:107;;;;-1:-1:-1;;;2351:107:5;;15025:2:24;2351:107:5;;;15007:21:24;15064:2;15044:18;;;15037:30;15103:34;15083:18;;;15076:62;-1:-1:-1;;;15154:18:24;;;15147:39;15203:19;;2351:107:5;14823:405:24;2540:1992:22;1867:10;;-1:-1:-1;;;1867:10:22;;;;1866:11;1858:37;;;;-1:-1:-1;;;1858:37:22;;12746:2:24;1858:37:22;;;12728:21:24;12785:2;12765:18;;;12758:30;-1:-1:-1;;;12804:18:24;;;12797:43;12857:18;;1858:37:22;12544:337:24;1858:37:22;1905:10;:17;;-1:-1:-1;;;;1905:17:22;-1:-1:-1;;;1905:17:22;;;1347:8:21::1;1103:7:::0;;;-1:-1:-1;;;1103:7:21;;;;;1033:84;1347:8:::1;1346:9;1338:39;;;::::0;-1:-1:-1;;;1338:39:21;;15435:2:24;1338:39:21::1;::::0;::::1;15417:21:24::0;15474:2;15454:18;;;15447:30;-1:-1:-1;;;15493:18:24;;;15486:47;15550:18;;1338:39:21::1;15233:341:24::0;1338:39:21::1;2681:5:22::2;2680:6;:23;;;-1:-1:-1::0;2690:13:22::2;::::0;::::2;::::0;::::2;;;2680:23;2672:57;;;::::0;-1:-1:-1;;;2672:57:22;;15781:2:24;2672:57:22::2;::::0;::::2;15763:21:24::0;15820:2;15800:18;;;15793:30;-1:-1:-1;;;15839:18:24;;;15832:51;15900:18;;2672:57:22::2;15579:345:24::0;2672:57:22::2;2744:13;::::0;::::2;;2740:95;;;2793:10;2781:23;::::0;;;:11:::2;:23;::::0;;;;;::::2;;2773:51;;;::::0;-1:-1:-1;;;2773:51:22;;16131:2:24;2773:51:22::2;::::0;::::2;16113:21:24::0;16170:2;16150:18;;;16143:30;-1:-1:-1;;;16189:18:24;;;16182:45;16244:18;;2773:51:22::2;15929:339:24::0;2773:51:22::2;2853:9;666:10:2::0;2853:25:22::2;2845:46;;;::::0;-1:-1:-1;;;2845:46:22;;16475:2:24;2845:46:22::2;::::0;::::2;16457:21:24::0;16514:1;16494:18;;;16487:29;-1:-1:-1;;;16532:18:24;;;16525:38;16580:18;;2845:46:22::2;16273:331:24::0;2845:46:22::2;2909:6;::::0;2928:10:::2;::::0;2909:15:::2;::::0;2918:6;;2909::::2;;:15;:::i;:::-;:29;;2901:59;;;::::0;-1:-1:-1;;;2901:59:22;;16944:2:24;2901:59:22::2;::::0;::::2;16926:21:24::0;16983:2;16963:18;;;16956:30;-1:-1:-1;;;17002:18:24;;;16995:47;17059:18;;2901:59:22::2;16742:341:24::0;2901:59:22::2;2987:1;2978:6;:10;:32;;;;;3002:8;;2992:6;:18;;2978:32;2970:64;;;::::0;-1:-1:-1;;;2970:64:22;;17290:2:24;2970:64:22::2;::::0;::::2;17272:21:24::0;17329:2;17309:18;;;17302:30;-1:-1:-1;;;17348:18:24;;;17341:49;17407:18;;2970:64:22::2;17088:343:24::0;2970:64:22::2;3058:11;::::0;3049:6:::2;::::0;::::2;;:20;3045:306;;;3129:11;::::0;3110:6:::2;::::0;:15:::2;::::0;3119:6;;3110::::2;;:15;:::i;:::-;:30;;3085:120;;;::::0;-1:-1:-1;;;3085:120:22;;17638:2:24;3085:120:22::2;::::0;::::2;17620:21:24::0;17677:2;17657:18;;;17650:30;17716:33;17696:18;;;17689:61;17767:18;;3085:120:22::2;17436:355:24::0;3085:120:22::2;3250:9;3236:10;;3227:6;:19;;;;:::i;:::-;:32;3219:67;;;::::0;-1:-1:-1;;;3219:67:22;;17998:2:24;3219:67:22::2;::::0;::::2;17980:21:24::0;18037:2;18017:18;;;18010:30;-1:-1:-1;;;18056:18:24;;;18049:52;18118:18;;3219:67:22::2;17796:346:24::0;3219:67:22::2;3045:306;;;3325:9;:14:::0;3317:23:::2;;;::::0;::::2;;3361:21;3396:24:::0;3436:6:::2;3423:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;3423:20:22::2;;3396:47;;3453:23;3493:6;3479:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;3479:21:22::2;-1:-1:-1::0;3554:6:22::2;::::0;3453:47;;-1:-1:-1;3510:12:22::2;::::0;3554:6:::2;;3510:12:::0;3571:591:::2;3595:6;3591:1;:10;3571:591;;;3622:6;:8:::0;;::::2;;::::0;:6:::2;:8;::::0;::::2;:::i;:::-;::::0;;::::2;::::0;;;::::2;;::::0;;::::2;;::::0;;::::2;::::0;;::::2;;;::::0;;;3658:6:::2;::::0;3651:14:::2;::::0;-1:-1:-1;3658:6:22::2;3651;:14::i;:::-;3679:12;::::0;3699:6:::2;::::0;3679:34:::2;::::0;-1:-1:-1;;;3679:34:22;;3699:6:::2;::::0;;::::2;:13:::0;::::2;3679:34;::::0;::::2;3245:25:24::0;3644:21:22;;-1:-1:-1;;;;;;3679:12:22::2;::::0;:19:::2;::::0;3218:18:24;;3679:34:22::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3736:6:22::2;::::0;3727:22:::2;::::0;3736:6:::2;;3744:4:::0;3727:8:::2;:22::i;:::-;;3763:17;3783:21;3799:4;3783:15;:21::i;:::-;3844:6;::::0;3763:41;;-1:-1:-1;3835:16:22::2;::::0;3844:6:::2;;3835:8;:16::i;:::-;3818:33;::::0;;::::2;:::i;:::-;;;3870:5;3869:6;:35;;;-1:-1:-1::0;;;;;;3879:25:22;::::2;666:10:2::0;3879:25:22::2;;3869:35;3865:197;;;3936:9;3924:6;3931:1;3924:9;;;;;;;;:::i;:::-;;;;;;:21;-1:-1:-1::0;;;;;3924:21:22::2;;;-1:-1:-1::0;;;;;3924:21:22::2;;;::::0;::::2;3865:197;;;3998:6;::::0;3984:11;;3998:6:::2;::::0;;::::2;::::0;3984:8;;3993:1;;3984:11;::::2;;;;;:::i;:::-;:20;::::0;;::::2;:11;::::0;;::::2;::::0;;;;;;;:20;4042:4:::2;::::0;4022:9;;-1:-1:-1;;;;;4042:4:22;;::::2;::::0;4022:6;;4029:1;;4022:9;::::2;;;;;:::i;:::-;;;;;;:25;-1:-1:-1::0;;;;;4022:25:22::2;;;-1:-1:-1::0;;;;;4022:25:22::2;;;::::0;::::2;3865:197;4080:13;::::0;::::2;;4076:76;;;4136:1;4113:19;;:24;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4076:76:22::2;-1:-1:-1::0;3603:3:22;::::2;::::0;::::2;:::i;:::-;;;;3571:591;;;-1:-1:-1::0;4176:17:22;;4172:61:::2;;4195:4;::::0;-1:-1:-1;;;;;4195:4:22::2;:9;666:10:2::0;4195:38:22::2;::::0;-1:-1:-1;;;;;;4195:38:22::2;::::0;;;;;;-1:-1:-1;;;;;18870:32:24;;;4195:38:22::2;::::0;::::2;18852:51:24::0;18919:18;;;18912:34;;;18825:18;;4195:38:22::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;4172:61;4249:9;4244:212;4268:6;:13;4264:1;:17;4244:212;;;4302:10;4315:15;4329:1:::0;4315:11;:15:::2;:::i;:::-;:19;::::0;4333:1:::2;4315:19;:::i;:::-;4302:32;;4353:5;4352:6;:35;;;-1:-1:-1::0;666:10:2;-1:-1:-1;;;;;4362:25:22::2;:6;4369:1;4362:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;4362:25:22::2;;;4352:35;4348:98;;;4407:24;4417:6;4424:1;4417:9;;;;;;;;:::i;:::-;;;;;;;4428:2;4407:9;:24::i;:::-;-1:-1:-1::0;4283:3:22;::::2;::::0;::::2;:::i;:::-;;;;4244:212;;;;4469:5;4465:60;;;4476:4;::::0;-1:-1:-1;;;;;4476:4:22::2;:25;666:10:2::0;4516:8:22::2;4476:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;4465:60;-1:-1:-1::0;;1943:10:22;:18;;-1:-1:-1;;;;1943:18:22;;;-1:-1:-1;;;;;2540:1992:22:o;1834:283:5:-;1946:7;-1:-1:-1;;;;;1990:19:5;;1969:108;;;;-1:-1:-1;;;1969:108:5;;19904:2:24;1969:108:5;;;19886:21:24;19943:2;19923:18;;;19916:30;19982:34;19962:18;;;19955:62;-1:-1:-1;;;20033:18:24;;;20026:40;20083:19;;1969:108:5;19702:406:24;1969:108:5;-1:-1:-1;;;;;;2094:16:5;;;;;:9;:16;;;;;;;1834:283::o;10119:173:22:-;10224:18;;:::i;:::-;-1:-1:-1;10265:20:22;;;;:11;:20;;;;;;;;;10258:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10258:27:22;;;;;;;;-1:-1:-1;;;10258:27:22;;;;;;;;-1:-1:-1;;;10258:27:22;;;;;;;;;;10119:173::o;2711:102:5:-;2767:13;2799:7;2792:14;;;;;:::i;4544:318::-;-1:-1:-1;;;;;4674:24:5;;666:10:2;4674:24:5;;4666:62;;;;-1:-1:-1;;;4666:62:5;;20315:2:24;4666:62:5;;;20297:21:24;20354:2;20334:18;;;20327:30;20393:27;20373:18;;;20366:55;20438:18;;4666:62:5;20113:349:24;4666:62:5;666:10:2;4739:32:5;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4739:42:5;;;;;;;;;;;;:53;;-1:-1:-1;;4739:53:5;;;;;;;;;;4807:48;;445:41:24;;;4739:42:5;;666:10:2;4807:48:5;;418:18:24;4807:48:5;;;;;;;4544:318;;:::o;11792:90:22:-;1060:6:20;;-1:-1:-1;;;;;1060:6:20;666:10:2;1200:23:20;1192:68;;;;-1:-1:-1;;;1192:68:20;;;;;;;:::i;:::-;11856:10:22::1;:19:::0;11792:90::o;5871:346:5:-;6053:41;666:10:2;6086:7:5;6053:18;:41::i;:::-;6032:137;;;;-1:-1:-1;;;6032:137:5;;;;;;;:::i;:::-;6179:31;6192:4;6198:2;6202:7;6179:12;:31::i;:::-;5871:346;;;;:::o;11502:284:22:-;7788:4:5;7811:16;;;:7;:16;;;;;;11599:13:22;;-1:-1:-1;;;;;7811:16:5;11628:110:22;;;;-1:-1:-1;;;11628:110:22;;20669:2:24;11628:110:22;;;20651:21:24;20708:2;20688:18;;;20681:30;20747:34;20727:18;;;20720:62;-1:-1:-1;;;20798:18:24;;;20791:45;20853:19;;11628:110:22;20467:411:24;11628:110:22;11755:6;;:24;;-1:-1:-1;;;11755:24:22;;;;;3245:25:24;;;-1:-1:-1;;;;;11755:6:22;;;;:15;;3218:18:24;;11755:24:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11755:24:22;;;;;;;;;;;;:::i;2293:94::-;1060:6:20;;-1:-1:-1;;;;;1060:6:20;666:10:2;1200:23:20;1192:68;;;;-1:-1:-1;;;1192:68:20;;;;;;;:::i;:::-;2360:12:22::1;:20:::0;;-1:-1:-1;;;;;;2360:20:22::1;-1:-1:-1::0;;;;;2360:20:22;;;::::1;::::0;;;::::1;::::0;;2293:94::o;1427:223:20:-;1060:6;;-1:-1:-1;;;;;1060:6:20;666:10:2;1200:23:20;1192:68;;;;-1:-1:-1;;;1192:68:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;1528:22:20;::::1;1507:107;;;::::0;-1:-1:-1;;;1507:107:20;;21725:2:24;1507:107:20::1;::::0;::::1;21707:21:24::0;21764:2;21744:18;;;21737:30;21803:34;21783:18;;;21776:62;-1:-1:-1;;;21854:18:24;;;21847:36;21900:19;;1507:107:20::1;21523:402:24::0;1507:107:20::1;1624:19;1634:8;1624:9;:19::i;11300:177:22:-:0;1060:6:20;;-1:-1:-1;;;;;1060:6:20;666:10:2;1200:23:20;1192:68;;;;-1:-1:-1;;;1192:68:20;;;;;;;:::i;:::-;11380:9:22::1;11375:96;11399:5;:12;11395:1;:16;11375:96;;;11456:4;11432:11;:21;11444:5;11450:1;11444:8;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;11432:21:22::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;11432:21:22;:28;;-1:-1:-1;;11432:28:22::1;::::0;::::1;;::::0;;;::::1;::::0;;11413:3;::::1;::::0;::::1;:::i;:::-;;;;11375:96;;;;11300:177:::0;:::o;1431:344:5:-;1573:4;-1:-1:-1;;;;;;1612:40:5;;-1:-1:-1;;;1612:40:5;;:104;;-1:-1:-1;;;;;;;1668:48:5;;-1:-1:-1;;;1668:48:5;1612:104;:156;;;-1:-1:-1;;;;;;;;;;915:40:3;;;1732:36:5;763:199:3;11541:171:5;11615:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11615:29:5;-1:-1:-1;;;;;11615:29:5;;;;;;;;:24;;11668:23;11615:24;11668:14;:23::i;:::-;-1:-1:-1;;;;;11659:46:5;;;;;;;;;;;11541:171;;:::o;1800:115:21:-;1103:7;;-1:-1:-1;;;1103:7:21;;;;1346:9;1338:39;;;;-1:-1:-1;;;1338:39:21;;15435:2:24;1338:39:21;;;15417:21:24;15474:2;15454:18;;;15447:30;-1:-1:-1;;;15493:18:24;;;15486:47;15550:18;;1338:39:21;15233:341:24;1338:39:21;1859:7:::1;:14:::0;;-1:-1:-1;;;;1859:14:21::1;-1:-1:-1::0;;;1859:14:21::1;::::0;;1888:20:::1;1895:12;666:10:2::0;;587:96;1895:12:21::1;1888:20;::::0;-1:-1:-1;;;;;1497:32:24;;;1479:51;;1467:2;1452:18;1888:20:21::1;;;;;;;1800:115::o:0;2047:117::-;1103:7;;-1:-1:-1;;;1103:7:21;;;;1605:42;;;;-1:-1:-1;;;1605:42:21;;22132:2:24;1605:42:21;;;22114:21:24;22171:2;22151:18;;;22144:30;-1:-1:-1;;;22190:18:24;;;22183:51;22251:18;;1605:42:21;21930:345:24;1605:42:21;2105:7:::1;:15:::0;;-1:-1:-1;;;;2105:15:21::1;::::0;;2135:22:::1;666:10:2::0;2144:12:21::1;587:96:2::0;8006:438:5;8131:4;7811:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7811:16:5;8151:107;;;;-1:-1:-1;;;8151:107:5;;22482:2:24;8151:107:5;;;22464:21:24;22521:2;22501:18;;;22494:30;22560:34;22540:18;;;22533:62;-1:-1:-1;;;22611:18:24;;;22604:42;22663:19;;8151:107:5;22280:408:24;8151:107:5;8268:13;8284:23;8299:7;8284:14;:23::i;:::-;8268:39;;8336:5;-1:-1:-1;;;;;8325:16:5;:7;-1:-1:-1;;;;;8325:16:5;;:63;;;;8381:7;-1:-1:-1;;;;;8357:31:5;:20;8369:7;8357:11;:20::i;:::-;-1:-1:-1;;;;;8357:31:5;;8325:63;:111;;;-1:-1:-1;;;;;;5092:25:5;;;5065:4;5092:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8404:32;8317:120;8006:438;-1:-1:-1;;;;8006:438:5:o;10836:594::-;11003:4;-1:-1:-1;;;;;10976:31:5;:23;10991:7;10976:14;:23::i;:::-;-1:-1:-1;;;;;10976:31:5;;10955:119;;;;-1:-1:-1;;;10955:119:5;;22895:2:24;10955:119:5;;;22877:21:24;22934:2;22914:18;;;22907:30;22973:34;22953:18;;;22946:62;-1:-1:-1;;;23024:18:24;;;23017:39;23073:19;;10955:119:5;22693:405:24;10955:119:5;-1:-1:-1;;;;;11092:16:5;;11084:65;;;;-1:-1:-1;;;11084:65:5;;23305:2:24;11084:65:5;;;23287:21:24;23344:2;23324:18;;;23317:30;23383:34;23363:18;;;23356:62;-1:-1:-1;;;23434:18:24;;;23427:34;23478:19;;11084:65:5;23103:400:24;11084:65:5;11160:39;11181:4;11187:2;11191:7;11160:20;:39::i;:::-;11261:29;11278:1;11282:7;11261:8;:29::i;:::-;-1:-1:-1;;;;;11301:15:5;;;;;;:9;:15;;;;;:20;;11320:1;;11301:15;:20;;11320:1;;11301:20;:::i;:::-;;;;-1:-1:-1;;;;;;;11331:13:5;;;;;;:9;:13;;;;;:18;;11348:1;;11331:13;:18;;11348:1;;11331:18;:::i;:::-;;;;-1:-1:-1;;11359:16:5;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;11359:21:5;-1:-1:-1;;;;;11359:21:5;;;;;;;;;11396:27;;11359:16;;11396:27;;;;;;;10836:594;;;:::o;9691:405:22:-;10070:12;;:19;;;-1:-1:-1;;;10070:19:22;;;;9744:7;;-1:-1:-1;;;;;10070:12:22;;:17;;:19;;;;;;;;;;;;;;:12;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9880:9;9925:16;9940:1;9925:12;:16;:::i;:::-;9838:197;;23871:2:24;23867:15;;;;-1:-1:-1;;23863:53:24;9838:197:22;;;23851:66:24;9915:27:22;23933:12:24;;;23926:28;9968:15:22;23970:12:24;;;23963:28;24007:12;;;24000:28;;;24044:13;;9838:197:22;;;-1:-1:-1;;9838:197:22;;;;;;;;;9807:246;;9838:197;9807:246;;;;9782:307;;9691:405;-1:-1:-1;;9691:405:22:o;5878:385::-;5961:20;;:::i;:::-;6001:18;6014:4;6001:12;:18::i;:::-;5997:22;;6033:20;:37;6054:15;6067:1;6054:12;:15::i;:::-;6033:37;;;;;;;;;;;;6074:1;6033:42;6029:180;;;6091:20;;;;:11;:20;;;;;;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6091:24:22;;;;;;-1:-1:-1;;6091:24:22;;;;;;;;;;;;;;;;-1:-1:-1;;6091:24:22;;;;;;;;;-1:-1:-1;;6091:24:22;;;;;;;;;;;;;;;;;-1:-1:-1;;6091:24:22;;;;;;;;;-1:-1:-1;;6091:24:22;;;;;;;;;;;-1:-1:-1;;6091:24:22;-1:-1:-1;;;6091:24:22;;;;;;;-1:-1:-1;;6091:24:22;;-1:-1:-1;;;6091:24:22;;;;;;;;-1:-1:-1;;6091:24:22;-1:-1:-1;;;6091:24:22;;;;;;;;;;;;;;:20;;6129;;6150:15;6091:24;6150:12;:15::i;:::-;6129:37;;;;;;;;;;;-1:-1:-1;6129:37:22;:47;6190:8;;6029:180;6225:31;6234:7;6243:12;6250:4;6243:6;:12::i;:::-;6225:8;:31::i;:::-;6218:38;5878:385;-1:-1:-1;;;5878:385:22:o;7164:404::-;7259:11;;7249:6;;7226:7;;7249:6;;;;:21;;;:50;;-1:-1:-1;7275:18:22;7291:2;7284:3;7276:11;;;7275:18;:::i;:::-;7274:25;;7249:50;7245:87;;;666:10:2;7320:12:22;587:96:2;7245:87:22;7399:4;;:35;;-1:-1:-1;;;7399:35:22;;7430:3;7422:11;;;7399:35;;;3245:25:24;7383:13:22;;-1:-1:-1;;;;;7399:4:22;;:22;;3218:18:24;;7399:35:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7383:51;-1:-1:-1;;;;;;7497:21:22;;7493:46;;666:10:2;7520:19:22;7164:404;-1:-1:-1;;;7164:404:22:o;8774:108:5:-;8849:26;8859:2;8863:7;8849:26;;;;;;;;;;;;:9;:26::i;1656:169:20:-;1730:6;;;-1:-1:-1;;;;;1746:17:20;;;-1:-1:-1;;;;;;1746:17:20;;;;;;;1778:40;;1730:6;;;1746:17;1730:6;;1778:40;;1711:16;;1778:40;1701:124;1656:169;:::o;2767:572:6:-;-1:-1:-1;;;;;2966:18:6;;2962:183;;3000:40;3032:7;4148:10;:17;;4121:24;;;;:15;:24;;;;;:44;;;4175:24;;;;;;;;;;;;4045:161;3000:40;2962:183;;;3069:2;-1:-1:-1;;;;;3061:10:6;:4;-1:-1:-1;;;;;3061:10:6;;3057:88;;3087:47;3120:4;3126:7;3087:32;:47::i;:::-;-1:-1:-1;;;;;3158:16:6;;3154:179;;3190:45;3227:7;3190:36;:45::i;3154:179::-;3262:4;-1:-1:-1;;;;;3256:10:6;:2;-1:-1:-1;;;;;3256:10:6;;3252:81;;3282:40;3310:2;3314:7;3282:27;:40::i;7791:943:22:-;7874:20;;:::i;:::-;7922;7940:2;7930:6;7923:13;;7922:20;:::i;:::-;:25;;7910:37;;;7946:1;;7971:18;;7987:2;7971:18;;;7983:1;7971:18;8009:2;8000:11;;;;;7957:32;-1:-1:-1;8033:45:22;8059:6;8052:13;;8068:9;7957:32;8068:1;:9;:::i;:::-;8033:11;:45::i;:::-;8021:57;;:9;;;:57;8098:2;8089:11;;;;;8119:45;8145:6;8138:13;;8154:9;8158:5;8154:1;:9;:::i;8119:45::-;8110:54;;:6;;;:54;8184:2;8175:11;;;;;8211:45;8237:6;8230:13;;8246:9;8250:5;8246:1;:9;:::i;8211:45::-;8196:60;;:12;;;:60;8276:2;8267:11;;;;;8297:45;8323:6;8316:13;;8332:9;8336:5;8332:1;:9;:::i;8297:45::-;8288:54;;:6;;;:54;8362:2;8353:11;;;;;8388:45;8414:6;8407:13;;8423:9;8427:5;8423:1;:9;:::i;8388:45::-;8374:59;;:11;;;:59;8453:2;8444:11;;;;;8478:45;8504:6;8497:13;;8513:9;8517:5;8513:1;:9;:::i;8478:45::-;8465:58;;:10;;;:58;8560:9;;8543:2;8534:11;;;;;8555:173;;8598:45;8624:6;8617:13;;8633:9;8637:5;8633:1;:9;:::i;8598:45::-;8585:58;;:10;;;:58;8672:45;8698:6;8691:13;;8707:9;8711:5;8707:1;:9;:::i;8672:45::-;8657:60;;:12;;;:60;8555:173;7900:834;7791:943;;;:::o;8916:585::-;9147:9;;9182;;;;;9217:6;;;;;9249:12;;;;9287:6;;;;9319:10;;;;9355:11;;;;9392:10;;;;9428:12;;;;;9105:357;;25125:14:24;;25118:22;25086:3;25110:31;;;9105:357:22;;;25098:44:24;-1:-1:-1;;;;;;25207:15:24;;;25203:24;;25190:11;;;25183:45;25261:15;;;25257:24;;25244:11;;;25237:45;25315:15;;;25311:24;;25298:11;;;25291:45;25369:15;;;25365:24;;25352:11;;;25345:45;25423:15;;25419:24;;25406:11;;;25399:45;25477:15;;25473:24;;25460:11;;;25453:45;25531:15;;;25527:24;;25514:11;;;25507:45;24718:15;;;;24714:35;25586:11;;;24702:48;9105:357:22;;;;;;;;;25614:11:24;;;;9105:357:22;;;9074:406;;;;;;8916:585::o;9103:150:5:-;9228:18;9234:2;9238:7;9228:5;:18::i;4823:982:6:-;5097:22;5147:1;5122:22;5139:4;5122:16;:22::i;:::-;:26;;;;:::i;:::-;5158:18;5179:26;;;:17;:26;;;;;;5097:51;;-1:-1:-1;5309:28:6;;;5305:323;;-1:-1:-1;;;;;5375:18:6;;5353:19;5375:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5424:30;;;;;;:44;;;5540:30;;:17;:30;;;;;:43;;;5305:323;-1:-1:-1;5721:26:6;;;;:17;:26;;;;;;;;5714:33;;;-1:-1:-1;;;;;5764:18:6;;;;;:12;:18;;;;;:34;;;;;;;5757:41;4823:982::o;6093:1061::-;6367:10;:17;6342:22;;6367:21;;6387:1;;6367:21;:::i;:::-;6398:18;6419:24;;;:15;:24;;;;;;6787:10;:26;;6342:46;;-1:-1:-1;6419:24:6;;6342:46;;6787:26;;;;;;:::i;:::-;;;;;;;;;6765:48;;6849:11;6824:10;6835;6824:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6928:28;;;:15;:28;;;;;;;:41;;;7097:24;;;;;7090:31;7131:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6164:990;;;6093:1061;:::o;3633:217::-;3717:14;3734:20;3751:2;3734:16;:20::i;:::-;-1:-1:-1;;;;;3764:16:6;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3808:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3633:217:6:o;6686:168:22:-;6812:6;;:35;;-1:-1:-1;;;6812:35:22;;25966:6:24;25954:19;;6812:35:22;;;25936:38:24;26022:4;26010:17;;25990:18;;;25983:45;6784:5:22;;-1:-1:-1;;;;;6812:6:22;;:18;;25909::24;;6812:35:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;9575:372:5:-;-1:-1:-1;;;;;9654:16:5;;9646:61;;;;-1:-1:-1;;;9646:61:5;;26519:2:24;9646:61:5;;;26501:21:24;;;26538:18;;;26531:30;26597:34;26577:18;;;26570:62;26649:18;;9646:61:5;26317:356:24;9646:61:5;7788:4;7811:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7811:16:5;:30;9717:58;;;;-1:-1:-1;;;9717:58:5;;26880:2:24;9717:58:5;;;26862:21:24;26919:2;26899:18;;;26892:30;26958;26938:18;;;26931:58;27006:18;;9717:58:5;26678:352:24;9717:58:5;9786:45;9815:1;9819:2;9823:7;9786:20;:45::i;:::-;-1:-1:-1;;;;;9842:13:5;;;;;;:9;:13;;;;;:18;;9859:1;;9842:13;:18;;9859:1;;9842:18;:::i;:::-;;;;-1:-1:-1;;9870:16:5;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9870:21:5;-1:-1:-1;;;;;9870:21:5;;;;;;;;9907:33;;9870:16;;;9907:33;;9870:16;;9907:33;9575:372;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:24:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:24;;209:43;;199:71;;266:1;263;256:12;497:258;569:1;579:113;593:6;590:1;587:13;579:113;;;669:11;;;663:18;650:11;;;643:39;615:2;608:10;579:113;;;710:6;707:1;704:13;701:48;;;-1:-1:-1;;745:1:24;727:16;;720:27;497:258::o;760:383::-;909:2;898:9;891:21;872:4;941:6;935:13;984:6;979:2;968:9;964:18;957:34;1000:66;1059:6;1054:2;1043:9;1039:18;1034:2;1026:6;1022:15;1000:66;:::i;:::-;1127:2;1106:15;-1:-1:-1;;1102:29:24;1087:45;;;;1134:2;1083:54;;760:383;-1:-1:-1;;760:383:24:o;1148:180::-;1207:6;1260:2;1248:9;1239:7;1235:23;1231:32;1228:52;;;1276:1;1273;1266:12;1228:52;-1:-1:-1;1299:23:24;;1148:180;-1:-1:-1;1148:180:24:o;1541:131::-;-1:-1:-1;;;;;1616:31:24;;1606:42;;1596:70;;1662:1;1659;1652:12;1677:247;1736:6;1789:2;1777:9;1768:7;1764:23;1760:32;1757:52;;;1805:1;1802;1795:12;1757:52;1844:9;1831:23;1863:31;1888:5;1863:31;:::i;1929:315::-;1997:6;2005;2058:2;2046:9;2037:7;2033:23;2029:32;2026:52;;;2074:1;2071;2064:12;2026:52;2113:9;2100:23;2132:31;2157:5;2132:31;:::i;:::-;2182:5;2234:2;2219:18;;;;2206:32;;-1:-1:-1;;;1929:315:24:o;2471:160::-;2536:20;;2592:13;;2585:21;2575:32;;2565:60;;2621:1;2618;2611:12;2565:60;2471:160;;;:::o;2636:180::-;2692:6;2745:2;2733:9;2724:7;2720:23;2716:32;2713:52;;;2761:1;2758;2751:12;2713:52;2784:26;2800:9;2784:26;:::i;3281:456::-;3358:6;3366;3374;3427:2;3415:9;3406:7;3402:23;3398:32;3395:52;;;3443:1;3440;3433:12;3395:52;3482:9;3469:23;3501:31;3526:5;3501:31;:::i;:::-;3551:5;-1:-1:-1;3608:2:24;3593:18;;3580:32;3621:33;3580:32;3621:33;:::i;:::-;3281:456;;3673:7;;-1:-1:-1;;;3727:2:24;3712:18;;;;3699:32;;3281:456::o;3935:248::-;4000:6;4008;4061:2;4049:9;4040:7;4036:23;4032:32;4029:52;;;4077:1;4074;4067:12;4029:52;4113:9;4100:23;4090:33;;4142:35;4173:2;4162:9;4158:18;4142:35;:::i;:::-;4132:45;;3935:248;;;;;:::o;4410:1239::-;4560:4;4602:3;4591:9;4587:19;4579:27;;4653:6;4647:13;4640:21;4633:29;4622:9;4615:48;4731:4;4723;4715:6;4711:17;4705:24;4701:35;4694:4;4683:9;4679:20;4672:65;4784:4;4776:6;4772:17;4766:24;4799:61;4854:4;4843:9;4839:20;4825:12;2897:4;2886:16;2874:29;;2821:84;4799:61;;4909:4;4901:6;4897:17;4891:24;4924:63;4981:4;4970:9;4966:20;4950:14;2897:4;2886:16;2874:29;;2821:84;4924:63;;5036:4;5028:6;5024:17;5018:24;5051:63;5108:4;5097:9;5093:20;5077:14;2897:4;2886:16;2874:29;;2821:84;5051:63;;5163:4;5155:6;5151:17;5145:24;5178:63;5235:4;5224:9;5220:20;5204:14;2897:4;2886:16;2874:29;;2821:84;5178:63;;5290:4;5282:6;5278:17;5272:24;5305:63;5362:4;5351:9;5347:20;5331:14;2897:4;2886:16;2874:29;;2821:84;5305:63;;5417:4;5409:6;5405:17;5399:24;5432:63;5489:4;5478:9;5474:20;5458:14;2897:4;2886:16;2874:29;;2821:84;5432:63;-1:-1:-1;5514:6:24;5557:15;;;5551:22;2897:4;2886:16;5624:18;;;;2874:29;4410:1239;:::o;5876:315::-;5941:6;5949;6002:2;5990:9;5981:7;5977:23;5973:32;5970:52;;;6018:1;6015;6008:12;5970:52;6057:9;6044:23;6076:31;6101:5;6076:31;:::i;:::-;6126:5;-1:-1:-1;6150:35:24;6181:2;6166:18;;6150:35;:::i;6196:127::-;6257:10;6252:3;6248:20;6245:1;6238:31;6288:4;6285:1;6278:15;6312:4;6309:1;6302:15;6328:275;6399:2;6393:9;6464:2;6445:13;;-1:-1:-1;;6441:27:24;6429:40;;6499:18;6484:34;;6520:22;;;6481:62;6478:88;;;6546:18;;:::i;:::-;6582:2;6575:22;6328:275;;-1:-1:-1;6328:275:24:o;6608:186::-;6656:4;6689:18;6681:6;6678:30;6675:56;;;6711:18;;:::i;:::-;-1:-1:-1;6777:2:24;6756:15;-1:-1:-1;;6752:29:24;6783:4;6748:40;;6608:186::o;6799:1016::-;6894:6;6902;6910;6918;6971:3;6959:9;6950:7;6946:23;6942:33;6939:53;;;6988:1;6985;6978:12;6939:53;7027:9;7014:23;7046:31;7071:5;7046:31;:::i;:::-;7096:5;-1:-1:-1;7153:2:24;7138:18;;7125:32;7166:33;7125:32;7166:33;:::i;:::-;7218:7;-1:-1:-1;7272:2:24;7257:18;;7244:32;;-1:-1:-1;7327:2:24;7312:18;;7299:32;7354:18;7343:30;;7340:50;;;7386:1;7383;7376:12;7340:50;7409:22;;7462:4;7454:13;;7450:27;-1:-1:-1;7440:55:24;;7491:1;7488;7481:12;7440:55;7527:2;7514:16;7552:48;7568:31;7596:2;7568:31;:::i;:::-;7552:48;:::i;:::-;7623:2;7616:5;7609:17;7663:7;7658:2;7653;7649;7645:11;7641:20;7638:33;7635:53;;;7684:1;7681;7674:12;7635:53;7739:2;7734;7730;7726:11;7721:2;7714:5;7710:14;7697:45;7783:1;7778:2;7773;7766:5;7762:14;7758:23;7751:34;7804:5;7794:15;;;;;6799:1016;;;;;;;:::o;9139:388::-;9207:6;9215;9268:2;9256:9;9247:7;9243:23;9239:32;9236:52;;;9284:1;9281;9274:12;9236:52;9323:9;9310:23;9342:31;9367:5;9342:31;:::i;:::-;9392:5;-1:-1:-1;9449:2:24;9434:18;;9421:32;9462:33;9421:32;9462:33;:::i;:::-;9514:7;9504:17;;;9139:388;;;;;:::o;9532:1021::-;9616:6;9647:2;9690;9678:9;9669:7;9665:23;9661:32;9658:52;;;9706:1;9703;9696:12;9658:52;9746:9;9733:23;9775:18;9816:2;9808:6;9805:14;9802:34;;;9832:1;9829;9822:12;9802:34;9870:6;9859:9;9855:22;9845:32;;9915:7;9908:4;9904:2;9900:13;9896:27;9886:55;;9937:1;9934;9927:12;9886:55;9973:2;9960:16;9995:2;9991;9988:10;9985:36;;;10001:18;;:::i;:::-;10047:2;10044:1;10040:10;10030:20;;10070:28;10094:2;10090;10086:11;10070:28;:::i;:::-;10132:15;;;10202:11;;;10198:20;;;10163:12;;;;10230:19;;;10227:39;;;10262:1;10259;10252:12;10227:39;10286:11;;;;10306:217;10322:6;10317:3;10314:15;10306:217;;;10402:3;10389:17;10376:30;;10419:31;10444:5;10419:31;:::i;:::-;10463:18;;;10339:12;;;;10501;;;;10306:217;;;10542:5;9532:1021;-1:-1:-1;;;;;;;;9532:1021:24:o;10558:380::-;10637:1;10633:12;;;;10680;;;10701:61;;10755:4;10747:6;10743:17;10733:27;;10701:61;10808:2;10800:6;10797:14;10777:18;10774:38;10771:161;;;10854:10;10849:3;10845:20;10842:1;10835:31;10889:4;10886:1;10879:15;10917:4;10914:1;10907:15;11356:356;11558:2;11540:21;;;11577:18;;;11570:30;11636:34;11631:2;11616:18;;11609:62;11703:2;11688:18;;11356:356::o;12886:413::-;13088:2;13070:21;;;13127:2;13107:18;;;13100:30;13166:34;13161:2;13146:18;;13139:62;-1:-1:-1;;;13232:2:24;13217:18;;13210:47;13289:3;13274:19;;12886:413::o;13304:127::-;13365:10;13360:3;13356:20;13353:1;13346:31;13396:4;13393:1;13386:15;13420:4;13417:1;13410:15;13436:168;13476:7;13542:1;13538;13534:6;13530:14;13527:1;13524:21;13519:1;13512:9;13505:17;13501:45;13498:71;;;13549:18;;:::i;:::-;-1:-1:-1;13589:9:24;;13436:168::o;13609:127::-;13670:10;13665:3;13661:20;13658:1;13651:31;13701:4;13698:1;13691:15;13725:4;13722:1;13715:15;13741:120;13781:1;13807;13797:35;;13812:18;;:::i;:::-;-1:-1:-1;13846:9:24;;13741:120::o;14691:127::-;14752:10;14747:3;14743:20;14740:1;14733:31;14783:4;14780:1;14773:15;14807:4;14804:1;14797:15;16609:128;16649:3;16680:1;16676:6;16673:1;16670:13;16667:39;;;16686:18;;:::i;:::-;-1:-1:-1;16722:9:24;;16609:128::o;18147:197::-;18185:3;18213:6;18254:2;18247:5;18243:14;18281:2;18272:7;18269:15;18266:41;;;18287:18;;:::i;:::-;18336:1;18323:15;;18147:197;-1:-1:-1;;;18147:197:24:o;18349:184::-;18419:6;18472:2;18460:9;18451:7;18447:23;18443:32;18440:52;;;18488:1;18485;18478:12;18440:52;-1:-1:-1;18511:16:24;;18349:184;-1:-1:-1;18349:184:24:o;18538:135::-;18577:3;-1:-1:-1;;18598:17:24;;18595:43;;;18618:18;;:::i;:::-;-1:-1:-1;18665:1:24;18654:13;;18538:135::o;18957:740::-;-1:-1:-1;;;;;19203:32:24;;19185:51;;19173:2;19255;19273:18;;;19266:30;;;19345:13;;19158:18;;;19367:22;;;19125:4;;19446:15;;;;19255:2;19420;19405:18;;;19125:4;19489:182;19503:6;19500:1;19497:13;19489:182;;;19568:13;;19583:6;19564:26;19552:39;;19646:15;;;;19611:12;;;;19525:1;19518:9;19489:182;;;-1:-1:-1;19688:3:24;;18957:740;-1:-1:-1;;;;;;;18957:740:24:o;20883:635::-;20963:6;21016:2;21004:9;20995:7;20991:23;20987:32;20984:52;;;21032:1;21029;21022:12;20984:52;21065:9;21059:16;21098:18;21090:6;21087:30;21084:50;;;21130:1;21127;21120:12;21084:50;21153:22;;21206:4;21198:13;;21194:27;-1:-1:-1;21184:55:24;;21235:1;21232;21225:12;21184:55;21264:2;21258:9;21289:48;21305:31;21333:2;21305:31;:::i;21289:48::-;21360:2;21353:5;21346:17;21400:7;21395:2;21390;21386;21382:11;21378:20;21375:33;21372:53;;;21421:1;21418;21411:12;21372:53;21434:54;21485:2;21480;21473:5;21469:14;21464:2;21460;21456:11;21434:54;:::i;:::-;21507:5;20883:635;-1:-1:-1;;;;;20883:635:24:o;23508:125::-;23548:4;23576:1;23573;23570:8;23567:34;;;23581:18;;:::i;:::-;-1:-1:-1;23618:9:24;;23508:125::o;24068:112::-;24100:1;24126;24116:35;;24131:18;;:::i;:::-;-1:-1:-1;24165:9:24;;24068:112::o;24185:251::-;24255:6;24308:2;24296:9;24287:7;24283:23;24279:32;24276:52;;;24324:1;24321;24314:12;24276:52;24356:9;24350:16;24375:31;24400:5;24375:31;:::i;24441:204::-;24479:3;24515:4;24512:1;24508:12;24547:4;24544:1;24540:12;24582:3;24576:4;24572:14;24567:3;24564:23;24561:49;;;24590:18;;:::i;:::-;24626:13;;24441:204;-1:-1:-1;;;24441:204:24:o;25636:127::-;25697:10;25692:3;25688:20;25685:1;25678:31;25728:4;25725:1;25718:15;25752:4;25749:1;25742:15;26039:273;26107:6;26160:2;26148:9;26139:7;26135:23;26131:32;26128:52;;;26176:1;26173;26166:12;26128:52;26208:9;26202:16;26258:4;26251:5;26247:16;26240:5;26237:27;26227:55;;26278:1;26275;26268:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "notice": "instantiates contract and rarity tables"
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "mint(uint256,bool)": {
        "notice": "mint a token - 90% Thief, 10% Polices The first 20% are free to claim, the remaining cost $LOOT"
      },
      "mintCost(uint256)": {
        "notice": "the first 20% are paid in AVAX the next 20% are 20000 $LOOT the next 40% are 40000 $LOOT the final 20% are 80000 $LOOT",
        "params": {
          "tokenId": "the ID to check the cost of to mint"
        },
        "returns": {
          "_0": "the cost of the given token ID"
        }
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "setBank(address)": {
        "notice": "called after deployment so that the contract can get random police thieves",
        "params": {
          "_bank": "the address of the Bank"
        }
      },
      "setPaidTokens(uint256)": {
        "notice": "updates the number of tokens for sale"
      },
      "setPaused(bool)": {
        "notice": "enables owner to pause / unpause minting"
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw()": {
        "notice": "allows owner to withdraw funds from minting"
      }
    },
    "version": 1
  },
  "offset": [
    298,
    11884
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x293 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x712D2CC7 GT PUSH2 0x15A JUMPI DUP1 PUSH4 0xC002D23D GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xE2AAFA21 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xE2AAFA21 EQ PUSH2 0x893 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x8C3 JUMPI DUP1 PUSH4 0xF0292A03 EQ PUSH2 0x90C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x922 JUMPI DUP1 PUSH4 0xF4217648 EQ PUSH2 0x942 JUMPI DUP1 PUSH4 0xF47C84C5 EQ PUSH2 0x962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC002D23D EQ PUSH2 0x733 JUMPI DUP1 PUSH4 0xC084F540 EQ PUSH2 0x749 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x75F JUMPI DUP1 PUSH4 0xD773826D EQ PUSH2 0x77F JUMPI DUP1 PUSH4 0xE05C57BF EQ PUSH2 0x79F JUMPI DUP1 PUSH4 0xE1FC334F EQ PUSH2 0x873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA1B8F374 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0xA1B8F374 EQ PUSH2 0x66D JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x69A JUMPI DUP1 PUSH4 0xA2B40D19 EQ PUSH2 0x6BA JUMPI DUP1 PUSH4 0xA6AC4B35 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xA88E0996 EQ PUSH2 0x6F9 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x712D2CC7 EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0x76CDB03B EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0x94E56847 EQ PUSH2 0x60B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x638 JUMPI DUP1 PUSH4 0x9B7B2AB0 EQ PUSH2 0x64D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x302150E5 GT PUSH2 0x1FE JUMPI DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x528 JUMPI DUP1 PUSH4 0x61F64457 EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x67F68FAC EQ PUSH2 0x584 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x302150E5 EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x3431A753 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0x4018B1F8 EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x4F02C420 EQ PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x16C38B3C GT PUSH2 0x250 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x17B8E1CF EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x27DE8F27 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x90D23B9 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0xC89B766 EQ PUSH2 0x369 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B1F JUMP JUMPDEST PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x2B75 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30F PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA8 JUMP JUMPDEST PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD6 JUMP JUMPDEST PUSH2 0xAED JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BF3 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x15 SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C34 JUMP JUMPDEST PUSH2 0xC4F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C9 PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA8 JUMP JUMPDEST PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH2 0x415 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C4F JUMP JUMPDEST PUSH2 0xCBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EC PUSH2 0x435 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA8 JUMP JUMPDEST PUSH2 0xD7D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EC PUSH2 0x455 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BF3 JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EC PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH2 0x48B CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA8 JUMP JUMPDEST PUSH2 0xED3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH2 0xF02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x3EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH2 0x4D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C4F JUMP JUMPDEST PUSH2 0xF65 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x4F5 SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EC PUSH2 0x523 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA8 JUMP JUMPDEST PUSH2 0xF80 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x17 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30F PUSH2 0x57F CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA8 JUMP JUMPDEST PUSH2 0x1013 JUMP JUMPDEST PUSH2 0x347 PUSH2 0x592 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C90 JUMP JUMPDEST PUSH2 0x108A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EC PUSH2 0x5B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD6 JUMP JUMPDEST PUSH2 0x17F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EC PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x30F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x617 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62B PUSH2 0x626 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA8 JUMP JUMPDEST PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x2CBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH2 0x1922 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x659 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EC PUSH2 0x688 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA8 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH2 0x6B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D68 JUMP JUMPDEST PUSH2 0x1931 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH2 0x6D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA8 JUMP JUMPDEST PUSH2 0x19F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x17 SLOAD PUSH2 0x2B8 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x705 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x17 SLOAD PUSH2 0x2B8 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH2 0x72E CALLDATASIZE PUSH1 0x4 PUSH2 0x2E03 JUMP JUMPDEST PUSH2 0x1A25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EC PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EC PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH2 0x77A CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA8 JUMP JUMPDEST PUSH2 0x1A5C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH2 0x79A CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD6 JUMP JUMPDEST PUSH2 0x1B4C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x821 PUSH2 0x7BA CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA8 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 DUP2 DIV DUP3 AND SWAP2 PUSH3 0x10000 DUP3 DIV DUP2 AND SWAP2 PUSH4 0x1000000 DUP2 DIV DUP3 AND SWAP2 PUSH5 0x100000000 DUP3 DIV DUP2 AND SWAP2 PUSH6 0x10000000000 DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x38 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP2 DIV AND DUP10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 ISZERO ISZERO DUP11 MSTORE PUSH1 0xFF SWAP9 DUP10 AND PUSH1 0x20 DUP12 ADD MSTORE SWAP7 DUP9 AND SWAP7 DUP10 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP4 DUP7 AND PUSH1 0x60 DUP9 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x80 DUP8 ADD MSTORE DUP5 AND PUSH1 0xA0 DUP7 ADD MSTORE DUP4 AND PUSH1 0xC0 DUP6 ADD MSTORE DUP3 AND PUSH1 0xE0 DUP5 ADD MSTORE AND PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD PUSH2 0x2C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x8AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD6 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x8DE CALLDATASIZE PUSH1 0x4 PUSH2 0x2EB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x918 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EC PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH2 0x93D CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD6 JUMP JUMPDEST PUSH2 0x1B98 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH2 0x95D CALLDATASIZE PUSH1 0x4 PUSH2 0x2EEB JUMP JUMPDEST PUSH2 0x1C30 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EC PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x9BB JUMPI POP PUSH2 0x9BB DUP3 PUSH2 0x1CC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x9D0 SWAP1 PUSH2 0x2F9D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9FC SWAP1 PUSH2 0x2F9D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA49 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA1E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA49 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA2C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC8 SWAP1 PUSH2 0x2FD2 JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB44 DUP3 PUSH2 0x1013 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAC8 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xBCE JUMPI POP PUSH2 0xBCE DUP2 CALLER PUSH2 0x8DE JUMP JUMPDEST PUSH2 0xC40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0xC4A DUP4 DUP4 PUSH2 0x1D16 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC8 SWAP1 PUSH2 0x2FD2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC8A JUMPI PUSH2 0xC87 PUSH2 0x1D84 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC87 PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0x11 DUP2 PUSH1 0x12 DUP2 LT PUSH2 0xCA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4E6F207265656E7472616E6379 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x15 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD2C CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD60 JUMPI PUSH2 0xD44 CALLER DUP3 PUSH2 0x1EAF JUMP JUMPDEST PUSH2 0xD60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC8 SWAP1 PUSH2 0x3007 JUMP JUMPDEST PUSH2 0xD6B DUP4 DUP4 DUP4 PUSH2 0x1FA6 JUMP JUMPDEST POP POP PUSH1 0x15 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD DUP3 GT PUSH2 0xD90 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH2 0xDBD PUSH32 0x0 PUSH1 0x2 PUSH2 0x306E JUMP JUMPDEST PUSH2 0xDC7 SWAP2 SWAP1 PUSH2 0x30A3 JUMP JUMPDEST DUP3 GT PUSH2 0xDDE JUMPI POP PUSH10 0x43C33C1937564800000 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH2 0xE0B PUSH32 0x0 PUSH1 0x4 PUSH2 0x306E JUMP JUMPDEST PUSH2 0xE15 SWAP2 SWAP1 PUSH2 0x30A3 JUMP JUMPDEST DUP3 GT PUSH2 0xE2C JUMPI POP PUSH10 0x878678326EAC9000000 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH10 0xCB49B44BA602D800000 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE48 DUP4 PUSH2 0x17F4 JUMP JUMPDEST DUP3 LT PUSH2 0xEAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAC8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC8 SWAP1 PUSH2 0x2FD2 JUMP JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC8 SWAP1 PUSH2 0x2FD2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC4A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A25 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8B PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0xFEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1001 JUMPI PUSH2 0x1001 PUSH2 0x30B7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x9BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4E6F207265656E7472616E6379 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x15 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH2 0x10FB PUSH1 0xA SLOAD PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x113C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14185D5CD958589B194E881C185D5CD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAC8 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x1150 JUMPI POP PUSH1 0x17 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x1194 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DD185ADA5B99C81B9BDD081858DD1A5D985D1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11F0 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x11F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAC8 JUMP JUMPDEST ORIGIN CALLER EQ PUSH2 0x122A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x4F6E6C7920454F41 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH32 0x0 SWAP1 PUSH2 0x125E SWAP1 DUP5 SWAP1 PUSH2 0xFFFF AND PUSH2 0x30CD JUMP JUMPDEST GT ISZERO PUSH2 0x12A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1B081D1BDAD95B9CC81B5A5B9D1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x12B2 JUMPI POP PUSH1 0xC SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x12F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A59081B5A5B9D08185B5BDD5B9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH2 0xFFFF AND LT ISZERO PUSH2 0x13C1 JUMPI PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH2 0x1319 SWAP1 DUP5 SWAP1 PUSH2 0xFFFF AND PUSH2 0x30CD JUMP JUMPDEST GT ISZERO PUSH2 0x1367 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E73206F6E2D73616C6520616C726561647920736F6C6400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAC8 JUMP JUMPDEST CALLVALUE PUSH1 0xB SLOAD DUP4 PUSH2 0x1376 SWAP2 SWAP1 PUSH2 0x306E JUMP JUMPDEST EQ PUSH2 0x13BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9D985B1A59081C185E5B595B9D08185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x13CC JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x13CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E8 JUMPI PUSH2 0x13E8 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1411 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x142F JUMPI PUSH2 0x142F PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1458 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0xE SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xFFFF AND DUP2 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x1662 JUMPI PUSH1 0xE DUP1 SLOAD PUSH2 0xFFFF AND SWAP1 PUSH1 0x0 PUSH2 0x1484 DUP4 PUSH2 0x30E5 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP PUSH2 0xFFFF DUP2 DUP2 MUL NOT SWAP1 SWAP4 AND SWAP2 DUP4 AND MUL OR SWAP1 SWAP2 SSTORE PUSH1 0xE SLOAD PUSH2 0x14AD SWAP3 POP AND PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x4155C485 PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND DUP4 XOR PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x82AB890A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1502 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1526 SWAP2 SWAP1 PUSH2 0x3107 JUMP JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x1538 SWAP1 PUSH2 0xFFFF AND DUP5 PUSH2 0x221D JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1544 DUP5 PUSH2 0x2398 JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 SWAP2 POP PUSH2 0x1557 SWAP1 PUSH2 0xFFFF AND PUSH2 0xD7D JUMP JUMPDEST PUSH2 0x1561 SWAP1 DUP9 PUSH2 0x30CD JUMP JUMPDEST SWAP7 POP DUP8 ISZERO DUP1 PUSH2 0x1579 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x15B6 JUMPI DUP1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1591 JUMPI PUSH2 0x1591 PUSH2 0x30B7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH2 0x162B JUMP JUMPDEST PUSH1 0xE SLOAD DUP7 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x15D4 JUMPI PUSH2 0x15D4 PUSH2 0x30B7 JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x12 SLOAD DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x160A JUMPI PUSH2 0x160A PUSH2 0x30B7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x164F JUMPI PUSH1 0x1 PUSH1 0x19 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1649 SWAP2 SWAP1 PUSH2 0x30CD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP DUP1 PUSH2 0x165A DUP2 PUSH2 0x3120 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1468 JUMP JUMPDEST POP DUP5 ISZERO PUSH2 0x16DC JUMPI PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9DC29FAC CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1774 JUMPI PUSH1 0x0 PUSH2 0x16F4 DUP3 DUP5 PUSH2 0x30CD JUMP JUMPDEST PUSH2 0x16FF SWAP1 PUSH1 0x1 PUSH2 0x30CD JUMP JUMPDEST SWAP1 POP DUP8 ISZERO DUP1 PUSH2 0x1739 JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1725 JUMPI PUSH2 0x1725 PUSH2 0x30B7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1761 JUMPI PUSH2 0x1761 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1753 JUMPI PUSH2 0x1753 PUSH2 0x30B7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x2455 JUMP JUMPDEST POP DUP1 PUSH2 0x176C DUP2 PUSH2 0x3120 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16DF JUMP JUMPDEST POP DUP6 ISZERO PUSH2 0x17DE JUMPI PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5B519142 CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17AB SWAP3 SWAP2 SWAP1 PUSH2 0x313B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP PUSH1 0x15 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x185F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAC8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1883 PUSH2 0x2AD3 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH2 0x120 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO DUP4 MSTORE PUSH2 0x100 DUP1 DUP4 DIV DUP3 AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH3 0x10000 DUP3 DIV DUP2 AND SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH4 0x1000000 DUP2 DIV DUP5 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH5 0x100000000 DUP2 DIV DUP5 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH6 0x10000000000 DUP2 DIV DUP5 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x30 SHL DUP2 DIV DUP5 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x38 SHL DUP2 DIV DUP5 AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV SWAP1 SWAP3 AND SWAP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x9D0 SWAP1 PUSH2 0x2F9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x198A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAC8 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC8 SWAP1 PUSH2 0x2FD2 JUMP JUMPDEST PUSH1 0xB SSTORE JUMP JUMPDEST PUSH2 0x1A2F CALLER DUP4 PUSH2 0x1EAF JUMP JUMPDEST PUSH2 0x1A4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC8 SWAP1 PUSH2 0x3007 JUMP JUMPDEST PUSH2 0x1A56 DUP5 DUP5 DUP5 PUSH2 0xCBC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1ADB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC87B56DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC87B56DD SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x9BB SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3195 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC8 SWAP1 PUSH2 0x2FD2 JUMP JUMPDEST PUSH1 0x15 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1BC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC8 SWAP1 PUSH2 0x2FD2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1C27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0xC87 DUP2 PUSH2 0x246F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC8 SWAP1 PUSH2 0x2FD2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1CC2 JUMPI PUSH1 0x1 PUSH1 0x16 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1C7E JUMPI PUSH2 0x1C7E PUSH2 0x30B7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x1CBA DUP2 PUSH2 0x3120 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C5D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x1CF7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x9BB JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x1D4B DUP3 PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1DD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14185D5CD958589B194E881C185D5CD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1E0D CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1E7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14185D5CD958589B194E881B9BDD081C185D5CD959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER PUSH2 0x1E0D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F33 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1F6E JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F63 DUP5 PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x1F9E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FB9 DUP3 PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2021 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2083 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x208E DUP4 DUP4 DUP4 PUSH2 0x24C1 JUMP JUMPDEST PUSH2 0x2099 PUSH1 0x0 DUP3 PUSH2 0x1D16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x20C2 SWAP1 DUP5 SWAP1 PUSH2 0x320C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x20F0 SWAP1 DUP5 SWAP1 PUSH2 0x30CD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3ECA3C95 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x7D94792A SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x219B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21BF SWAP2 SWAP1 PUSH2 0x3107 JUMP JUMPDEST ORIGIN PUSH2 0x21CB PUSH1 0x1 NUMBER PUSH2 0x320C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 SWAP3 SWAP1 SWAP3 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP4 ADD MSTORE BLOCKHASH PUSH1 0x34 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x74 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x94 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 XOR SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2225 PUSH2 0x2AD3 JUMP JUMPDEST PUSH2 0x222E DUP3 PUSH2 0x2579 JUMP JUMPDEST SWAP1 POP PUSH1 0x10 PUSH1 0x0 PUSH2 0x223D DUP4 PUSH2 0x26C4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x237F JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP4 DUP7 ADD MLOAD SWAP3 DUP7 ADD MLOAD PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x80 DUP9 ADD MLOAD PUSH1 0xA0 DUP10 ADD MLOAD PUSH1 0xC0 DUP11 ADD MLOAD PUSH1 0xE0 DUP12 ADD MLOAD PUSH2 0x100 DUP1 DUP14 ADD MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP12 AND SWAP8 ISZERO ISZERO PUSH2 0xFF00 NOT AND SWAP8 SWAP1 SWAP8 OR PUSH1 0xFF SWAP10 DUP11 AND SWAP1 SWAP8 MUL SWAP7 SWAP1 SWAP7 OR PUSH4 0xFFFF0000 NOT AND PUSH3 0x10000 SWAP6 DUP10 AND SWAP6 SWAP1 SWAP6 MUL PUSH4 0xFF000000 NOT AND SWAP5 SWAP1 SWAP5 OR PUSH4 0x1000000 SWAP4 DUP9 AND SWAP4 SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR PUSH6 0xFFFF00000000 NOT AND PUSH5 0x100000000 SWAP2 DUP8 AND SWAP2 SWAP1 SWAP2 MUL PUSH6 0xFF0000000000 NOT AND OR PUSH6 0x10000000000 SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH8 0xFFFF000000000000 NOT AND PUSH1 0x1 PUSH1 0x30 SHL SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 MUL PUSH8 0xFF00000000000000 NOT AND OR PUSH1 0x1 PUSH1 0x38 SHL SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH9 0xFF0000000000000000 NOT AND PUSH1 0x1 PUSH1 0x40 SHL SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 SWAP1 PUSH1 0x10 SWAP1 PUSH2 0x2369 DUP5 PUSH2 0x26C4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE PUSH2 0x9BB JUMP JUMPDEST PUSH2 0x2391 DUP4 PUSH2 0x238C DUP5 PUSH2 0x2151 JUMP JUMPDEST PUSH2 0x221D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0x0 SWAP2 PUSH2 0xFFFF SWAP1 SWAP2 AND GT ISZERO DUP1 PUSH2 0x23C1 JUMPI POP PUSH2 0x23BE PUSH1 0xA PUSH1 0xF5 DUP5 SWAP1 SHR PUSH2 0x3223 JUMP JUMPDEST ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x23CC JUMPI CALLER PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4F36F725 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x90 DUP5 SWAP1 SHR PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x9E6DEE4A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2419 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x243D SWAP2 SWAP1 PUSH2 0x3237 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9BB JUMPI CALLER SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1CC2 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2771 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x251C JUMPI PUSH2 0x2517 DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x253F JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x253F JUMPI PUSH2 0x253F DUP4 DUP3 PUSH2 0x277B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2556 JUMPI PUSH2 0xC4A DUP2 PUSH2 0x2818 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC4A JUMPI PUSH2 0xC4A DUP3 DUP3 PUSH2 0x28C7 JUMP JUMPDEST PUSH2 0x2581 PUSH2 0x2AD3 JUMP JUMPDEST PUSH2 0x2590 PUSH1 0xA PUSH2 0xFFFF DUP5 AND PUSH2 0x3223 JUMP JUMPDEST ISZERO ISZERO DUP1 DUP3 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x25A3 JUMPI PUSH1 0xA PUSH2 0x25A6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x10 SWAP4 SWAP1 SWAP4 SHR SWAP3 SWAP1 POP PUSH2 0x25C7 PUSH2 0xFFFF DUP5 AND PUSH2 0x25C2 DUP4 PUSH1 0x0 PUSH2 0x3254 JUMP JUMPDEST PUSH2 0x290B JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x10 SWAP3 SWAP1 SWAP3 SHR SWAP2 PUSH2 0x25E9 PUSH2 0xFFFF DUP5 AND PUSH2 0x25C2 DUP4 PUSH1 0x1 PUSH2 0x3254 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x10 SWAP3 SWAP1 SWAP3 SHR SWAP2 PUSH2 0x260B PUSH2 0xFFFF DUP5 AND PUSH2 0x25C2 DUP4 PUSH1 0x2 PUSH2 0x3254 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x10 SWAP3 SWAP1 SWAP3 SHR SWAP2 PUSH2 0x262D PUSH2 0xFFFF DUP5 AND PUSH2 0x25C2 DUP4 PUSH1 0x3 PUSH2 0x3254 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x10 SWAP3 SWAP1 SWAP3 SHR SWAP2 PUSH2 0x264F PUSH2 0xFFFF DUP5 AND PUSH2 0x25C2 DUP4 PUSH1 0x4 PUSH2 0x3254 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x10 SWAP3 SWAP1 SWAP3 SHR SWAP2 PUSH2 0x2671 PUSH2 0xFFFF DUP5 AND PUSH2 0x25C2 DUP4 PUSH1 0x5 PUSH2 0x3254 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA0 DUP4 ADD MSTORE DUP2 MLOAD PUSH1 0x10 SWAP4 SWAP1 SWAP4 SHR SWAP3 PUSH2 0x26BE JUMPI PUSH2 0x2699 PUSH2 0xFFFF DUP5 AND PUSH2 0x25C2 DUP4 PUSH1 0x6 PUSH2 0x3254 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x26B4 PUSH2 0xFFFF DUP5 AND PUSH2 0x25C2 DUP4 PUSH1 0x7 PUSH2 0x3254 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x100 DUP4 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xE0 DUP10 ADD MLOAD PUSH1 0xC0 DUP11 ADD MLOAD PUSH2 0x100 SWAP1 SWAP11 ADD MLOAD DUP7 MLOAD SWAP10 ISZERO ISZERO PUSH1 0xF8 SWAP1 DUP2 SHL DUP12 DUP12 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP9 DUP2 SHL DUP10 AND PUSH1 0x21 DUP13 ADD MSTORE SWAP6 DUP7 SHL DUP9 AND PUSH1 0x22 DUP12 ADD MSTORE SWAP4 DUP6 SHL DUP8 AND PUSH1 0x23 DUP11 ADD MSTORE SWAP2 DUP5 SHL DUP7 AND PUSH1 0x24 DUP10 ADD MSTORE DUP4 SHL DUP6 AND PUSH1 0x25 DUP9 ADD MSTORE DUP3 SHL DUP5 AND PUSH1 0x26 DUP8 ADD MSTORE SWAP6 DUP2 SHL DUP4 AND PUSH1 0x27 DUP7 ADD MSTORE SWAP5 SWAP1 SWAP5 SHL AND PUSH1 0x28 DUP4 ADD MSTORE DUP3 MLOAD DUP1 DUP4 SUB PUSH1 0x9 ADD DUP2 MSTORE PUSH1 0x29 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xC4A DUP4 DUP4 PUSH2 0x2985 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2788 DUP5 PUSH2 0x17F4 JUMP JUMPDEST PUSH2 0x2792 SWAP2 SWAP1 PUSH2 0x320C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x27E5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x282A SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x320C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x2852 JUMPI PUSH2 0x2852 PUSH2 0x30B7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2873 JUMPI PUSH2 0x2873 PUSH2 0x30B7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x28AB JUMPI PUSH2 0x28AB PUSH2 0x3279 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D2 DUP4 PUSH2 0x17F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD PUSH4 0x53584B49 PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0xFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xFF DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA6B09692 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2961 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2391 SWAP2 SWAP1 PUSH2 0x328F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x29DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2A40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x2A4C PUSH1 0x0 DUP4 DUP4 PUSH2 0x24C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2A75 SWAP1 DUP5 SWAP1 PUSH2 0x30CD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x2391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B64 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2B4C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1A56 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2B94 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2391 DUP2 PUSH2 0x2BC1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2C11 DUP2 PUSH2 0x2BC1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2C2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2391 DUP3 PUSH2 0x2C1F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2C6F DUP2 PUSH2 0x2BC1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2C7F DUP2 PUSH2 0x2BC1 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2CB3 PUSH1 0x20 DUP5 ADD PUSH2 0x2C1F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP DUP3 MLOAD ISZERO ISZERO DUP3 MSTORE PUSH1 0xFF PUSH1 0x20 DUP5 ADD MLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x2CEC PUSH1 0x40 DUP5 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x2D01 PUSH1 0x60 DUP5 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x2D16 PUSH1 0x80 DUP5 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x2D2B PUSH1 0xA0 DUP5 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x2D40 PUSH1 0xC0 DUP5 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x2D55 PUSH1 0xE0 DUP5 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x100 SWAP3 DUP4 ADD MLOAD PUSH1 0xFF AND SWAP2 SWAP1 SWAP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2D86 DUP2 PUSH2 0x2BC1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CB3 PUSH1 0x20 DUP5 ADD PUSH2 0x2C1F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2DD3 JUMPI PUSH2 0x2DD3 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2DF5 JUMPI PUSH2 0x2DF5 PUSH2 0x2D94 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2E24 DUP2 PUSH2 0x2BC1 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x2E34 DUP2 PUSH2 0x2BC1 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x2E68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2E7B PUSH2 0x2E76 DUP3 PUSH2 0x2DDB JUMP JUMPDEST PUSH2 0x2DAA JUMP JUMPDEST DUP2 DUP2 MSTORE DUP9 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x2E90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2ED0 DUP2 PUSH2 0x2BC1 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2EE0 DUP2 PUSH2 0x2BC1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2F16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2F2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2F3C JUMPI PUSH2 0x2F3C PUSH2 0x2D94 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x2F4D DUP5 DUP4 ADD PUSH2 0x2DAA JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP9 DUP5 GT ISZERO PUSH2 0x2F67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x2F91 JUMPI DUP5 CALLDATALOAD SWAP3 POP PUSH2 0x2F81 DUP4 PUSH2 0x2BC1 JUMP JUMPDEST DUP3 DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x2F6C JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2FB1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x26BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3088 JUMPI PUSH2 0x3088 PUSH2 0x3058 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x30B2 JUMPI PUSH2 0x30B2 PUSH2 0x308D JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x30E0 JUMPI PUSH2 0x30E0 PUSH2 0x3058 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x30FD JUMPI PUSH2 0x30FD PUSH2 0x3058 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3134 JUMPI PUSH2 0x3134 PUSH2 0x3058 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD SWAP2 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 DUP3 ADD SWAP2 SWAP1 PUSH1 0x60 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3188 JUMPI DUP5 MLOAD PUSH2 0xFFFF AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3168 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x31CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x31DD PUSH2 0x2E76 DUP3 PUSH2 0x2DDB JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x31F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3203 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2B49 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x321E JUMPI PUSH2 0x321E PUSH2 0x3058 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3232 JUMPI PUSH2 0x3232 PUSH2 0x308D JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2391 DUP2 PUSH2 0x2BC1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x3271 JUMPI PUSH2 0x3271 PUSH2 0x3058 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2391 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0x4D 0xD2 DUP4 PUSH15 0x3861496B084418B43EE337DE79D872 0xC4 0x22 0xEB 0x2B MOD SELFBALANCE CALLDATALOAD CHAINID EXP PUSH12 0x2D0764736F6C634300080B00 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        298,
        11884
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "8": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "LT",
      "path": "22"
    },
    "9": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x293"
    },
    "12": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "13": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "16": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "SHR",
      "path": "22"
    },
    "19": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "20": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x712D2CC7"
    },
    "25": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "GT",
      "path": "22"
    },
    "26": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15A"
    },
    "29": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "30": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "31": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC002D23D"
    },
    "36": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "GT",
      "path": "22"
    },
    "37": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC1"
    },
    "40": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "41": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "42": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xE2AAFA21"
    },
    "47": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "GT",
      "path": "22"
    },
    "48": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7A"
    },
    "51": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "52": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "53": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xE2AAFA21"
    },
    "58": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "59": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x893"
    },
    "62": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "63": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "64": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xE985E9C5"
    },
    "69": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "70": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8C3"
    },
    "73": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "74": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "75": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xF0292A03"
    },
    "80": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "81": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x90C"
    },
    "84": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "85": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "86": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xF2FDE38B"
    },
    "91": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "92": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x922"
    },
    "95": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "96": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "97": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xF4217648"
    },
    "102": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "103": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x942"
    },
    "106": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "107": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "108": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xF47C84C5"
    },
    "113": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "114": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x962"
    },
    "117": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "118": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "120": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "121": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "REVERT",
      "path": "22"
    },
    "122": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "123": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "124": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC002D23D"
    },
    "129": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "130": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x733"
    },
    "133": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "134": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "135": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC084F540"
    },
    "140": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "141": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x749"
    },
    "144": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "145": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "146": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC87B56DD"
    },
    "151": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "152": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x75F"
    },
    "155": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "156": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "157": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xD773826D"
    },
    "162": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "163": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x77F"
    },
    "166": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "167": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "168": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xE05C57BF"
    },
    "173": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "174": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x79F"
    },
    "177": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "178": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "179": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xE1FC334F"
    },
    "184": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "185": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x873"
    },
    "188": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "189": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "191": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "192": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "REVERT",
      "path": "22"
    },
    "193": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "194": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "195": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA1B8F374"
    },
    "200": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "GT",
      "path": "22"
    },
    "201": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x113"
    },
    "204": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "205": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "206": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA1B8F374"
    },
    "211": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "212": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x66D"
    },
    "215": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "216": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "217": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA22CB465"
    },
    "222": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "223": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x69A"
    },
    "226": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "227": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "228": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA2B40D19"
    },
    "233": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "234": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6BA"
    },
    "237": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "238": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "239": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA6AC4B35"
    },
    "244": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "245": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6DA"
    },
    "248": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "249": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "250": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA88E0996"
    },
    "255": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "256": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6F9"
    },
    "259": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "260": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "261": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xB88D4FDE"
    },
    "266": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "267": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x713"
    },
    "270": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "271": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "273": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "274": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "REVERT",
      "path": "22"
    },
    "275": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "276": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "277": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x712D2CC7"
    },
    "282": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "283": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5B7"
    },
    "286": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "287": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "288": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x76CDB03B"
    },
    "293": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "294": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5CD"
    },
    "297": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "298": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "299": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x8DA5CB5B"
    },
    "304": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "305": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5ED"
    },
    "308": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "309": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "310": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x94E56847"
    },
    "315": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "316": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x60B"
    },
    "319": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "320": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "321": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x95D89B41"
    },
    "326": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "327": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x638"
    },
    "330": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "331": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "332": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x9B7B2AB0"
    },
    "337": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "338": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x64D"
    },
    "341": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "342": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "344": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "345": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "REVERT",
      "path": "22"
    },
    "346": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "347": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "348": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x302150E5"
    },
    "353": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "GT",
      "path": "22"
    },
    "354": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1FE"
    },
    "357": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "358": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "359": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x4F6CCCE7"
    },
    "364": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "GT",
      "path": "22"
    },
    "365": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B7"
    },
    "368": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "369": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "370": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x4F6CCCE7"
    },
    "375": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "376": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x508"
    },
    "379": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "380": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "381": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x5C975ABB"
    },
    "386": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "387": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x528"
    },
    "390": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "391": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "392": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x61F64457"
    },
    "397": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "398": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x547"
    },
    "401": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "402": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "403": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x6352211E"
    },
    "408": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "409": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x564"
    },
    "412": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "413": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "414": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x67F68FAC"
    },
    "419": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "420": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x584"
    },
    "423": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "424": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "425": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "430": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "431": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x597"
    },
    "434": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "435": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "437": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "438": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "REVERT",
      "path": "22"
    },
    "439": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "440": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "441": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x302150E5"
    },
    "446": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "447": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x45A"
    },
    "450": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "451": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "452": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x3431A753"
    },
    "457": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "458": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x470"
    },
    "461": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "462": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "463": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x3CCFD60B"
    },
    "468": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "469": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x490"
    },
    "472": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "473": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "474": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x4018B1F8"
    },
    "479": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "480": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4A5"
    },
    "483": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "484": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "485": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x42842E0E"
    },
    "490": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "491": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4BA"
    },
    "494": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "495": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "496": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x4F02C420"
    },
    "501": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "502": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4DA"
    },
    "505": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "506": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "508": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "509": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "REVERT",
      "path": "22"
    },
    "510": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "511": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "512": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x16C38B3C"
    },
    "517": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "GT",
      "path": "22"
    },
    "518": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x250"
    },
    "521": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "522": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "523": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x16C38B3C"
    },
    "528": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "529": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x389"
    },
    "532": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "533": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "534": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x17B8E1CF"
    },
    "539": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "540": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3A9"
    },
    "543": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "544": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "545": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x18160DDD"
    },
    "550": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "551": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3DB"
    },
    "554": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "555": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "556": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x23B872DD"
    },
    "561": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "562": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3FA"
    },
    "565": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "566": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "567": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x27DE8F27"
    },
    "572": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "573": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x41A"
    },
    "576": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "577": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "578": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x2F745C59"
    },
    "583": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "584": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x43A"
    },
    "587": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "588": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "590": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "591": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "REVERT",
      "path": "22"
    },
    "592": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "593": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "594": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x1FFC9A7"
    },
    "599": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "600": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x298"
    },
    "603": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "604": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "605": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x6FDDE03"
    },
    "610": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "611": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2CD"
    },
    "614": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "615": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "616": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x81812FC"
    },
    "621": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "622": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EF"
    },
    "625": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "626": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "627": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x90D23B9"
    },
    "632": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "633": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x327"
    },
    "636": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "637": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "638": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x95EA7B3"
    },
    "643": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "644": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x349"
    },
    "647": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "648": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "649": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC89B766"
    },
    "654": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "EQ",
      "path": "22"
    },
    "655": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x369"
    },
    "658": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "659": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "660": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "662": {
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "DUP1",
      "path": "22"
    },
    "663": {
      "first_revert": true,
      "fn": null,
      "offset": [
        298,
        11884
      ],
      "op": "REVERT",
      "path": "22"
    },
    "664": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "665": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "666": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "DUP1",
      "path": "6"
    },
    "667": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "668": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A4"
    },
    "671": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "672": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "674": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "DUP1",
      "path": "6"
    },
    "675": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "REVERT",
      "path": "6"
    },
    "676": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "677": {
      "op": "POP"
    },
    "678": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B8"
    },
    "681": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B3"
    },
    "684": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "685": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "687": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B1F"
    },
    "690": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        909,
        1199
      ],
      "op": "JUMP",
      "path": "6"
    },
    "691": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "692": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x996"
    },
    "695": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        909,
        1199
      ],
      "op": "JUMP",
      "path": "6"
    },
    "696": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "697": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "699": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "700": {
      "op": "SWAP1"
    },
    "701": {
      "op": "ISZERO"
    },
    "702": {
      "op": "ISZERO"
    },
    "703": {
      "op": "DUP2"
    },
    "704": {
      "op": "MSTORE"
    },
    "705": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "707": {
      "op": "ADD"
    },
    "708": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "709": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "711": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "712": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "DUP1",
      "path": "6"
    },
    "713": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "714": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "SUB",
      "path": "6"
    },
    "715": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "716": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "RETURN",
      "path": "6"
    },
    "717": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "718": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "DUP1",
      "path": "5"
    },
    "720": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D9"
    },
    "724": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "725": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "DUP1",
      "path": "5"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "REVERT",
      "path": "5"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "POP",
      "path": "5"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E2"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9C1"
    },
    "737": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2549,
        2647
      ],
      "op": "JUMP",
      "path": "5"
    },
    "738": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "739": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "741": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "742": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C4"
    },
    "745": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "746": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "747": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B75"
    },
    "750": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2549,
        2647
      ],
      "op": "JUMP",
      "path": "5"
    },
    "751": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "752": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "753": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "DUP1",
      "path": "5"
    },
    "754": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "755": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2FB"
    },
    "758": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "759": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "761": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "DUP1",
      "path": "5"
    },
    "762": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "REVERT",
      "path": "5"
    },
    "763": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "764": {
      "op": "POP"
    },
    "765": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30F"
    },
    "768": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30A"
    },
    "771": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "772": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "774": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BA8"
    },
    "777": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4182,
        4477
      ],
      "op": "JUMP",
      "path": "5"
    },
    "778": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "779": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA53"
    },
    "782": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4182,
        4477
      ],
      "op": "JUMP",
      "path": "5"
    },
    "783": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "784": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "786": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "791": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "793": {
      "op": "SHL"
    },
    "794": {
      "op": "SUB"
    },
    "795": {
      "op": "SWAP1"
    },
    "796": {
      "op": "SWAP2"
    },
    "797": {
      "op": "AND"
    },
    "798": {
      "op": "DUP2"
    },
    "799": {
      "op": "MSTORE"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "802": {
      "op": "ADD"
    },
    "803": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C4"
    },
    "806": {
      "op": "JUMP"
    },
    "807": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10673,
        10760
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "808": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10673,
        10760
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "809": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10673,
        10760
      ],
      "op": "DUP1",
      "path": "22"
    },
    "810": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10673,
        10760
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "811": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10673,
        10760
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x333"
    },
    "814": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10673,
        10760
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "815": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10673,
        10760
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "817": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10673,
        10760
      ],
      "op": "DUP1",
      "path": "22"
    },
    "818": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10673,
        10760
      ],
      "op": "REVERT",
      "path": "22"
    },
    "819": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10673,
        10760
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "820": {
      "op": "POP"
    },
    "821": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10673,
        10760
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x347"
    },
    "824": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10673,
        10760
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x342"
    },
    "827": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10673,
        10760
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "828": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10673,
        10760
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "830": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10673,
        10760
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BD6"
    },
    "833": {
      "fn": "PoliceAndThief.setBank",
      "jump": "i",
      "offset": [
        10673,
        10760
      ],
      "op": "JUMP",
      "path": "22"
    },
    "834": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10673,
        10760
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "835": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10673,
        10760
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAED"
    },
    "838": {
      "fn": "PoliceAndThief.setBank",
      "jump": "i",
      "offset": [
        10673,
        10760
      ],
      "op": "JUMP",
      "path": "22"
    },
    "839": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10673,
        10760
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "840": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10673,
        10760
      ],
      "op": "STOP",
      "path": "22"
    },
    "841": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "842": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "843": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "DUP1",
      "path": "5"
    },
    "844": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "845": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x355"
    },
    "848": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "849": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "851": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "DUP1",
      "path": "5"
    },
    "852": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "REVERT",
      "path": "5"
    },
    "853": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "854": {
      "op": "POP"
    },
    "855": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x347"
    },
    "858": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x364"
    },
    "861": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "862": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "864": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BF3"
    },
    "867": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3720,
        4121
      ],
      "op": "JUMP",
      "path": "5"
    },
    "868": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "869": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB39"
    },
    "872": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3720,
        4121
      ],
      "op": "JUMP",
      "path": "5"
    },
    "873": {
      "offset": [
        1539,
        1564
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "874": {
      "fn": "ERC721.approve",
      "offset": [
        1539,
        1564
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "875": {
      "fn": "ERC721.approve",
      "offset": [
        1539,
        1564
      ],
      "op": "DUP1",
      "path": "22"
    },
    "876": {
      "fn": "ERC721.approve",
      "offset": [
        1539,
        1564
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "877": {
      "fn": "ERC721.approve",
      "offset": [
        1539,
        1564
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x375"
    },
    "880": {
      "fn": "ERC721.approve",
      "offset": [
        1539,
        1564
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "881": {
      "fn": "ERC721.approve",
      "offset": [
        1539,
        1564
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "883": {
      "fn": "ERC721.approve",
      "offset": [
        1539,
        1564
      ],
      "op": "DUP1",
      "path": "22"
    },
    "884": {
      "fn": "ERC721.approve",
      "offset": [
        1539,
        1564
      ],
      "op": "REVERT",
      "path": "22"
    },
    "885": {
      "fn": "ERC721.approve",
      "offset": [
        1539,
        1564
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "886": {
      "op": "POP"
    },
    "887": {
      "offset": [
        1539,
        1564
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x15"
    },
    "889": {
      "fn": "ERC721.approve",
      "offset": [
        1539,
        1564
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "890": {
      "fn": "ERC721.approve",
      "offset": [
        1539,
        1564
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30F"
    },
    "893": {
      "fn": "ERC721.approve",
      "offset": [
        1539,
        1564
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "900": {
      "op": "SHL"
    },
    "901": {
      "op": "SUB"
    },
    "902": {
      "offset": [
        1539,
        1564
      ],
      "op": "AND",
      "path": "22"
    },
    "903": {
      "fn": "ERC721.approve",
      "offset": [
        1539,
        1564
      ],
      "op": "DUP2",
      "path": "22"
    },
    "904": {
      "fn": "ERC721.approve",
      "offset": [
        1539,
        1564
      ],
      "op": "JUMP",
      "path": "22"
    },
    "905": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11179,
        11294
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "906": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11179,
        11294
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "907": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11179,
        11294
      ],
      "op": "DUP1",
      "path": "22"
    },
    "908": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11179,
        11294
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "909": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11179,
        11294
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x395"
    },
    "912": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11179,
        11294
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "913": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11179,
        11294
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "915": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11179,
        11294
      ],
      "op": "DUP1",
      "path": "22"
    },
    "916": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11179,
        11294
      ],
      "op": "REVERT",
      "path": "22"
    },
    "917": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11179,
        11294
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "918": {
      "op": "POP"
    },
    "919": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11179,
        11294
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x347"
    },
    "922": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11179,
        11294
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3A4"
    },
    "925": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11179,
        11294
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "926": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11179,
        11294
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "928": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11179,
        11294
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C34"
    },
    "931": {
      "fn": "PoliceAndThief.setPaused",
      "jump": "i",
      "offset": [
        11179,
        11294
      ],
      "op": "JUMP",
      "path": "22"
    },
    "932": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11179,
        11294
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "933": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11179,
        11294
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC4F"
    },
    "936": {
      "fn": "PoliceAndThief.setPaused",
      "jump": "i",
      "offset": [
        11179,
        11294
      ],
      "op": "JUMP",
      "path": "22"
    },
    "937": {
      "offset": [
        1220,
        1245
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "938": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "939": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "DUP1",
      "path": "22"
    },
    "940": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "941": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3B5"
    },
    "944": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "945": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "947": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "DUP1",
      "path": "22"
    },
    "948": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "REVERT",
      "path": "22"
    },
    "949": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "950": {
      "op": "POP"
    },
    "951": {
      "offset": [
        1220,
        1245
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3C9"
    },
    "954": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3C4"
    },
    "957": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "958": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "960": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BA8"
    },
    "963": {
      "fn": "PoliceAndThief.setPaused",
      "jump": "i",
      "offset": [
        1220,
        1245
      ],
      "op": "JUMP",
      "path": "22"
    },
    "964": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "965": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC92"
    },
    "968": {
      "fn": "PoliceAndThief.setPaused",
      "jump": "i",
      "offset": [
        1220,
        1245
      ],
      "op": "JUMP",
      "path": "22"
    },
    "969": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "970": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "972": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "973": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "975": {
      "op": "SWAP1"
    },
    "976": {
      "op": "SWAP2"
    },
    "977": {
      "op": "AND"
    },
    "978": {
      "op": "DUP2"
    },
    "979": {
      "op": "MSTORE"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "982": {
      "op": "ADD"
    },
    "983": {
      "offset": [
        1220,
        1245
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C4"
    },
    "986": {
      "op": "JUMP"
    },
    "987": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1680,
        1791
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "988": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1680,
        1791
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "989": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1680,
        1791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "990": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1680,
        1791
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "991": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1680,
        1791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E7"
    },
    "994": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1680,
        1791
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "995": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1680,
        1791
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "997": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1680,
        1791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "998": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1680,
        1791
      ],
      "op": "REVERT",
      "path": "6"
    },
    "999": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1680,
        1791
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1000": {
      "op": "POP"
    },
    "1001": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1767,
        1777
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x8"
    },
    "1003": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1767,
        1784
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1004": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1680,
        1791
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1005": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1680,
        1791
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1007": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1680,
        1791
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1008": {
      "op": "SWAP1"
    },
    "1009": {
      "op": "DUP2"
    },
    "1010": {
      "op": "MSTORE"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1013": {
      "op": "ADD"
    },
    "1014": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1680,
        1791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C4"
    },
    "1017": {
      "op": "JUMP"
    },
    "1018": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5087,
        5558
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1019": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5087,
        5558
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1020": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5087,
        5558
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1021": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5087,
        5558
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1022": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5087,
        5558
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x406"
    },
    "1025": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5087,
        5558
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1026": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5087,
        5558
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1028": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5087,
        5558
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1029": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5087,
        5558
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1030": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5087,
        5558
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1031": {
      "op": "POP"
    },
    "1032": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5087,
        5558
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x347"
    },
    "1035": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5087,
        5558
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x415"
    },
    "1038": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5087,
        5558
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1039": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5087,
        5558
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1041": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5087,
        5558
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C4F"
    },
    "1044": {
      "fn": "PoliceAndThief.transferFrom",
      "jump": "i",
      "offset": [
        5087,
        5558
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1045": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5087,
        5558
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1046": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5087,
        5558
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCBC"
    },
    "1049": {
      "fn": "PoliceAndThief.transferFrom",
      "jump": "i",
      "offset": [
        5087,
        5558
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1050": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1051": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1052": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1053": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1054": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x426"
    },
    "1057": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1058": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1060": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1061": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1062": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1063": {
      "op": "POP"
    },
    "1064": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3EC"
    },
    "1067": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x435"
    },
    "1070": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1071": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1073": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BA8"
    },
    "1076": {
      "fn": "PoliceAndThief.mintCost",
      "jump": "i",
      "offset": [
        4805,
        5081
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1077": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1078": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD7D"
    },
    "1081": {
      "fn": "PoliceAndThief.mintCost",
      "jump": "i",
      "offset": [
        4805,
        5081
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1082": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1278,
        1609
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1083": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1278,
        1609
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1084": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1278,
        1609
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1085": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1278,
        1609
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1086": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1278,
        1609
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x446"
    },
    "1089": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1278,
        1609
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1090": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1278,
        1609
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1092": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1278,
        1609
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1093": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1278,
        1609
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1094": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1278,
        1609
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1095": {
      "op": "POP"
    },
    "1096": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1278,
        1609
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3EC"
    },
    "1099": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1278,
        1609
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x455"
    },
    "1102": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1278,
        1609
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1103": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1278,
        1609
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1105": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1278,
        1609
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BF3"
    },
    "1108": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1278,
        1609
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1109": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1278,
        1609
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1110": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1278,
        1609
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE3D"
    },
    "1113": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1278,
        1609
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1114": {
      "offset": [
        1737,
        1773
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1115": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1737,
        1773
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1116": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1737,
        1773
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1117": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1737,
        1773
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1118": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1737,
        1773
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x466"
    },
    "1121": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1737,
        1773
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1122": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1737,
        1773
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1124": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1737,
        1773
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1125": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1737,
        1773
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1126": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1737,
        1773
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1127": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1737,
        1773
      ],
      "op": "POP",
      "path": "22"
    },
    "1128": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1737,
        1773
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3EC"
    },
    "1131": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1737,
        1773
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x18"
    },
    "1133": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1737,
        1773
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1134": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1737,
        1773
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1135": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1737,
        1773
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1136": {
      "fn": "PoliceAndThief.setPaidTokens",
      "offset": [
        11004,
        11109
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1137": {
      "fn": "PoliceAndThief.setPaidTokens",
      "offset": [
        11004,
        11109
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1138": {
      "fn": "PoliceAndThief.setPaidTokens",
      "offset": [
        11004,
        11109
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1139": {
      "fn": "PoliceAndThief.setPaidTokens",
      "offset": [
        11004,
        11109
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1140": {
      "fn": "PoliceAndThief.setPaidTokens",
      "offset": [
        11004,
        11109
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x47C"
    },
    "1143": {
      "fn": "PoliceAndThief.setPaidTokens",
      "offset": [
        11004,
        11109
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1144": {
      "fn": "PoliceAndThief.setPaidTokens",
      "offset": [
        11004,
        11109
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1146": {
      "fn": "PoliceAndThief.setPaidTokens",
      "offset": [
        11004,
        11109
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1147": {
      "fn": "PoliceAndThief.setPaidTokens",
      "offset": [
        11004,
        11109
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1148": {
      "fn": "PoliceAndThief.setPaidTokens",
      "offset": [
        11004,
        11109
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1149": {
      "op": "POP"
    },
    "1150": {
      "fn": "PoliceAndThief.setPaidTokens",
      "offset": [
        11004,
        11109
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x347"
    },
    "1153": {
      "fn": "PoliceAndThief.setPaidTokens",
      "offset": [
        11004,
        11109
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x48B"
    },
    "1156": {
      "fn": "PoliceAndThief.setPaidTokens",
      "offset": [
        11004,
        11109
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1157": {
      "fn": "PoliceAndThief.setPaidTokens",
      "offset": [
        11004,
        11109
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1159": {
      "fn": "PoliceAndThief.setPaidTokens",
      "offset": [
        11004,
        11109
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BA8"
    },
    "1162": {
      "fn": "PoliceAndThief.setPaidTokens",
      "jump": "i",
      "offset": [
        11004,
        11109
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1163": {
      "fn": "PoliceAndThief.setPaidTokens",
      "offset": [
        11004,
        11109
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1164": {
      "fn": "PoliceAndThief.setPaidTokens",
      "offset": [
        11004,
        11109
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xED3"
    },
    "1167": {
      "fn": "PoliceAndThief.setPaidTokens",
      "jump": "i",
      "offset": [
        11004,
        11109
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1168": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10833,
        10937
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1169": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10833,
        10937
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1170": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10833,
        10937
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1171": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10833,
        10937
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1172": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10833,
        10937
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x49C"
    },
    "1175": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10833,
        10937
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1176": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10833,
        10937
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1178": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10833,
        10937
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1179": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10833,
        10937
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1180": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10833,
        10937
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1181": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10833,
        10937
      ],
      "op": "POP",
      "path": "22"
    },
    "1182": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10833,
        10937
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x347"
    },
    "1185": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10833,
        10937
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF02"
    },
    "1188": {
      "fn": "PoliceAndThief.withdraw",
      "jump": "i",
      "offset": [
        10833,
        10937
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1189": {
      "fn": "PoliceAndThief.getPaidTokens",
      "offset": [
        10298,
        10399
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1190": {
      "fn": "PoliceAndThief.getPaidTokens",
      "offset": [
        10298,
        10399
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1191": {
      "fn": "PoliceAndThief.getPaidTokens",
      "offset": [
        10298,
        10399
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1192": {
      "fn": "PoliceAndThief.getPaidTokens",
      "offset": [
        10298,
        10399
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1193": {
      "fn": "PoliceAndThief.getPaidTokens",
      "offset": [
        10298,
        10399
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4B1"
    },
    "1196": {
      "fn": "PoliceAndThief.getPaidTokens",
      "offset": [
        10298,
        10399
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1197": {
      "fn": "PoliceAndThief.getPaidTokens",
      "offset": [
        10298,
        10399
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1199": {
      "fn": "PoliceAndThief.getPaidTokens",
      "offset": [
        10298,
        10399
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1200": {
      "fn": "PoliceAndThief.getPaidTokens",
      "offset": [
        10298,
        10399
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1201": {
      "fn": "PoliceAndThief.getPaidTokens",
      "offset": [
        10298,
        10399
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1202": {
      "op": "POP"
    },
    "1203": {
      "fn": "PoliceAndThief.getPaidTokens",
      "offset": [
        10381,
        10392
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 1,
      "value": "0xD"
    },
    "1205": {
      "fn": "PoliceAndThief.getPaidTokens",
      "offset": [
        10381,
        10392
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1206": {
      "fn": "PoliceAndThief.getPaidTokens",
      "offset": [
        10298,
        10399
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3EC"
    },
    "1209": {
      "fn": "PoliceAndThief.getPaidTokens",
      "offset": [
        10298,
        10399
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1210": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1211": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1212": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1213": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1214": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4C6"
    },
    "1217": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1218": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1220": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1221": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1222": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1223": {
      "op": "POP"
    },
    "1224": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x347"
    },
    "1227": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4D5"
    },
    "1230": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1231": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1233": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C4F"
    },
    "1236": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5626,
        5805
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1237": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1238": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF65"
    },
    "1241": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5626,
        5805
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1242": {
      "offset": [
        759,
        779
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1243": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        759,
        779
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1244": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        759,
        779
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1245": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        759,
        779
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1246": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        759,
        779
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4E6"
    },
    "1249": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        759,
        779
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1250": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        759,
        779
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1252": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        759,
        779
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1253": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        759,
        779
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1254": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        759,
        779
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1255": {
      "op": "POP"
    },
    "1256": {
      "offset": [
        759,
        779
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE"
    },
    "1258": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        759,
        779
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1259": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        759,
        779
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4F5"
    },
    "1262": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        759,
        779
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1263": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        759,
        779
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "1266": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        759,
        779
      ],
      "op": "AND",
      "path": "22"
    },
    "1267": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        759,
        779
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1268": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        759,
        779
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1269": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        759,
        779
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1270": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        759,
        779
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1272": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        759,
        779
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1273": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "1276": {
      "op": "SWAP1"
    },
    "1277": {
      "op": "SWAP2"
    },
    "1278": {
      "op": "AND"
    },
    "1279": {
      "op": "DUP2"
    },
    "1280": {
      "op": "MSTORE"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1283": {
      "op": "ADD"
    },
    "1284": {
      "offset": [
        759,
        779
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C4"
    },
    "1287": {
      "op": "JUMP"
    },
    "1288": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1289": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1290": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1291": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1292": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x514"
    },
    "1295": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1296": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1298": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1299": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1300": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1301": {
      "op": "POP"
    },
    "1302": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3EC"
    },
    "1305": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x523"
    },
    "1308": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1309": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1311": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BA8"
    },
    "1314": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1863,
        2171
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1315": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1316": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF80"
    },
    "1319": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1863,
        2171
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1320": {
      "fn": "Pauseable.paused",
      "offset": [
        1033,
        1117
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1321": {
      "fn": "Pauseable.paused",
      "offset": [
        1033,
        1117
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1322": {
      "fn": "Pauseable.paused",
      "offset": [
        1033,
        1117
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1323": {
      "fn": "Pauseable.paused",
      "offset": [
        1033,
        1117
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1324": {
      "fn": "Pauseable.paused",
      "offset": [
        1033,
        1117
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x534"
    },
    "1327": {
      "fn": "Pauseable.paused",
      "offset": [
        1033,
        1117
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1328": {
      "fn": "Pauseable.paused",
      "offset": [
        1033,
        1117
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1330": {
      "fn": "Pauseable.paused",
      "offset": [
        1033,
        1117
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1331": {
      "fn": "Pauseable.paused",
      "offset": [
        1033,
        1117
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1332": {
      "fn": "Pauseable.paused",
      "offset": [
        1033,
        1117
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1333": {
      "op": "POP"
    },
    "1334": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 2,
      "value": "0xA"
    },
    "1336": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1341": {
      "op": "SHL"
    },
    "1342": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1343": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "DIV",
      "path": "21"
    },
    "1344": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "1346": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "AND",
      "path": "21"
    },
    "1347": {
      "fn": "Pauseable.paused",
      "offset": [
        1033,
        1117
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2B8"
    },
    "1350": {
      "fn": "Pauseable.paused",
      "offset": [
        1033,
        1117
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1351": {
      "fn": "PoliceAndThief.isStakingActive",
      "offset": [
        10405,
        10507
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1352": {
      "fn": "PoliceAndThief.isStakingActive",
      "offset": [
        10405,
        10507
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1353": {
      "fn": "PoliceAndThief.isStakingActive",
      "offset": [
        10405,
        10507
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1354": {
      "fn": "PoliceAndThief.isStakingActive",
      "offset": [
        10405,
        10507
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1355": {
      "fn": "PoliceAndThief.isStakingActive",
      "offset": [
        10405,
        10507
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x553"
    },
    "1358": {
      "fn": "PoliceAndThief.isStakingActive",
      "offset": [
        10405,
        10507
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1359": {
      "fn": "PoliceAndThief.isStakingActive",
      "offset": [
        10405,
        10507
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1361": {
      "fn": "PoliceAndThief.isStakingActive",
      "offset": [
        10405,
        10507
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1362": {
      "fn": "PoliceAndThief.isStakingActive",
      "offset": [
        10405,
        10507
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1363": {
      "fn": "PoliceAndThief.isStakingActive",
      "offset": [
        10405,
        10507
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1364": {
      "op": "POP"
    },
    "1365": {
      "fn": "PoliceAndThief.isStakingActive",
      "offset": [
        10487,
        10500
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 3,
      "value": "0x17"
    },
    "1367": {
      "fn": "PoliceAndThief.isStakingActive",
      "offset": [
        10487,
        10500
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1368": {
      "fn": "PoliceAndThief.isStakingActive",
      "offset": [
        10487,
        10500
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "1371": {
      "fn": "PoliceAndThief.isStakingActive",
      "offset": [
        10487,
        10500
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1372": {
      "fn": "PoliceAndThief.isStakingActive",
      "offset": [
        10487,
        10500
      ],
      "op": "DIV",
      "path": "22"
    },
    "1373": {
      "fn": "PoliceAndThief.isStakingActive",
      "offset": [
        10487,
        10500
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "1375": {
      "fn": "PoliceAndThief.isStakingActive",
      "offset": [
        10487,
        10500
      ],
      "op": "AND",
      "path": "22"
    },
    "1376": {
      "fn": "PoliceAndThief.isStakingActive",
      "offset": [
        10405,
        10507
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B8"
    },
    "1379": {
      "fn": "PoliceAndThief.isStakingActive",
      "offset": [
        10405,
        10507
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1380": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1381": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1384": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x570"
    },
    "1387": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1388": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1391": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1392": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1393": {
      "op": "POP"
    },
    "1394": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30F"
    },
    "1397": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x57F"
    },
    "1400": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1401": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1403": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BA8"
    },
    "1406": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2174,
        2487
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1407": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1408": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1013"
    },
    "1411": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2174,
        2487
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1412": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2540,
        4532
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1413": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2540,
        4532
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x347"
    },
    "1416": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2540,
        4532
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x592"
    },
    "1419": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2540,
        4532
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1420": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2540,
        4532
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1422": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2540,
        4532
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C90"
    },
    "1425": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        2540,
        4532
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1426": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2540,
        4532
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1427": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2540,
        4532
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x108A"
    },
    "1430": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        2540,
        4532
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1431": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1432": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1433": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1434": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1435": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5A3"
    },
    "1438": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1439": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1441": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1442": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1443": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1444": {
      "op": "POP"
    },
    "1445": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3EC"
    },
    "1448": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B2"
    },
    "1451": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1452": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1454": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BD6"
    },
    "1457": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1834,
        2117
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1458": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1459": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17F4"
    },
    "1462": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1834,
        2117
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1463": {
      "offset": [
        1779,
        1817
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1464": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1779,
        1817
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1465": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1779,
        1817
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1466": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1779,
        1817
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1467": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1779,
        1817
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5C3"
    },
    "1470": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1779,
        1817
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1471": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1779,
        1817
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1473": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1779,
        1817
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1474": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1779,
        1817
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1475": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1779,
        1817
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1476": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1779,
        1817
      ],
      "op": "POP",
      "path": "22"
    },
    "1477": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1779,
        1817
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3EC"
    },
    "1480": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1779,
        1817
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x19"
    },
    "1482": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1779,
        1817
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1483": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1779,
        1817
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1484": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1779,
        1817
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1485": {
      "offset": [
        1392,
        1409
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1486": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1392,
        1409
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1487": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1392,
        1409
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1488": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1392,
        1409
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1489": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1392,
        1409
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5D9"
    },
    "1492": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1392,
        1409
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1493": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1392,
        1409
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1495": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1392,
        1409
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1496": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1392,
        1409
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1497": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1392,
        1409
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1498": {
      "op": "POP"
    },
    "1499": {
      "offset": [
        1392,
        1409
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x12"
    },
    "1501": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1392,
        1409
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1502": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1392,
        1409
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30F"
    },
    "1505": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1392,
        1409
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1512": {
      "op": "SHL"
    },
    "1513": {
      "op": "SUB"
    },
    "1514": {
      "offset": [
        1392,
        1409
      ],
      "op": "AND",
      "path": "22"
    },
    "1515": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1392,
        1409
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1516": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1392,
        1409
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1517": {
      "fn": "Ownable.owner",
      "offset": [
        988,
        1073
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1518": {
      "fn": "Ownable.owner",
      "offset": [
        988,
        1073
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1519": {
      "fn": "Ownable.owner",
      "offset": [
        988,
        1073
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1520": {
      "fn": "Ownable.owner",
      "offset": [
        988,
        1073
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1521": {
      "fn": "Ownable.owner",
      "offset": [
        988,
        1073
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5F9"
    },
    "1524": {
      "fn": "Ownable.owner",
      "offset": [
        988,
        1073
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1525": {
      "fn": "Ownable.owner",
      "offset": [
        988,
        1073
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1527": {
      "fn": "Ownable.owner",
      "offset": [
        988,
        1073
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1528": {
      "fn": "Ownable.owner",
      "offset": [
        988,
        1073
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1529": {
      "fn": "Ownable.owner",
      "offset": [
        988,
        1073
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1530": {
      "op": "POP"
    },
    "1531": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 4,
      "value": "0xA"
    },
    "1533": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1540": {
      "op": "SHL"
    },
    "1541": {
      "op": "SUB"
    },
    "1542": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "AND",
      "path": "20"
    },
    "1543": {
      "fn": "Ownable.owner",
      "offset": [
        988,
        1073
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30F"
    },
    "1546": {
      "fn": "Ownable.owner",
      "offset": [
        988,
        1073
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1547": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1548": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1549": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1550": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1551": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x617"
    },
    "1554": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1555": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1557": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1558": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1559": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1560": {
      "op": "POP"
    },
    "1561": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x62B"
    },
    "1564": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x626"
    },
    "1567": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1568": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1570": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BA8"
    },
    "1573": {
      "fn": "PoliceAndThief.getTokenTraits",
      "jump": "i",
      "offset": [
        10119,
        10292
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1574": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1575": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x187B"
    },
    "1578": {
      "fn": "PoliceAndThief.getTokenTraits",
      "jump": "i",
      "offset": [
        10119,
        10292
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1579": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1580": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1582": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1583": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C4"
    },
    "1586": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1587": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1588": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2CBC"
    },
    "1591": {
      "fn": "PoliceAndThief.getTokenTraits",
      "jump": "i",
      "offset": [
        10119,
        10292
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1592": {
      "fn": "ERC721.symbol",
      "offset": [
        2711,
        2813
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1593": {
      "fn": "ERC721.symbol",
      "offset": [
        2711,
        2813
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1594": {
      "fn": "ERC721.symbol",
      "offset": [
        2711,
        2813
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1595": {
      "fn": "ERC721.symbol",
      "offset": [
        2711,
        2813
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1596": {
      "fn": "ERC721.symbol",
      "offset": [
        2711,
        2813
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x644"
    },
    "1599": {
      "fn": "ERC721.symbol",
      "offset": [
        2711,
        2813
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1600": {
      "fn": "ERC721.symbol",
      "offset": [
        2711,
        2813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1602": {
      "fn": "ERC721.symbol",
      "offset": [
        2711,
        2813
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1603": {
      "fn": "ERC721.symbol",
      "offset": [
        2711,
        2813
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1604": {
      "fn": "ERC721.symbol",
      "offset": [
        2711,
        2813
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1605": {
      "fn": "ERC721.symbol",
      "offset": [
        2711,
        2813
      ],
      "op": "POP",
      "path": "5"
    },
    "1606": {
      "fn": "ERC721.symbol",
      "offset": [
        2711,
        2813
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E2"
    },
    "1609": {
      "fn": "ERC721.symbol",
      "offset": [
        2711,
        2813
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1922"
    },
    "1612": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2711,
        2813
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1613": {
      "offset": [
        1461,
        1478
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1614": {
      "fn": "ERC721.symbol",
      "offset": [
        1461,
        1478
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1615": {
      "fn": "ERC721.symbol",
      "offset": [
        1461,
        1478
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1616": {
      "fn": "ERC721.symbol",
      "offset": [
        1461,
        1478
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1617": {
      "fn": "ERC721.symbol",
      "offset": [
        1461,
        1478
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x659"
    },
    "1620": {
      "fn": "ERC721.symbol",
      "offset": [
        1461,
        1478
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1621": {
      "fn": "ERC721.symbol",
      "offset": [
        1461,
        1478
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1623": {
      "fn": "ERC721.symbol",
      "offset": [
        1461,
        1478
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1624": {
      "fn": "ERC721.symbol",
      "offset": [
        1461,
        1478
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1625": {
      "fn": "ERC721.symbol",
      "offset": [
        1461,
        1478
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1626": {
      "op": "POP"
    },
    "1627": {
      "offset": [
        1461,
        1478
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x13"
    },
    "1629": {
      "fn": "ERC721.symbol",
      "offset": [
        1461,
        1478
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1630": {
      "fn": "ERC721.symbol",
      "offset": [
        1461,
        1478
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30F"
    },
    "1633": {
      "fn": "ERC721.symbol",
      "offset": [
        1461,
        1478
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1640": {
      "op": "SHL"
    },
    "1641": {
      "op": "SUB"
    },
    "1642": {
      "offset": [
        1461,
        1478
      ],
      "op": "AND",
      "path": "22"
    },
    "1643": {
      "fn": "ERC721.symbol",
      "offset": [
        1461,
        1478
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1644": {
      "fn": "ERC721.symbol",
      "offset": [
        1461,
        1478
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1645": {
      "offset": [
        1033,
        1088
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1646": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1647": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1648": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1649": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x679"
    },
    "1652": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1653": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1655": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1656": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1657": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1658": {
      "op": "POP"
    },
    "1659": {
      "offset": [
        1033,
        1088
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3EC"
    },
    "1662": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x688"
    },
    "1665": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1666": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1668": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BA8"
    },
    "1671": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        1033,
        1088
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1672": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1673": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x10"
    },
    "1675": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1677": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1678": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1680": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1681": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1682": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1683": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1685": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1686": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1687": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1688": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1689": {
      "fn": "ERC721.symbol",
      "offset": [
        1033,
        1088
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1690": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1691": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1692": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1693": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1694": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6A6"
    },
    "1697": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1698": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1700": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1701": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1702": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1703": {
      "op": "POP"
    },
    "1704": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x347"
    },
    "1707": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6B5"
    },
    "1710": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1711": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1713": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D68"
    },
    "1716": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4544,
        4862
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1717": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1718": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1931"
    },
    "1721": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4544,
        4862
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1722": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        11792,
        11882
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1723": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        11792,
        11882
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1724": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        11792,
        11882
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1725": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        11792,
        11882
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1726": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        11792,
        11882
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6C6"
    },
    "1729": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        11792,
        11882
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1730": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        11792,
        11882
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1732": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        11792,
        11882
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1733": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        11792,
        11882
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1734": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        11792,
        11882
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1735": {
      "op": "POP"
    },
    "1736": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        11792,
        11882
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x347"
    },
    "1739": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        11792,
        11882
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6D5"
    },
    "1742": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        11792,
        11882
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1743": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        11792,
        11882
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1745": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        11792,
        11882
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BA8"
    },
    "1748": {
      "fn": "PoliceAndThief.changePrice",
      "jump": "i",
      "offset": [
        11792,
        11882
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1749": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        11792,
        11882
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1750": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        11792,
        11882
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x19F6"
    },
    "1753": {
      "fn": "PoliceAndThief.changePrice",
      "jump": "i",
      "offset": [
        11792,
        11882
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1754": {
      "offset": [
        1697,
        1730
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1755": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1697,
        1730
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1756": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1697,
        1730
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1757": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1697,
        1730
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1758": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1697,
        1730
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6E6"
    },
    "1761": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1697,
        1730
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1762": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1697,
        1730
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1764": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1697,
        1730
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1765": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1697,
        1730
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1766": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1697,
        1730
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1767": {
      "op": "POP"
    },
    "1768": {
      "offset": [
        1697,
        1730
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x17"
    },
    "1770": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1697,
        1730
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1771": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1697,
        1730
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B8"
    },
    "1774": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1697,
        1730
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1775": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1697,
        1730
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "1778": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1697,
        1730
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1779": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1697,
        1730
      ],
      "op": "DIV",
      "path": "22"
    },
    "1780": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1697,
        1730
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "1782": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1697,
        1730
      ],
      "op": "AND",
      "path": "22"
    },
    "1783": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1697,
        1730
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1784": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1697,
        1730
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1785": {
      "offset": [
        1659,
        1691
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1786": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1659,
        1691
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1787": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1659,
        1691
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1788": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1659,
        1691
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1789": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1659,
        1691
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x705"
    },
    "1792": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1659,
        1691
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1793": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1659,
        1691
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1795": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1659,
        1691
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1796": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1659,
        1691
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1797": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1659,
        1691
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1798": {
      "op": "POP"
    },
    "1799": {
      "offset": [
        1659,
        1691
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x17"
    },
    "1801": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1659,
        1691
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1802": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1659,
        1691
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B8"
    },
    "1805": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1659,
        1691
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1806": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1659,
        1691
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "1808": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1659,
        1691
      ],
      "op": "AND",
      "path": "22"
    },
    "1809": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1659,
        1691
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1810": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        1659,
        1691
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1811": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1812": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1813": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1814": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1815": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x71F"
    },
    "1818": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1819": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1821": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1822": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1823": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1824": {
      "op": "POP"
    },
    "1825": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x347"
    },
    "1828": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x72E"
    },
    "1831": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1832": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1834": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E03"
    },
    "1837": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5871,
        6217
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1838": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1839": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A25"
    },
    "1842": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5871,
        6217
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1843": {
      "offset": [
        419,
        456
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1844": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        419,
        456
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1845": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        419,
        456
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1846": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        419,
        456
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1847": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        419,
        456
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x73F"
    },
    "1850": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        419,
        456
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1851": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        419,
        456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1853": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        419,
        456
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1854": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        419,
        456
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1855": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        419,
        456
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1856": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        419,
        456
      ],
      "op": "POP",
      "path": "22"
    },
    "1857": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        419,
        456
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3EC"
    },
    "1860": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        419,
        456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "1862": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        419,
        456
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1863": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        419,
        456
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1864": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        419,
        456
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1865": {
      "offset": [
        679,
        705
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1866": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        679,
        705
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1867": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        679,
        705
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1868": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        679,
        705
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1869": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        679,
        705
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x755"
    },
    "1872": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        679,
        705
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1873": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        679,
        705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1875": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        679,
        705
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1876": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        679,
        705
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1877": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        679,
        705
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1878": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        679,
        705
      ],
      "op": "POP",
      "path": "22"
    },
    "1879": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        679,
        705
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3EC"
    },
    "1882": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        679,
        705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "1884": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        679,
        705
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1885": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        679,
        705
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1886": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        679,
        705
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1887": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11502,
        11786
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1888": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11502,
        11786
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1889": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11502,
        11786
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1890": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11502,
        11786
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1891": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11502,
        11786
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x76B"
    },
    "1894": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11502,
        11786
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1895": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11502,
        11786
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1897": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11502,
        11786
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1898": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11502,
        11786
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1899": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11502,
        11786
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1900": {
      "op": "POP"
    },
    "1901": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11502,
        11786
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2E2"
    },
    "1904": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11502,
        11786
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x77A"
    },
    "1907": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11502,
        11786
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1908": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11502,
        11786
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1910": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11502,
        11786
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BA8"
    },
    "1913": {
      "fn": "PoliceAndThief.tokenURI",
      "jump": "i",
      "offset": [
        11502,
        11786
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1914": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11502,
        11786
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1915": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11502,
        11786
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A5C"
    },
    "1918": {
      "fn": "PoliceAndThief.tokenURI",
      "jump": "i",
      "offset": [
        11502,
        11786
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1919": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2293,
        2387
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1920": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2293,
        2387
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1921": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2293,
        2387
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1922": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2293,
        2387
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1923": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2293,
        2387
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x78B"
    },
    "1926": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2293,
        2387
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1927": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2293,
        2387
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1929": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2293,
        2387
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1930": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2293,
        2387
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1931": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2293,
        2387
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1932": {
      "op": "POP"
    },
    "1933": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2293,
        2387
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x347"
    },
    "1936": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2293,
        2387
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x79A"
    },
    "1939": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2293,
        2387
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1940": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2293,
        2387
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1942": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2293,
        2387
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BD6"
    },
    "1945": {
      "fn": "PoliceAndThief.setRandomSource",
      "jump": "i",
      "offset": [
        2293,
        2387
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1946": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2293,
        2387
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1947": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2293,
        2387
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B4C"
    },
    "1950": {
      "fn": "PoliceAndThief.setRandomSource",
      "jump": "i",
      "offset": [
        2293,
        2387
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1951": {
      "offset": [
        856,
        906
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1952": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1953": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1954": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1955": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7AB"
    },
    "1958": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1959": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1961": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1962": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1963": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1964": {
      "op": "POP"
    },
    "1965": {
      "offset": [
        856,
        906
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x821"
    },
    "1968": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7BA"
    },
    "1971": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1972": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1974": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BA8"
    },
    "1977": {
      "fn": "PoliceAndThief.setRandomSource",
      "jump": "i",
      "offset": [
        856,
        906
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1978": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1979": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xF"
    },
    "1981": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1983": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1984": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1986": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1987": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1988": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1989": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1991": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1992": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1993": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1994": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "1996": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1997": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1998": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "AND",
      "path": "22"
    },
    "1999": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2000": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "2003": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2004": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DIV",
      "path": "22"
    },
    "2005": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2006": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "AND",
      "path": "22"
    },
    "2007": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2008": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "2012": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2013": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DIV",
      "path": "22"
    },
    "2014": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2015": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "AND",
      "path": "22"
    },
    "2016": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2017": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x1000000"
    },
    "2022": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2023": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DIV",
      "path": "22"
    },
    "2024": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2025": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "AND",
      "path": "22"
    },
    "2026": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2027": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "PUSH5",
      "path": "22",
      "value": "0x100000000"
    },
    "2033": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2034": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DIV",
      "path": "22"
    },
    "2035": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2036": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "AND",
      "path": "22"
    },
    "2037": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2038": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "PUSH6",
      "path": "22",
      "value": "0x10000000000"
    },
    "2045": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2046": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DIV",
      "path": "22"
    },
    "2047": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2048": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "AND",
      "path": "22"
    },
    "2049": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "2054": {
      "op": "SHL"
    },
    "2055": {
      "offset": [
        856,
        906
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2056": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DIV",
      "path": "22"
    },
    "2057": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2058": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "AND",
      "path": "22"
    },
    "2059": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2064": {
      "op": "SHL"
    },
    "2065": {
      "offset": [
        856,
        906
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2066": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DIV",
      "path": "22"
    },
    "2067": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2068": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "AND",
      "path": "22"
    },
    "2069": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2074": {
      "op": "SHL"
    },
    "2075": {
      "offset": [
        856,
        906
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2076": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2077": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DIV",
      "path": "22"
    },
    "2078": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "AND",
      "path": "22"
    },
    "2079": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DUP10",
      "path": "22"
    },
    "2080": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2081": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2082": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2084": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2085": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        856,
        906
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2086": {
      "op": "SWAP10"
    },
    "2087": {
      "op": "ISZERO"
    },
    "2088": {
      "op": "ISZERO"
    },
    "2089": {
      "op": "DUP11"
    },
    "2090": {
      "op": "MSTORE"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2093": {
      "op": "SWAP9"
    },
    "2094": {
      "op": "DUP10"
    },
    "2095": {
      "op": "AND"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2098": {
      "op": "DUP12"
    },
    "2099": {
      "op": "ADD"
    },
    "2100": {
      "op": "MSTORE"
    },
    "2101": {
      "op": "SWAP7"
    },
    "2102": {
      "op": "DUP9"
    },
    "2103": {
      "op": "AND"
    },
    "2104": {
      "op": "SWAP7"
    },
    "2105": {
      "op": "DUP10"
    },
    "2106": {
      "op": "ADD"
    },
    "2107": {
      "op": "SWAP7"
    },
    "2108": {
      "op": "SWAP1"
    },
    "2109": {
      "op": "SWAP7"
    },
    "2110": {
      "op": "MSTORE"
    },
    "2111": {
      "op": "SWAP4"
    },
    "2112": {
      "op": "DUP7"
    },
    "2113": {
      "op": "AND"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2116": {
      "op": "DUP9"
    },
    "2117": {
      "op": "ADD"
    },
    "2118": {
      "op": "MSTORE"
    },
    "2119": {
      "op": "SWAP2"
    },
    "2120": {
      "op": "DUP6"
    },
    "2121": {
      "op": "AND"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2124": {
      "op": "DUP8"
    },
    "2125": {
      "op": "ADD"
    },
    "2126": {
      "op": "MSTORE"
    },
    "2127": {
      "op": "DUP5"
    },
    "2128": {
      "op": "AND"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2131": {
      "op": "DUP7"
    },
    "2132": {
      "op": "ADD"
    },
    "2133": {
      "op": "MSTORE"
    },
    "2134": {
      "op": "DUP4"
    },
    "2135": {
      "op": "AND"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2138": {
      "op": "DUP6"
    },
    "2139": {
      "op": "ADD"
    },
    "2140": {
      "op": "MSTORE"
    },
    "2141": {
      "op": "DUP3"
    },
    "2142": {
      "op": "AND"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2145": {
      "op": "DUP5"
    },
    "2146": {
      "op": "ADD"
    },
    "2147": {
      "op": "MSTORE"
    },
    "2148": {
      "op": "AND"
    },
    "2149": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2152": {
      "op": "DUP3"
    },
    "2153": {
      "op": "ADD"
    },
    "2154": {
      "op": "MSTORE"
    },
    "2155": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "2158": {
      "op": "ADD"
    },
    "2159": {
      "offset": [
        856,
        906
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C4"
    },
    "2162": {
      "op": "JUMP"
    },
    "2163": {
      "offset": [
        1511,
        1532
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2164": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1511,
        1532
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "2165": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1511,
        1532
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2166": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1511,
        1532
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2167": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1511,
        1532
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x87F"
    },
    "2170": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1511,
        1532
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2171": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1511,
        1532
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2173": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1511,
        1532
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2174": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1511,
        1532
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2175": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1511,
        1532
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2176": {
      "op": "POP"
    },
    "2177": {
      "offset": [
        1511,
        1532
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x14"
    },
    "2179": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1511,
        1532
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2180": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1511,
        1532
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30F"
    },
    "2183": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1511,
        1532
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2190": {
      "op": "SHL"
    },
    "2191": {
      "op": "SUB"
    },
    "2192": {
      "offset": [
        1511,
        1532
      ],
      "op": "AND",
      "path": "22"
    },
    "2193": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1511,
        1532
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2194": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1511,
        1532
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2195": {
      "offset": [
        1609,
        1652
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2196": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "2197": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2198": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2199": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x89F"
    },
    "2202": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2203": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2205": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2206": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2207": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2208": {
      "op": "POP"
    },
    "2209": {
      "offset": [
        1609,
        1652
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B8"
    },
    "2212": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8AE"
    },
    "2215": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "2216": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2218": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BD6"
    },
    "2221": {
      "fn": "PoliceAndThief.setRandomSource",
      "jump": "i",
      "offset": [
        1609,
        1652
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2222": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2223": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x16"
    },
    "2225": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2227": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2228": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2230": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2231": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2232": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2233": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2235": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2236": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2237": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2238": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "2240": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "AND",
      "path": "22"
    },
    "2241": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2242": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        1609,
        1652
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2243": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2244": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "2245": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2246": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2247": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8CF"
    },
    "2250": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2251": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2253": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2254": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2255": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2256": {
      "op": "POP"
    },
    "2257": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B8"
    },
    "2260": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8DE"
    },
    "2263": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2264": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2266": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2EB2"
    },
    "2269": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4928,
        5134
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2270": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2277": {
      "op": "SHL"
    },
    "2278": {
      "op": "SUB"
    },
    "2279": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 5
    },
    "2280": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2281": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "AND",
      "path": "5"
    },
    "2282": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5065,
        5069
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2284": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2285": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2286": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2287": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5110
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "2289": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2291": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2292": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2293": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2294": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2296": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2297": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2298": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2299": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2300": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2301": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2302": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "AND",
      "path": "5"
    },
    "2303": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2304": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2305": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2306": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2307": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2308": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2309": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2310": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2311": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "2313": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "AND",
      "path": "5"
    },
    "2314": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2315": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2316": {
      "offset": [
        462,
        490
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2317": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        462,
        490
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "2318": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        462,
        490
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2319": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        462,
        490
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2320": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        462,
        490
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x918"
    },
    "2323": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        462,
        490
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2324": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        462,
        490
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2326": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        462,
        490
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2327": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        462,
        490
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2328": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        462,
        490
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2329": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        462,
        490
      ],
      "op": "POP",
      "path": "22"
    },
    "2330": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        462,
        490
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3EC"
    },
    "2333": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        462,
        490
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "2335": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        462,
        490
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2336": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        462,
        490
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2337": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        462,
        490
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2338": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1427,
        1650
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2339": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1427,
        1650
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2340": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1427,
        1650
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2341": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1427,
        1650
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2342": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1427,
        1650
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x92E"
    },
    "2345": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1427,
        1650
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2346": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1427,
        1650
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2348": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1427,
        1650
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2349": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1427,
        1650
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2350": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1427,
        1650
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2351": {
      "op": "POP"
    },
    "2352": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1427,
        1650
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x347"
    },
    "2355": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1427,
        1650
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x93D"
    },
    "2358": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1427,
        1650
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2359": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1427,
        1650
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2361": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1427,
        1650
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2BD6"
    },
    "2364": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1427,
        1650
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2365": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1427,
        1650
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2366": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1427,
        1650
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B98"
    },
    "2369": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1427,
        1650
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2370": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11300,
        11477
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2371": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11300,
        11477
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "2372": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11300,
        11477
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2373": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11300,
        11477
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2374": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11300,
        11477
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x94E"
    },
    "2377": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11300,
        11477
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2378": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11300,
        11477
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2380": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11300,
        11477
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2381": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11300,
        11477
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2382": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11300,
        11477
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2383": {
      "op": "POP"
    },
    "2384": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11300,
        11477
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x347"
    },
    "2387": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11300,
        11477
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x95D"
    },
    "2390": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11300,
        11477
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "2391": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11300,
        11477
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2393": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11300,
        11477
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EEB"
    },
    "2396": {
      "fn": "PoliceAndThief.setWhitelist",
      "jump": "i",
      "offset": [
        11300,
        11477
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2397": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11300,
        11477
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2398": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11300,
        11477
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C30"
    },
    "2401": {
      "fn": "PoliceAndThief.setWhitelist",
      "jump": "i",
      "offset": [
        11300,
        11477
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2402": {
      "offset": [
        565,
        600
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2403": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        565,
        600
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "2404": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        565,
        600
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2405": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        565,
        600
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2406": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        565,
        600
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x96E"
    },
    "2409": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        565,
        600
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2410": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        565,
        600
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2412": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        565,
        600
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2413": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        565,
        600
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2414": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        565,
        600
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2415": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        565,
        600
      ],
      "op": "POP",
      "path": "22"
    },
    "2416": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        565,
        600
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3EC"
    },
    "2419": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        565,
        600
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "2452": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        565,
        600
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2453": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        565,
        600
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2454": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2455": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1051,
        1055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2463": {
      "op": "SHL"
    },
    "2464": {
      "op": "SUB"
    },
    "2465": {
      "op": "NOT"
    },
    "2466": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1090,
        1140
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 6
    },
    "2467": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1090,
        1140
      ],
      "op": "AND",
      "path": "6"
    },
    "2468": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2475": {
      "op": "SHL"
    },
    "2476": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1090,
        1140
      ],
      "op": "EQ",
      "path": "6"
    },
    "2477": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1090,
        1140
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2478": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1090,
        1192
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9BB"
    },
    "2481": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1090,
        1192
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2482": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1090,
        1192
      ],
      "op": "POP",
      "path": "6"
    },
    "2483": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1156,
        1192
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9BB"
    },
    "2486": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1180,
        1191
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2487": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1156,
        1179
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CC6"
    },
    "2490": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1156,
        1192
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2491": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1156,
        1192
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2492": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1071,
        1192
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2493": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        909,
        1199
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2494": {
      "op": "POP"
    },
    "2495": {
      "op": "POP"
    },
    "2496": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "o",
      "offset": [
        909,
        1199
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2497": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2498": {
      "fn": "ERC721.name",
      "offset": [
        2603,
        2616
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2500": {
      "fn": "ERC721.name",
      "offset": [
        2635,
        2640
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 7,
      "value": "0x0"
    },
    "2502": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2503": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2504": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9D0"
    },
    "2507": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2508": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F9D"
    },
    "2511": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2512": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2513": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2514": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2516": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "ADD",
      "path": "5"
    },
    "2517": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2519": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2520": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2521": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DIV",
      "path": "5"
    },
    "2522": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "MUL",
      "path": "5"
    },
    "2523": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2525": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "ADD",
      "path": "5"
    },
    "2526": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2528": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2529": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2530": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2531": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "ADD",
      "path": "5"
    },
    "2532": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2534": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2535": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2536": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2537": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2538": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2539": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2540": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2541": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2542": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2544": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "ADD",
      "path": "5"
    },
    "2545": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2546": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2547": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2548": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9FC"
    },
    "2551": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2552": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F9D"
    },
    "2555": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2556": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2557": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2558": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2559": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA49"
    },
    "2562": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2563": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2564": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2566": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "LT",
      "path": "5"
    },
    "2567": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA1E"
    },
    "2570": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2571": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2574": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2575": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2576": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2577": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DIV",
      "path": "5"
    },
    "2578": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "MUL",
      "path": "5"
    },
    "2579": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2580": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2581": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2582": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2584": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "ADD",
      "path": "5"
    },
    "2585": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2586": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA49"
    },
    "2589": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2590": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2591": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2592": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "ADD",
      "path": "5"
    },
    "2593": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2594": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2595": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2597": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2598": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2600": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2602": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2603": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2604": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2605": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2606": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2607": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2608": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2609": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2610": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2612": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "ADD",
      "path": "5"
    },
    "2613": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2614": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2616": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "ADD",
      "path": "5"
    },
    "2617": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2618": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2619": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "GT",
      "path": "5"
    },
    "2620": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA2C"
    },
    "2623": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2624": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2625": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2626": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SUB",
      "path": "5"
    },
    "2627": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2629": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "AND",
      "path": "5"
    },
    "2630": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2631": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "ADD",
      "path": "5"
    },
    "2632": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2633": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2634": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "POP",
      "path": "5"
    },
    "2635": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "POP",
      "path": "5"
    },
    "2636": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "POP",
      "path": "5"
    },
    "2637": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "POP",
      "path": "5"
    },
    "2638": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "POP",
      "path": "5"
    },
    "2639": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2640": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "POP",
      "path": "5"
    },
    "2641": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2642": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2549,
        2647
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2643": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2644": {
      "fn": "ERC721.getApproved",
      "offset": [
        4298,
        4305
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2646": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 8
    },
    "2647": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2648": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2649": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7818
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2651": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2653": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2654": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2656": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2657": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2658": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2665": {
      "op": "SHL"
    },
    "2666": {
      "op": "SUB"
    },
    "2667": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "AND",
      "path": "5"
    },
    "2668": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 9,
      "value": "0xAD1"
    },
    "2671": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2672": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2674": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2675": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2681": {
      "op": "SHL"
    },
    "2682": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2683": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2686": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2688": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2689": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "ADD",
      "path": "5"
    },
    "2690": {
      "op": "MSTORE"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2693": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2695": {
      "op": "DUP3"
    },
    "2696": {
      "op": "ADD"
    },
    "2697": {
      "op": "MSTORE"
    },
    "2698": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2733": {
      "op": "DUP3"
    },
    "2734": {
      "op": "ADD"
    },
    "2735": {
      "op": "MSTORE"
    },
    "2736": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2751": {
      "op": "SHL"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2754": {
      "op": "DUP3"
    },
    "2755": {
      "op": "ADD"
    },
    "2756": {
      "op": "MSTORE"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2759": {
      "op": "ADD"
    },
    "2760": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2761": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2763": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2764": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2765": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2766": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "SUB",
      "path": "5"
    },
    "2767": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2768": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "2769": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2770": {
      "op": "POP"
    },
    "2771": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 10,
      "value": "0x0"
    },
    "2773": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2774": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2775": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2776": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4461
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2778": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2780": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2781": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2783": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2784": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2785": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2792": {
      "op": "SHL"
    },
    "2793": {
      "op": "SUB"
    },
    "2794": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "AND",
      "path": "5"
    },
    "2795": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2796": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        4182,
        4477
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2797": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10673,
        10760
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2798": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "2800": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2807": {
      "op": "SHL"
    },
    "2808": {
      "op": "SUB"
    },
    "2809": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "AND",
      "path": "20"
    },
    "2810": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 11
    },
    "2811": {
      "offset": [
        1200,
        1223
      ],
      "op": "EQ",
      "path": "20"
    },
    "2812": {
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB17"
    },
    "2815": {
      "offset": [
        1192,
        1260
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2816": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2818": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2819": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2825": {
      "op": "SHL"
    },
    "2826": {
      "offset": [
        1192,
        1260
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2827": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2828": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2830": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "ADD",
      "path": "20"
    },
    "2831": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAC8"
    },
    "2834": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2835": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2FD2"
    },
    "2838": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1192,
        1260
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2839": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2840": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10734,
        10738
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 12,
      "value": "0x12"
    },
    "2842": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10734,
        10753
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2843": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10734,
        10753
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2850": {
      "op": "SHL"
    },
    "2851": {
      "op": "SUB"
    },
    "2852": {
      "op": "NOT"
    },
    "2853": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10734,
        10753
      ],
      "op": "AND",
      "path": "22"
    },
    "2854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2860": {
      "op": "SHL"
    },
    "2861": {
      "op": "SUB"
    },
    "2862": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10734,
        10753
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2863": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10734,
        10753
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2864": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10734,
        10753
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2865": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10734,
        10753
      ],
      "op": "AND",
      "path": "22"
    },
    "2866": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10734,
        10753
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2867": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10734,
        10753
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2868": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10734,
        10753
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2869": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10734,
        10753
      ],
      "op": "OR",
      "path": "22"
    },
    "2870": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10734,
        10753
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2871": {
      "fn": "PoliceAndThief.setBank",
      "offset": [
        10734,
        10753
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2872": {
      "fn": "PoliceAndThief.setBank",
      "jump": "o",
      "offset": [
        10673,
        10760
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2873": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2874": {
      "fn": "ERC721.approve",
      "offset": [
        3800,
        3813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2876": {
      "fn": "ERC721.approve",
      "offset": [
        3816,
        3839
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB44"
    },
    "2879": {
      "fn": "ERC721.approve",
      "offset": [
        3831,
        3838
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2880": {
      "fn": "ERC721.approve",
      "offset": [
        3816,
        3830
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1013"
    },
    "2883": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3816,
        3839
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2884": {
      "fn": "ERC721.approve",
      "offset": [
        3816,
        3839
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2885": {
      "fn": "ERC721.approve",
      "offset": [
        3800,
        3839
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2886": {
      "fn": "ERC721.approve",
      "offset": [
        3800,
        3839
      ],
      "op": "POP",
      "path": "5"
    },
    "2887": {
      "fn": "ERC721.approve",
      "offset": [
        3863,
        3868
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 13
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2894": {
      "op": "SHL"
    },
    "2895": {
      "op": "SUB"
    },
    "2896": {
      "fn": "ERC721.approve",
      "offset": [
        3857,
        3868
      ],
      "op": "AND",
      "path": "5"
    },
    "2897": {
      "fn": "ERC721.approve",
      "offset": [
        3857,
        3859
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2904": {
      "op": "SHL"
    },
    "2905": {
      "op": "SUB"
    },
    "2906": {
      "fn": "ERC721.approve",
      "offset": [
        3857,
        3868
      ],
      "op": "AND",
      "path": "5"
    },
    "2907": {
      "fn": "ERC721.approve",
      "offset": [
        3857,
        3868
      ],
      "op": "EQ",
      "path": "5"
    },
    "2908": {
      "branch": 171,
      "fn": "ERC721.approve",
      "offset": [
        3857,
        3868
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2909": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBB2"
    },
    "2912": {
      "branch": 171,
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2913": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2915": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2916": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2922": {
      "op": "SHL"
    },
    "2923": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2924": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2925": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2927": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2929": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2930": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "ADD",
      "path": "5"
    },
    "2931": {
      "op": "MSTORE"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2934": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2936": {
      "op": "DUP3"
    },
    "2937": {
      "op": "ADD"
    },
    "2938": {
      "op": "MSTORE"
    },
    "2939": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2974": {
      "op": "DUP3"
    },
    "2975": {
      "op": "ADD"
    },
    "2976": {
      "op": "MSTORE"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2981": {
      "op": "SHL"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2984": {
      "op": "DUP3"
    },
    "2985": {
      "op": "ADD"
    },
    "2986": {
      "op": "MSTORE"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2989": {
      "op": "ADD"
    },
    "2990": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAC8"
    },
    "2993": {
      "op": "JUMP"
    },
    "2994": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2995": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3002": {
      "op": "SHL"
    },
    "3003": {
      "op": "SUB"
    },
    "3004": {
      "fn": "ERC721.approve",
      "offset": [
        3938,
        3959
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 14
    },
    "3005": {
      "fn": "ERC721.approve",
      "offset": [
        3938,
        3959
      ],
      "op": "AND",
      "path": "5"
    },
    "3006": {
      "fn": "ERC721.approve",
      "offset": [
        3938,
        3959
      ],
      "op": "EQ",
      "path": "5"
    },
    "3007": {
      "branch": 172,
      "fn": "ERC721.approve",
      "offset": [
        3938,
        3959
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3008": {
      "fn": "ERC721.approve",
      "offset": [
        3938,
        4000
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBCE"
    },
    "3011": {
      "branch": 172,
      "fn": "ERC721.approve",
      "offset": [
        3938,
        4000
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3012": {
      "op": "POP"
    },
    "3013": {
      "fn": "ERC721.approve",
      "offset": [
        3963,
        4000
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBCE"
    },
    "3016": {
      "fn": "ERC721.approve",
      "offset": [
        3980,
        3985
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3017": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3018": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8DE"
    },
    "3021": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4928,
        5134
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3022": {
      "branch": 173,
      "fn": "ERC721.approve",
      "offset": [
        3963,
        4000
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3023": {
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC40"
    },
    "3026": {
      "branch": 173,
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3027": {
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3029": {
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3030": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3034": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3036": {
      "op": "SHL"
    },
    "3037": {
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3038": {
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3041": {
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3043": {
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3044": {
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "ADD",
      "path": "5"
    },
    "3045": {
      "op": "MSTORE"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3050": {
      "op": "DUP3"
    },
    "3051": {
      "op": "ADD"
    },
    "3052": {
      "op": "MSTORE"
    },
    "3053": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3088": {
      "op": "DUP3"
    },
    "3089": {
      "op": "ADD"
    },
    "3090": {
      "op": "MSTORE"
    },
    "3091": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3126": {
      "op": "DUP3"
    },
    "3127": {
      "op": "ADD"
    },
    "3128": {
      "op": "MSTORE"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3131": {
      "op": "ADD"
    },
    "3132": {
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAC8"
    },
    "3135": {
      "op": "JUMP"
    },
    "3136": {
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3137": {
      "fn": "ERC721.approve",
      "offset": [
        4093,
        4114
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 15,
      "value": "0xC4A"
    },
    "3140": {
      "fn": "ERC721.approve",
      "offset": [
        4102,
        4104
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3141": {
      "fn": "ERC721.approve",
      "offset": [
        4106,
        4113
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3142": {
      "fn": "ERC721.approve",
      "offset": [
        4093,
        4101
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D16"
    },
    "3145": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        4093,
        4114
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3146": {
      "fn": "ERC721.approve",
      "offset": [
        4093,
        4114
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3147": {
      "fn": "ERC721.approve",
      "offset": [
        3790,
        4121
      ],
      "op": "POP",
      "path": "5"
    },
    "3148": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "POP",
      "path": "5"
    },
    "3149": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "POP",
      "path": "5"
    },
    "3150": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3720,
        4121
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3151": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11179,
        11294
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3152": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "3154": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3161": {
      "op": "SHL"
    },
    "3162": {
      "op": "SUB"
    },
    "3163": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "AND",
      "path": "20"
    },
    "3164": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3165": {
      "offset": [
        1200,
        1223
      ],
      "op": "EQ",
      "path": "20"
    },
    "3166": {
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC79"
    },
    "3169": {
      "offset": [
        1192,
        1260
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3170": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3172": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3173": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3179": {
      "op": "SHL"
    },
    "3180": {
      "offset": [
        1192,
        1260
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3181": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3182": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3184": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "ADD",
      "path": "20"
    },
    "3185": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAC8"
    },
    "3188": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3189": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2FD2"
    },
    "3192": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1192,
        1260
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3193": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3194": {
      "branch": 141,
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11245,
        11252
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3195": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11241,
        11287
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3196": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11241,
        11287
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC8A"
    },
    "3199": {
      "branch": 141,
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11241,
        11287
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3200": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11254,
        11262
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 16,
      "value": "0xC87"
    },
    "3203": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11254,
        11260
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D84"
    },
    "3206": {
      "fn": "PoliceAndThief.setPaused",
      "jump": "i",
      "offset": [
        11254,
        11262
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3207": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11254,
        11262
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3208": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11179,
        11294
      ],
      "op": "POP",
      "path": "22"
    },
    "3209": {
      "fn": "PoliceAndThief.setPaused",
      "jump": "o",
      "offset": [
        11179,
        11294
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3210": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11241,
        11287
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3211": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11277,
        11287
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 17,
      "value": "0xC87"
    },
    "3214": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        11277,
        11285
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1E2A"
    },
    "3217": {
      "fn": "PoliceAndThief.setPaused",
      "jump": "i",
      "offset": [
        11277,
        11287
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3218": {
      "offset": [
        1220,
        1245
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3219": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x11"
    },
    "3221": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3222": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x12"
    },
    "3224": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3225": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "LT",
      "path": "22"
    },
    "3226": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCA2"
    },
    "3229": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3230": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3232": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3233": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3234": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3235": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3237": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3238": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3239": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3240": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "DIV",
      "path": "22"
    },
    "3241": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "ADD",
      "path": "22"
    },
    "3242": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3243": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3244": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "MOD",
      "path": "22"
    },
    "3245": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3246": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "POP",
      "path": "22"
    },
    "3247": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3248": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3249": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "3252": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "EXP",
      "path": "22"
    },
    "3253": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3254": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "DIV",
      "path": "22"
    },
    "3255": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "3257": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "AND",
      "path": "22"
    },
    "3258": {
      "fn": "PoliceAndThief.setPaused",
      "offset": [
        1220,
        1245
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3259": {
      "fn": "PoliceAndThief.setPaused",
      "jump": "o",
      "offset": [
        1220,
        1245
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3260": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5087,
        5558
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3261": {
      "offset": [
        1867,
        1877
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x15"
    },
    "3263": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        1867,
        1877
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3268": {
      "op": "SHL"
    },
    "3269": {
      "offset": [
        1867,
        1877
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3270": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        1867,
        1877
      ],
      "op": "DIV",
      "path": "22"
    },
    "3271": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        1867,
        1877
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "3273": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        1867,
        1877
      ],
      "op": "AND",
      "path": "22"
    },
    "3274": {
      "offset": [
        1866,
        1877
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3275": {
      "offset": [
        1858,
        1895
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD06"
    },
    "3278": {
      "offset": [
        1858,
        1895
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3279": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        1858,
        1895
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3281": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        1858,
        1895
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3282": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3286": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3288": {
      "op": "SHL"
    },
    "3289": {
      "offset": [
        1858,
        1895
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3290": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        1858,
        1895
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3293": {
      "offset": [
        1858,
        1895
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3295": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        1858,
        1895
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3296": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        1858,
        1895
      ],
      "op": "ADD",
      "path": "22"
    },
    "3297": {
      "op": "MSTORE"
    },
    "3298": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3302": {
      "op": "DUP3"
    },
    "3303": {
      "op": "ADD"
    },
    "3304": {
      "op": "MSTORE"
    },
    "3305": {
      "op": "PUSH13",
      "value": "0x4E6F207265656E7472616E6379"
    },
    "3319": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "3321": {
      "op": "SHL"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3324": {
      "op": "DUP3"
    },
    "3325": {
      "op": "ADD"
    },
    "3326": {
      "op": "MSTORE"
    },
    "3327": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3329": {
      "op": "ADD"
    },
    "3330": {
      "offset": [
        1858,
        1895
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAC8"
    },
    "3333": {
      "op": "JUMP"
    },
    "3334": {
      "offset": [
        1858,
        1895
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3335": {
      "offset": [
        1905,
        1915
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x15"
    },
    "3337": {
      "offset": [
        1905,
        1922
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3338": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        1905,
        1922
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3343": {
      "op": "SHL"
    },
    "3344": {
      "op": "NOT"
    },
    "3345": {
      "offset": [
        1905,
        1922
      ],
      "op": "AND",
      "path": "22"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3350": {
      "op": "SHL"
    },
    "3351": {
      "offset": [
        1905,
        1922
      ],
      "op": "OR",
      "path": "22"
    },
    "3352": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        1905,
        1922
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3353": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        1905,
        1922
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3354": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5345,
        5349
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x12"
    },
    "3356": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5345,
        5349
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3363": {
      "op": "SHL"
    },
    "3364": {
      "op": "SUB"
    },
    "3365": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5345,
        5349
      ],
      "op": "AND",
      "path": "22"
    },
    "3366": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5321,
        5333
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD2C"
    },
    "3369": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3370": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3371": {
      "fn": "Context._msgSender",
      "offset": [
        587,
        683
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3372": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5321,
        5333
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3379": {
      "op": "SHL"
    },
    "3380": {
      "op": "SUB"
    },
    "3381": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5321,
        5350
      ],
      "op": "AND",
      "path": "22"
    },
    "3382": {
      "branch": 142,
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5321,
        5350
      ],
      "op": "EQ",
      "path": "22"
    },
    "3383": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5317,
        5513
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD60"
    },
    "3386": {
      "branch": 142,
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5317,
        5513
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3387": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5389,
        5430
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 18,
      "value": "0xD44"
    },
    "3390": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3391": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5422,
        5429
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3392": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5389,
        5407
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1EAF"
    },
    "3395": {
      "fn": "PoliceAndThief.transferFrom",
      "jump": "i",
      "offset": [
        5389,
        5430
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3396": {
      "branch": 143,
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5389,
        5430
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3397": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5364,
        5513
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD60"
    },
    "3400": {
      "branch": 143,
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5364,
        5513
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3401": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5364,
        5513
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3403": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5364,
        5513
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3404": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3410": {
      "op": "SHL"
    },
    "3411": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5364,
        5513
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3412": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5364,
        5513
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3413": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5364,
        5513
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3415": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5364,
        5513
      ],
      "op": "ADD",
      "path": "22"
    },
    "3416": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5364,
        5513
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAC8"
    },
    "3419": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5364,
        5513
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3420": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5364,
        5513
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3007"
    },
    "3423": {
      "fn": "PoliceAndThief.transferFrom",
      "jump": "i",
      "offset": [
        5364,
        5513
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3424": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5364,
        5513
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3425": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5523,
        5551
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 19,
      "value": "0xD6B"
    },
    "3428": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5533,
        5537
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3429": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5539,
        5541
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3430": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5543,
        5550
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3431": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5523,
        5532
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1FA6"
    },
    "3434": {
      "fn": "PoliceAndThief.transferFrom",
      "jump": "i",
      "offset": [
        5523,
        5551
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3435": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        5523,
        5551
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3436": {
      "op": "POP"
    },
    "3437": {
      "op": "POP"
    },
    "3438": {
      "offset": [
        1943,
        1953
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x15"
    },
    "3440": {
      "offset": [
        1943,
        1961
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3441": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        1943,
        1961
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3446": {
      "op": "SHL"
    },
    "3447": {
      "op": "NOT"
    },
    "3448": {
      "offset": [
        1943,
        1961
      ],
      "op": "AND",
      "path": "22"
    },
    "3449": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        1943,
        1961
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3450": {
      "fn": "PoliceAndThief.transferFrom",
      "offset": [
        1943,
        1961
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3451": {
      "op": "POP"
    },
    "3452": {
      "fn": "PoliceAndThief.transferFrom",
      "jump": "o",
      "offset": [
        5087,
        5558
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3453": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3454": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4861,
        4868
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3456": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4895,
        4906
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "3458": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4895,
        4906
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3459": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4884,
        4891
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3460": {
      "branch": 144,
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4884,
        4906
      ],
      "op": "GT",
      "path": "22"
    },
    "3461": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4880,
        4916
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD90"
    },
    "3464": {
      "branch": 144,
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4880,
        4916
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3465": {
      "op": "POP"
    },
    "3466": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4915,
        4916
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 20,
      "value": "0x0"
    },
    "3468": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4915,
        4916
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3469": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3470": {
      "op": "POP"
    },
    "3471": {
      "fn": "PoliceAndThief.mintCost",
      "jump": "o",
      "offset": [
        4805,
        5081
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3472": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4880,
        4916
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3473": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4960,
        4961
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "3475": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4942,
        4956
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDBD"
    },
    "3478": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4942,
        4952
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "3511": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4955,
        4956
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3513": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4942,
        4956
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x306E"
    },
    "3516": {
      "fn": "PoliceAndThief.mintCost",
      "jump": "i",
      "offset": [
        4942,
        4956
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3517": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4942,
        4956
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3518": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4941,
        4961
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDC7"
    },
    "3521": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4941,
        4961
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3522": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4941,
        4961
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3523": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4941,
        4961
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30A3"
    },
    "3526": {
      "fn": "PoliceAndThief.mintCost",
      "jump": "i",
      "offset": [
        4941,
        4961
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3527": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4941,
        4961
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3528": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4930,
        4937
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3529": {
      "branch": 145,
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4930,
        4961
      ],
      "op": "GT",
      "path": "22"
    },
    "3530": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4926,
        4981
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDDE"
    },
    "3533": {
      "branch": 145,
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4926,
        4981
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3534": {
      "op": "POP"
    },
    "3535": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4970,
        4981
      ],
      "op": "PUSH10",
      "path": "22",
      "statement": 21,
      "value": "0x43C33C1937564800000"
    },
    "3546": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4970,
        4981
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3547": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3548": {
      "op": "POP"
    },
    "3549": {
      "fn": "PoliceAndThief.mintCost",
      "jump": "o",
      "offset": [
        4805,
        5081
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3550": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4926,
        4981
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3551": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        5025,
        5026
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "3553": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        5007,
        5021
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE0B"
    },
    "3556": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        5007,
        5017
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "3589": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        5020,
        5021
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3591": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        5007,
        5021
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x306E"
    },
    "3594": {
      "fn": "PoliceAndThief.mintCost",
      "jump": "i",
      "offset": [
        5007,
        5021
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3595": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        5007,
        5021
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3596": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        5006,
        5026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE15"
    },
    "3599": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        5006,
        5026
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3600": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        5006,
        5026
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3601": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        5006,
        5026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30A3"
    },
    "3604": {
      "fn": "PoliceAndThief.mintCost",
      "jump": "i",
      "offset": [
        5006,
        5026
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3605": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        5006,
        5026
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3606": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4995,
        5002
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3607": {
      "branch": 146,
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4995,
        5026
      ],
      "op": "GT",
      "path": "22"
    },
    "3608": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4991,
        5046
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE2C"
    },
    "3611": {
      "branch": 146,
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4991,
        5046
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3612": {
      "op": "POP"
    },
    "3613": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        5035,
        5046
      ],
      "op": "PUSH10",
      "path": "22",
      "statement": 22,
      "value": "0x878678326EAC9000000"
    },
    "3624": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        5035,
        5046
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3625": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3626": {
      "op": "POP"
    },
    "3627": {
      "fn": "PoliceAndThief.mintCost",
      "jump": "o",
      "offset": [
        4805,
        5081
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3628": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4991,
        5046
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3629": {
      "op": "POP"
    },
    "3630": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        5063,
        5074
      ],
      "op": "PUSH10",
      "path": "22",
      "statement": 23,
      "value": "0xCB49B44BA602D800000"
    },
    "3641": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        5063,
        5074
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3642": {
      "fn": "PoliceAndThief.mintCost",
      "offset": [
        4805,
        5081
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3643": {
      "op": "POP"
    },
    "3644": {
      "fn": "PoliceAndThief.mintCost",
      "jump": "o",
      "offset": [
        4805,
        5081
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3645": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1278,
        1609
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3646": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1422
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3648": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1467,
        1490
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 24,
      "value": "0xE48"
    },
    "3651": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1484,
        1489
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3652": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1467,
        1483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17F4"
    },
    "3655": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1467,
        1490
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3656": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1467,
        1490
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3657": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1459,
        1464
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3658": {
      "branch": 181,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1459,
        1490
      ],
      "op": "LT",
      "path": "6"
    },
    "3659": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1438,
        1559
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEAA"
    },
    "3662": {
      "branch": 181,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1438,
        1559
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3663": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1438,
        1559
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3665": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1438,
        1559
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3666": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3672": {
      "op": "SHL"
    },
    "3673": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1438,
        1559
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3674": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1438,
        1559
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3677": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1438,
        1559
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3679": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1438,
        1559
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3680": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1438,
        1559
      ],
      "op": "ADD",
      "path": "6"
    },
    "3681": {
      "op": "MSTORE"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3686": {
      "op": "DUP3"
    },
    "3687": {
      "op": "ADD"
    },
    "3688": {
      "op": "MSTORE"
    },
    "3689": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3724": {
      "op": "DUP3"
    },
    "3725": {
      "op": "ADD"
    },
    "3726": {
      "op": "MSTORE"
    },
    "3727": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3741": {
      "op": "SHL"
    },
    "3742": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3744": {
      "op": "DUP3"
    },
    "3745": {
      "op": "ADD"
    },
    "3746": {
      "op": "MSTORE"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3749": {
      "op": "ADD"
    },
    "3750": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1438,
        1559
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAC8"
    },
    "3753": {
      "op": "JUMP"
    },
    "3754": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1438,
        1559
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3755": {
      "op": "POP"
    },
    "3756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3762": {
      "op": "SHL"
    },
    "3763": {
      "op": "SUB"
    },
    "3764": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1595
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 25
    },
    "3765": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1595
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3766": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1595
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3767": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1595
      ],
      "op": "AND",
      "path": "6"
    },
    "3768": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1595
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3770": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1595
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3771": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1595
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3772": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1595
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3773": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "3775": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1595
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3777": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1595
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3778": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1595
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3779": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1595
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3780": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1595
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3782": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1595
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3783": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1595
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3784": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1595
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3785": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1602
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3786": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1602
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3787": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1602
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3788": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1602
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3789": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1602
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3790": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1602
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3791": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1602
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3792": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1602
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3793": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1576,
        1602
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3794": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1278,
        1609
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3795": {
      "fn": "PoliceAndThief.setPaidTokens",
      "offset": [
        11004,
        11109
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3796": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "3798": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3803": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3805": {
      "op": "SHL"
    },
    "3806": {
      "op": "SUB"
    },
    "3807": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "AND",
      "path": "20"
    },
    "3808": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3809": {
      "offset": [
        1200,
        1223
      ],
      "op": "EQ",
      "path": "20"
    },
    "3810": {
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xEFD"
    },
    "3813": {
      "offset": [
        1192,
        1260
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3814": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3816": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3817": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3823": {
      "op": "SHL"
    },
    "3824": {
      "offset": [
        1192,
        1260
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3825": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3826": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3828": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "ADD",
      "path": "20"
    },
    "3829": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAC8"
    },
    "3832": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3833": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2FD2"
    },
    "3836": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1192,
        1260
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3837": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3838": {
      "fn": "PoliceAndThief.setPaidTokens",
      "offset": [
        11077,
        11088
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 26,
      "value": "0xD"
    },
    "3840": {
      "fn": "PoliceAndThief.setPaidTokens",
      "offset": [
        11077,
        11102
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3841": {
      "fn": "PoliceAndThief.setPaidTokens",
      "jump": "o",
      "offset": [
        11004,
        11109
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3842": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10833,
        10937
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3843": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "3845": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3852": {
      "op": "SHL"
    },
    "3853": {
      "op": "SUB"
    },
    "3854": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "AND",
      "path": "20"
    },
    "3855": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3856": {
      "offset": [
        1200,
        1223
      ],
      "op": "EQ",
      "path": "20"
    },
    "3857": {
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF2C"
    },
    "3860": {
      "offset": [
        1192,
        1260
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3861": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3863": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3864": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3868": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3870": {
      "op": "SHL"
    },
    "3871": {
      "offset": [
        1192,
        1260
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3872": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3873": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3875": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "ADD",
      "path": "20"
    },
    "3876": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAC8"
    },
    "3879": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3880": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2FD2"
    },
    "3883": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1192,
        1260
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3884": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3885": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "3887": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3888": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 27,
      "value": "0x40"
    },
    "3890": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3897": {
      "op": "SHL"
    },
    "3898": {
      "op": "SUB"
    },
    "3899": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3900": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3901": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "AND",
      "path": "20"
    },
    "3902": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3903": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10908,
        10929
      ],
      "op": "SELFBALANCE",
      "path": "22"
    },
    "3904": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3905": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3906": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8FC"
    },
    "3909": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "MUL",
      "path": "22"
    },
    "3910": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3911": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3913": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3914": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3915": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3916": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10908,
        10929
      ],
      "op": "DUP6",
      "path": "22"
    },
    "3917": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "DUP9",
      "path": "20"
    },
    "3918": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "DUP9",
      "path": "22"
    },
    "3919": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "CALL",
      "path": "22"
    },
    "3920": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "3921": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "POP",
      "path": "22"
    },
    "3922": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "POP",
      "path": "22"
    },
    "3923": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "POP",
      "path": "22"
    },
    "3924": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "POP",
      "path": "22"
    },
    "3925": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3926": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3927": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3928": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC87"
    },
    "3931": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3932": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3933": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3935": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3936": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "3937": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3938": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3940": {
      "fn": "PoliceAndThief.withdraw",
      "offset": [
        10882,
        10930
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3941": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3942": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 28,
      "value": "0xC4A"
    },
    "3945": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5776,
        5780
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3946": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5782,
        5784
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3947": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5786,
        5793
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3948": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3950": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3951": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3952": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3954": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "ADD",
      "path": "5"
    },
    "3955": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3957": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3958": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3959": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3961": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3962": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3963": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "POP",
      "path": "5"
    },
    "3964": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5775
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A25"
    },
    "3967": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5759,
        5798
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3968": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3969": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1978,
        1985
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3971": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2030,
        2060
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 29,
      "value": "0xF8B"
    },
    "3974": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1767,
        1777
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "3976": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1767,
        1784
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3977": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1767,
        1784
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3978": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1680,
        1791
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3979": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2030,
        2060
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3980": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2022,
        2027
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3981": {
      "branch": 182,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2022,
        2060
      ],
      "op": "LT",
      "path": "6"
    },
    "3982": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2001,
        2130
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFEE"
    },
    "3985": {
      "branch": 182,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2001,
        2130
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3986": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2001,
        2130
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3988": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2001,
        2130
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3989": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3995": {
      "op": "SHL"
    },
    "3996": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2001,
        2130
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3997": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2001,
        2130
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4000": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2001,
        2130
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4002": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2001,
        2130
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4003": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2001,
        2130
      ],
      "op": "ADD",
      "path": "6"
    },
    "4004": {
      "op": "MSTORE"
    },
    "4005": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4009": {
      "op": "DUP3"
    },
    "4010": {
      "op": "ADD"
    },
    "4011": {
      "op": "MSTORE"
    },
    "4012": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4047": {
      "op": "DUP3"
    },
    "4048": {
      "op": "ADD"
    },
    "4049": {
      "op": "MSTORE"
    },
    "4050": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4065": {
      "op": "SHL"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4068": {
      "op": "DUP3"
    },
    "4069": {
      "op": "ADD"
    },
    "4070": {
      "op": "MSTORE"
    },
    "4071": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4073": {
      "op": "ADD"
    },
    "4074": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2001,
        2130
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAC8"
    },
    "4077": {
      "op": "JUMP"
    },
    "4078": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2001,
        2130
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4079": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2147,
        2157
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 30,
      "value": "0x8"
    },
    "4081": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2158,
        2163
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4082": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2147,
        2164
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4083": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2147,
        2164
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4084": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2147,
        2164
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4085": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2147,
        2164
      ],
      "op": "LT",
      "path": "6"
    },
    "4086": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2147,
        2164
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1001"
    },
    "4089": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2147,
        2164
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4090": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2147,
        2164
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1001"
    },
    "4093": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2147,
        2164
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x30B7"
    },
    "4096": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        2147,
        2164
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4097": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2147,
        2164
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4098": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2147,
        2164
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4099": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2147,
        2164
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4101": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2147,
        2164
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4102": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2147,
        2164
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4104": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2147,
        2164
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4106": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2147,
        2164
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4107": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2147,
        2164
      ],
      "op": "ADD",
      "path": "6"
    },
    "4108": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2147,
        2164
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4109": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2140,
        2164
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4110": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2140,
        2164
      ],
      "op": "POP",
      "path": "6"
    },
    "4111": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4112": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4113": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1863,
        2171
      ],
      "op": "POP",
      "path": "6"
    },
    "4114": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1863,
        2171
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4115": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4116": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2286,
        2293
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4118": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2341
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4119": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2341
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4120": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2341
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4121": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4123": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2341
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4125": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2341
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4126": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2341
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4128": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2341
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4129": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2341
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4130": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2341
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4137": {
      "op": "SHL"
    },
    "4138": {
      "op": "SUB"
    },
    "4139": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2341
      ],
      "op": "AND",
      "path": "5"
    },
    "4140": {
      "branch": 174,
      "fn": "ERC721.ownerOf",
      "offset": [
        2372,
        2391
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 31
    },
    "4141": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2351,
        2458
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9BB"
    },
    "4144": {
      "branch": 174,
      "fn": "ERC721.ownerOf",
      "offset": [
        2351,
        2458
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4145": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2351,
        2458
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4147": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2351,
        2458
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4148": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4154": {
      "op": "SHL"
    },
    "4155": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2351,
        2458
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4156": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2351,
        2458
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4159": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2351,
        2458
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4161": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2351,
        2458
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4162": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2351,
        2458
      ],
      "op": "ADD",
      "path": "5"
    },
    "4163": {
      "op": "MSTORE"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4168": {
      "op": "DUP3"
    },
    "4169": {
      "op": "ADD"
    },
    "4170": {
      "op": "MSTORE"
    },
    "4171": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4206": {
      "op": "DUP3"
    },
    "4207": {
      "op": "ADD"
    },
    "4208": {
      "op": "MSTORE"
    },
    "4209": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "4221": {
      "op": "SHL"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4224": {
      "op": "DUP3"
    },
    "4225": {
      "op": "ADD"
    },
    "4226": {
      "op": "MSTORE"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4229": {
      "op": "ADD"
    },
    "4230": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2351,
        2458
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAC8"
    },
    "4233": {
      "op": "JUMP"
    },
    "4234": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2540,
        4532
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4235": {
      "offset": [
        1867,
        1877
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x15"
    },
    "4237": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        1867,
        1877
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4242": {
      "op": "SHL"
    },
    "4243": {
      "offset": [
        1867,
        1877
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4244": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        1867,
        1877
      ],
      "op": "DIV",
      "path": "22"
    },
    "4245": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        1867,
        1877
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "4247": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        1867,
        1877
      ],
      "op": "AND",
      "path": "22"
    },
    "4248": {
      "offset": [
        1866,
        1877
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4249": {
      "offset": [
        1858,
        1895
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10D4"
    },
    "4252": {
      "offset": [
        1858,
        1895
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4253": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        1858,
        1895
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4255": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        1858,
        1895
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4256": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4262": {
      "op": "SHL"
    },
    "4263": {
      "offset": [
        1858,
        1895
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4264": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        1858,
        1895
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4267": {
      "offset": [
        1858,
        1895
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4269": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        1858,
        1895
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4270": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        1858,
        1895
      ],
      "op": "ADD",
      "path": "22"
    },
    "4271": {
      "op": "MSTORE"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4276": {
      "op": "DUP3"
    },
    "4277": {
      "op": "ADD"
    },
    "4278": {
      "op": "MSTORE"
    },
    "4279": {
      "op": "PUSH13",
      "value": "0x4E6F207265656E7472616E6379"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "4295": {
      "op": "SHL"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4298": {
      "op": "DUP3"
    },
    "4299": {
      "op": "ADD"
    },
    "4300": {
      "op": "MSTORE"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4303": {
      "op": "ADD"
    },
    "4304": {
      "offset": [
        1858,
        1895
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAC8"
    },
    "4307": {
      "op": "JUMP"
    },
    "4308": {
      "offset": [
        1858,
        1895
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4309": {
      "offset": [
        1905,
        1915
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x15"
    },
    "4311": {
      "offset": [
        1905,
        1922
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4312": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        1905,
        1922
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4313": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4317": {
      "op": "SHL"
    },
    "4318": {
      "op": "NOT"
    },
    "4319": {
      "offset": [
        1905,
        1922
      ],
      "op": "AND",
      "path": "22"
    },
    "4320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4324": {
      "op": "SHL"
    },
    "4325": {
      "offset": [
        1905,
        1922
      ],
      "op": "OR",
      "path": "22"
    },
    "4326": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        1905,
        1922
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4327": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        1905,
        1922
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4328": {
      "offset": [
        1347,
        1355
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x10FB"
    },
    "4331": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xA"
    },
    "4333": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4334": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4340": {
      "op": "SHL"
    },
    "4341": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4342": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4343": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "DIV",
      "path": "21"
    },
    "4344": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "AND",
      "path": "21"
    },
    "4345": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4346": {
      "fn": "Pauseable.paused",
      "offset": [
        1033,
        1117
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4347": {
      "offset": [
        1347,
        1355
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4348": {
      "offset": [
        1346,
        1355
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "4349": {
      "offset": [
        1338,
        1377
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x113C"
    },
    "4352": {
      "offset": [
        1338,
        1377
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4353": {
      "fn": "Pauseable.paused",
      "offset": [
        1338,
        1377
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4355": {
      "fn": "Pauseable.paused",
      "offset": [
        1338,
        1377
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4356": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4362": {
      "op": "SHL"
    },
    "4363": {
      "offset": [
        1338,
        1377
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4364": {
      "fn": "Pauseable.paused",
      "offset": [
        1338,
        1377
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4367": {
      "offset": [
        1338,
        1377
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "4369": {
      "fn": "Pauseable.paused",
      "offset": [
        1338,
        1377
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4370": {
      "fn": "Pauseable.paused",
      "offset": [
        1338,
        1377
      ],
      "op": "ADD",
      "path": "21"
    },
    "4371": {
      "op": "MSTORE"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4376": {
      "op": "DUP3"
    },
    "4377": {
      "op": "ADD"
    },
    "4378": {
      "op": "MSTORE"
    },
    "4379": {
      "op": "PUSH17",
      "value": "0x14185D5CD958589B194E881C185D5CD959"
    },
    "4397": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4399": {
      "op": "SHL"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4402": {
      "op": "DUP3"
    },
    "4403": {
      "op": "ADD"
    },
    "4404": {
      "op": "MSTORE"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4407": {
      "op": "ADD"
    },
    "4408": {
      "offset": [
        1338,
        1377
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xAC8"
    },
    "4411": {
      "op": "JUMP"
    },
    "4412": {
      "offset": [
        1338,
        1377
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4413": {
      "branch": 147,
      "fn": "PoliceAndThief.mint",
      "offset": [
        2681,
        2686
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 32
    },
    "4414": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2680,
        2686
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4415": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2680,
        2703
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4416": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2680,
        2703
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1150"
    },
    "4419": {
      "branch": 147,
      "fn": "PoliceAndThief.mint",
      "offset": [
        2680,
        2703
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4420": {
      "op": "POP"
    },
    "4421": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2690,
        2703
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x17"
    },
    "4423": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2690,
        2703
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4424": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2690,
        2703
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "4427": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2690,
        2703
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4428": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2690,
        2703
      ],
      "op": "DIV",
      "path": "22"
    },
    "4429": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2690,
        2703
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "4431": {
      "branch": 148,
      "fn": "PoliceAndThief.mint",
      "offset": [
        2690,
        2703
      ],
      "op": "AND",
      "path": "22"
    },
    "4432": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2680,
        2703
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4433": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2672,
        2729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1194"
    },
    "4436": {
      "branch": 148,
      "fn": "PoliceAndThief.mint",
      "offset": [
        2672,
        2729
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4437": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2672,
        2729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4439": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2672,
        2729
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4440": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4444": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4446": {
      "op": "SHL"
    },
    "4447": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2672,
        2729
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4448": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2672,
        2729
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4451": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2672,
        2729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4453": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2672,
        2729
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4454": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2672,
        2729
      ],
      "op": "ADD",
      "path": "22"
    },
    "4455": {
      "op": "MSTORE"
    },
    "4456": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "4458": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4460": {
      "op": "DUP3"
    },
    "4461": {
      "op": "ADD"
    },
    "4462": {
      "op": "MSTORE"
    },
    "4463": {
      "op": "PUSH21",
      "value": "0x14DD185ADA5B99C81B9BDD081858DD1A5D985D1959"
    },
    "4485": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "4487": {
      "op": "SHL"
    },
    "4488": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4490": {
      "op": "DUP3"
    },
    "4491": {
      "op": "ADD"
    },
    "4492": {
      "op": "MSTORE"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4495": {
      "op": "ADD"
    },
    "4496": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2672,
        2729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAC8"
    },
    "4499": {
      "op": "JUMP"
    },
    "4500": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2672,
        2729
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4501": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2744,
        2757
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x17"
    },
    "4503": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2744,
        2757
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4504": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2744,
        2757
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "4506": {
      "branch": 149,
      "fn": "PoliceAndThief.mint",
      "offset": [
        2744,
        2757
      ],
      "op": "AND",
      "path": "22"
    },
    "4507": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2740,
        2835
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4508": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2740,
        2835
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x11F0"
    },
    "4511": {
      "branch": 149,
      "fn": "PoliceAndThief.mint",
      "offset": [
        2740,
        2835
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4512": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2793,
        2803
      ],
      "op": "CALLER",
      "path": "22",
      "statement": 33
    },
    "4513": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2781,
        2804
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4515": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2781,
        2804
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4516": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2781,
        2804
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4517": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2781,
        2804
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4518": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2781,
        2792
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x16"
    },
    "4520": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2781,
        2804
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4522": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2781,
        2804
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4523": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2781,
        2804
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4525": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2781,
        2804
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4526": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2781,
        2804
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4527": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2781,
        2804
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4528": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2781,
        2804
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "4530": {
      "branch": 150,
      "fn": "PoliceAndThief.mint",
      "offset": [
        2781,
        2804
      ],
      "op": "AND",
      "path": "22"
    },
    "4531": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2773,
        2824
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x11F0"
    },
    "4534": {
      "branch": 150,
      "fn": "PoliceAndThief.mint",
      "offset": [
        2773,
        2824
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4535": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2773,
        2824
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4537": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2773,
        2824
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4538": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4542": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4544": {
      "op": "SHL"
    },
    "4545": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2773,
        2824
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4546": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2773,
        2824
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4549": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2773,
        2824
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4551": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2773,
        2824
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4552": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2773,
        2824
      ],
      "op": "ADD",
      "path": "22"
    },
    "4553": {
      "op": "MSTORE"
    },
    "4554": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4558": {
      "op": "DUP3"
    },
    "4559": {
      "op": "ADD"
    },
    "4560": {
      "op": "MSTORE"
    },
    "4561": {
      "op": "PUSH15",
      "value": "0x139BDD081DDA1A5D195B1A5CDD1959"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "4579": {
      "op": "SHL"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4582": {
      "op": "DUP3"
    },
    "4583": {
      "op": "ADD"
    },
    "4584": {
      "op": "MSTORE"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4587": {
      "op": "ADD"
    },
    "4588": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2773,
        2824
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAC8"
    },
    "4591": {
      "op": "JUMP"
    },
    "4592": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2773,
        2824
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4593": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2853,
        2862
      ],
      "op": "ORIGIN",
      "path": "22",
      "statement": 34
    },
    "4594": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4595": {
      "branch": 151,
      "fn": "PoliceAndThief.mint",
      "offset": [
        2853,
        2878
      ],
      "op": "EQ",
      "path": "22"
    },
    "4596": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2845,
        2891
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x122A"
    },
    "4599": {
      "branch": 151,
      "fn": "PoliceAndThief.mint",
      "offset": [
        2845,
        2891
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4600": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2845,
        2891
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4602": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2845,
        2891
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4603": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4607": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4609": {
      "op": "SHL"
    },
    "4610": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2845,
        2891
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4611": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2845,
        2891
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4614": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2845,
        2891
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4616": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2845,
        2891
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4617": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2845,
        2891
      ],
      "op": "ADD",
      "path": "22"
    },
    "4618": {
      "op": "MSTORE"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4623": {
      "op": "DUP3"
    },
    "4624": {
      "op": "ADD"
    },
    "4625": {
      "op": "MSTORE"
    },
    "4626": {
      "op": "PUSH8",
      "value": "0x4F6E6C7920454F41"
    },
    "4635": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4637": {
      "op": "SHL"
    },
    "4638": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4640": {
      "op": "DUP3"
    },
    "4641": {
      "op": "ADD"
    },
    "4642": {
      "op": "MSTORE"
    },
    "4643": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4645": {
      "op": "ADD"
    },
    "4646": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2845,
        2891
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAC8"
    },
    "4649": {
      "op": "JUMP"
    },
    "4650": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2845,
        2891
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4651": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2909,
        2915
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 35,
      "value": "0xE"
    },
    "4653": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2909,
        2915
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4654": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2928,
        2938
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "4687": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2928,
        2938
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4688": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2909,
        2924
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x125E"
    },
    "4691": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2909,
        2924
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4692": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2918,
        2924
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4693": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2918,
        2924
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4694": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2909,
        2915
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "4697": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2909,
        2915
      ],
      "op": "AND",
      "path": "22"
    },
    "4698": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2909,
        2924
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30CD"
    },
    "4701": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        2909,
        2924
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4702": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2909,
        2924
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4703": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2909,
        2938
      ],
      "op": "GT",
      "path": "22"
    },
    "4704": {
      "branch": 152,
      "fn": "PoliceAndThief.mint",
      "offset": [
        2909,
        2938
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4705": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2901,
        2960
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x12A0"
    },
    "4708": {
      "branch": 152,
      "fn": "PoliceAndThief.mint",
      "offset": [
        2901,
        2960
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4709": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2901,
        2960
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4711": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2901,
        2960
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4712": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4718": {
      "op": "SHL"
    },
    "4719": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2901,
        2960
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4720": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2901,
        2960
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4721": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4723": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2901,
        2960
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4725": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2901,
        2960
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4726": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2901,
        2960
      ],
      "op": "ADD",
      "path": "22"
    },
    "4727": {
      "op": "MSTORE"
    },
    "4728": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4732": {
      "op": "DUP3"
    },
    "4733": {
      "op": "ADD"
    },
    "4734": {
      "op": "MSTORE"
    },
    "4735": {
      "op": "PUSH17",
      "value": "0x105B1B081D1BDAD95B9CC81B5A5B9D1959"
    },
    "4753": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4755": {
      "op": "SHL"
    },
    "4756": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4758": {
      "op": "DUP3"
    },
    "4759": {
      "op": "ADD"
    },
    "4760": {
      "op": "MSTORE"
    },
    "4761": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4763": {
      "op": "ADD"
    },
    "4764": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2901,
        2960
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAC8"
    },
    "4767": {
      "op": "JUMP"
    },
    "4768": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2901,
        2960
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4769": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2987,
        2988
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 36,
      "value": "0x0"
    },
    "4771": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2978,
        2984
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4772": {
      "branch": 153,
      "fn": "PoliceAndThief.mint",
      "offset": [
        2978,
        2988
      ],
      "op": "GT",
      "path": "22"
    },
    "4773": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2978,
        3010
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4774": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2978,
        3010
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4775": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2978,
        3010
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x12B2"
    },
    "4778": {
      "branch": 153,
      "fn": "PoliceAndThief.mint",
      "offset": [
        2978,
        3010
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4779": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2978,
        3010
      ],
      "op": "POP",
      "path": "22"
    },
    "4780": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3002,
        3010
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "4782": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3002,
        3010
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4783": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2992,
        2998
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4784": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2992,
        3010
      ],
      "op": "GT",
      "path": "22"
    },
    "4785": {
      "branch": 154,
      "fn": "PoliceAndThief.mint",
      "offset": [
        2992,
        3010
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4786": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2978,
        3010
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4787": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2970,
        3034
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x12F4"
    },
    "4790": {
      "branch": 154,
      "fn": "PoliceAndThief.mint",
      "offset": [
        2970,
        3034
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4791": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2970,
        3034
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4793": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2970,
        3034
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4794": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4798": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4800": {
      "op": "SHL"
    },
    "4801": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2970,
        3034
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4802": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2970,
        3034
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4805": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2970,
        3034
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4807": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2970,
        3034
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4808": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2970,
        3034
      ],
      "op": "ADD",
      "path": "22"
    },
    "4809": {
      "op": "MSTORE"
    },
    "4810": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "4812": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4814": {
      "op": "DUP3"
    },
    "4815": {
      "op": "ADD"
    },
    "4816": {
      "op": "MSTORE"
    },
    "4817": {
      "op": "PUSH19",
      "value": "0x125B9D985B1A59081B5A5B9D08185B5BDD5B9D"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "4839": {
      "op": "SHL"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4842": {
      "op": "DUP3"
    },
    "4843": {
      "op": "ADD"
    },
    "4844": {
      "op": "MSTORE"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4847": {
      "op": "ADD"
    },
    "4848": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2970,
        3034
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAC8"
    },
    "4851": {
      "op": "JUMP"
    },
    "4852": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        2970,
        3034
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4853": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3058,
        3069
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "4855": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3058,
        3069
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4856": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3049,
        3055
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE"
    },
    "4858": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3049,
        3055
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4859": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3049,
        3055
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "4862": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3049,
        3055
      ],
      "op": "AND",
      "path": "22"
    },
    "4863": {
      "branch": 155,
      "fn": "PoliceAndThief.mint",
      "offset": [
        3049,
        3069
      ],
      "op": "LT",
      "path": "22"
    },
    "4864": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3045,
        3351
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4865": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3045,
        3351
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13C1"
    },
    "4868": {
      "branch": 155,
      "fn": "PoliceAndThief.mint",
      "offset": [
        3045,
        3351
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4869": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3129,
        3140
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 37,
      "value": "0xD"
    },
    "4871": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3129,
        3140
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4872": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3110,
        3116
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE"
    },
    "4874": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3110,
        3116
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4875": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3110,
        3125
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1319"
    },
    "4878": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3110,
        3125
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4879": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3119,
        3125
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4880": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3119,
        3125
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4881": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3110,
        3116
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "4884": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3110,
        3116
      ],
      "op": "AND",
      "path": "22"
    },
    "4885": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3110,
        3125
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30CD"
    },
    "4888": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        3110,
        3125
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4889": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3110,
        3125
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4890": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3110,
        3140
      ],
      "op": "GT",
      "path": "22"
    },
    "4891": {
      "branch": 156,
      "fn": "PoliceAndThief.mint",
      "offset": [
        3110,
        3140
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4892": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3085,
        3205
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1367"
    },
    "4895": {
      "branch": 156,
      "fn": "PoliceAndThief.mint",
      "offset": [
        3085,
        3205
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4896": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3085,
        3205
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4898": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3085,
        3205
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4899": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4903": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4905": {
      "op": "SHL"
    },
    "4906": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3085,
        3205
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4907": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3085,
        3205
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4910": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3085,
        3205
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4912": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3085,
        3205
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4913": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3085,
        3205
      ],
      "op": "ADD",
      "path": "22"
    },
    "4914": {
      "op": "MSTORE"
    },
    "4915": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4917": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4919": {
      "op": "DUP3"
    },
    "4920": {
      "op": "ADD"
    },
    "4921": {
      "op": "MSTORE"
    },
    "4922": {
      "op": "PUSH32",
      "value": "0x416C6C20746F6B656E73206F6E2D73616C6520616C726561647920736F6C6400"
    },
    "4955": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4957": {
      "op": "DUP3"
    },
    "4958": {
      "op": "ADD"
    },
    "4959": {
      "op": "MSTORE"
    },
    "4960": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4962": {
      "op": "ADD"
    },
    "4963": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3085,
        3205
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAC8"
    },
    "4966": {
      "op": "JUMP"
    },
    "4967": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3085,
        3205
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4968": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3250,
        3259
      ],
      "op": "CALLVALUE",
      "path": "22",
      "statement": 38
    },
    "4969": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3236,
        3246
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4971": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3236,
        3246
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4972": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3227,
        3233
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4973": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3227,
        3246
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1376"
    },
    "4976": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3227,
        3246
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4977": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3227,
        3246
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4978": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3227,
        3246
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x306E"
    },
    "4981": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        3227,
        3246
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4982": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3227,
        3246
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4983": {
      "branch": 157,
      "fn": "PoliceAndThief.mint",
      "offset": [
        3227,
        3259
      ],
      "op": "EQ",
      "path": "22"
    },
    "4984": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3219,
        3286
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13BC"
    },
    "4987": {
      "branch": 157,
      "fn": "PoliceAndThief.mint",
      "offset": [
        3219,
        3286
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4988": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3219,
        3286
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4990": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3219,
        3286
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4991": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4995": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4997": {
      "op": "SHL"
    },
    "4998": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3219,
        3286
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4999": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3219,
        3286
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5002": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3219,
        3286
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5004": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3219,
        3286
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5005": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3219,
        3286
      ],
      "op": "ADD",
      "path": "22"
    },
    "5006": {
      "op": "MSTORE"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "5009": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5011": {
      "op": "DUP3"
    },
    "5012": {
      "op": "ADD"
    },
    "5013": {
      "op": "MSTORE"
    },
    "5014": {
      "op": "PUSH22",
      "value": "0x125B9D985B1A59081C185E5B595B9D08185B5BDD5B9D"
    },
    "5037": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "5039": {
      "op": "SHL"
    },
    "5040": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5042": {
      "op": "DUP3"
    },
    "5043": {
      "op": "ADD"
    },
    "5044": {
      "op": "MSTORE"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5047": {
      "op": "ADD"
    },
    "5048": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3219,
        3286
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAC8"
    },
    "5051": {
      "op": "JUMP"
    },
    "5052": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3219,
        3286
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5053": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3045,
        3351
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13CC"
    },
    "5056": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3045,
        3351
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5057": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3045,
        3351
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5058": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3325,
        3334
      ],
      "op": "CALLVALUE",
      "path": "22",
      "statement": 39
    },
    "5059": {
      "branch": 158,
      "fn": "PoliceAndThief.mint",
      "offset": [
        3325,
        3339
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5060": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3317,
        3340
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13CC"
    },
    "5063": {
      "branch": 158,
      "fn": "PoliceAndThief.mint",
      "offset": [
        3317,
        3340
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5064": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3317,
        3340
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5066": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3317,
        3340
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5067": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3317,
        3340
      ],
      "op": "REVERT",
      "path": "22"
    },
    "5068": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3317,
        3340
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5069": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3361,
        3382
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5071": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3396,
        3420
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5072": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3436,
        3442
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5073": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "PUSH8",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5082": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5083": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "GT",
      "path": "22"
    },
    "5084": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5085": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13E8"
    },
    "5088": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5089": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13E8"
    },
    "5092": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D94"
    },
    "5095": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        3423,
        3443
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5096": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5097": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5099": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5100": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5101": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5102": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5103": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5104": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5105": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5107": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "MUL",
      "path": "22"
    },
    "5108": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5110": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "ADD",
      "path": "22"
    },
    "5111": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5112": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "ADD",
      "path": "22"
    },
    "5113": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5115": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5116": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5117": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5118": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1411"
    },
    "5121": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5122": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5123": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5125": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "ADD",
      "path": "22"
    },
    "5126": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5128": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5129": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "MUL",
      "path": "22"
    },
    "5130": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5131": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "5132": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5133": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "CALLDATACOPY",
      "path": "22"
    },
    "5134": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "ADD",
      "path": "22"
    },
    "5135": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5136": {
      "op": "POP"
    },
    "5137": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5138": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3423,
        3443
      ],
      "op": "POP",
      "path": "22"
    },
    "5139": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3396,
        3443
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5140": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3396,
        3443
      ],
      "op": "POP",
      "path": "22"
    },
    "5141": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3453,
        3476
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5143": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3493,
        3499
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5144": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "PUSH8",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5153": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5154": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "GT",
      "path": "22"
    },
    "5155": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5156": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x142F"
    },
    "5159": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5160": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x142F"
    },
    "5163": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D94"
    },
    "5166": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        3479,
        3500
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5167": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5168": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5170": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5171": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5172": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5173": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5174": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5175": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5176": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5178": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "MUL",
      "path": "22"
    },
    "5179": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5181": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "ADD",
      "path": "22"
    },
    "5182": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5183": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "ADD",
      "path": "22"
    },
    "5184": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5186": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5187": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5188": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5189": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1458"
    },
    "5192": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5193": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5194": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5196": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "ADD",
      "path": "22"
    },
    "5197": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5199": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5200": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "MUL",
      "path": "22"
    },
    "5201": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5202": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "5203": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5204": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "CALLDATACOPY",
      "path": "22"
    },
    "5205": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "ADD",
      "path": "22"
    },
    "5206": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5207": {
      "op": "POP"
    },
    "5208": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3479,
        3500
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5209": {
      "op": "POP"
    },
    "5210": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3554,
        3560
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE"
    },
    "5212": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3554,
        3560
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5213": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3453,
        3500
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5214": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3453,
        3500
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5215": {
      "op": "POP"
    },
    "5216": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3510,
        3522
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5218": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3510,
        3522
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5219": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3554,
        3560
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "5222": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3554,
        3560
      ],
      "op": "AND",
      "path": "22"
    },
    "5223": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3510,
        3522
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5224": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3571,
        4162
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5225": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3595,
        3601
      ],
      "op": "DUP8",
      "path": "22"
    },
    "5226": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3591,
        3592
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5227": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3591,
        3601
      ],
      "op": "LT",
      "path": "22"
    },
    "5228": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3571,
        4162
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5229": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3571,
        4162
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1662"
    },
    "5232": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3571,
        4162
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5233": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3628
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 40,
      "value": "0xE"
    },
    "5235": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5236": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5237": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "5240": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "AND",
      "path": "22"
    },
    "5241": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5242": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3628
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5244": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1484"
    },
    "5247": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5248": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30E5"
    },
    "5251": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        3622,
        3630
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5252": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5253": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5254": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5255": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "5258": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5259": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5260": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5261": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "EXP",
      "path": "22"
    },
    "5262": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "5265": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5266": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5267": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "MUL",
      "path": "22"
    },
    "5268": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "NOT",
      "path": "22"
    },
    "5269": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5270": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "5271": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "AND",
      "path": "22"
    },
    "5272": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5273": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5274": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "AND",
      "path": "22"
    },
    "5275": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "MUL",
      "path": "22"
    },
    "5276": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "OR",
      "path": "22"
    },
    "5277": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5278": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5279": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3622,
        3630
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5280": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3658,
        3664
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 41,
      "value": "0xE"
    },
    "5282": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3658,
        3664
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5283": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3651,
        3665
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x14AD"
    },
    "5286": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3651,
        3665
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5287": {
      "op": "POP"
    },
    "5288": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3658,
        3664
      ],
      "op": "AND",
      "path": "22"
    },
    "5289": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3651,
        3657
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2151"
    },
    "5292": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        3651,
        3665
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5293": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3651,
        3665
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5294": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3691
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 42,
      "value": "0x15"
    },
    "5296": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3691
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5297": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3699,
        3705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE"
    },
    "5299": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3699,
        3705
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5300": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5302": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5303": {
      "op": "PUSH4",
      "value": "0x4155C485"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5310": {
      "op": "SHL"
    },
    "5311": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5312": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5313": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3699,
        3705
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "5316": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3699,
        3705
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5317": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3699,
        3705
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5318": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3699,
        3705
      ],
      "op": "AND",
      "path": "22"
    },
    "5319": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3699,
        3712
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5320": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3699,
        3712
      ],
      "op": "XOR",
      "path": "22"
    },
    "5321": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5323": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5324": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "ADD",
      "path": "22"
    },
    "5325": {
      "op": "MSTORE"
    },
    "5326": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3644,
        3665
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5327": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3644,
        3665
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "5328": {
      "op": "POP"
    },
    "5329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5335": {
      "op": "SHL"
    },
    "5336": {
      "op": "SUB"
    },
    "5337": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3691
      ],
      "op": "AND",
      "path": "22"
    },
    "5338": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3691
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5339": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3698
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x82AB890A"
    },
    "5344": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3698
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5345": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5347": {
      "op": "ADD"
    },
    "5348": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5350": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5352": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5353": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5354": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5355": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "SUB",
      "path": "22"
    },
    "5356": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5357": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5359": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "DUP8",
      "path": "22"
    },
    "5360": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "GAS",
      "path": "22"
    },
    "5361": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "CALL",
      "path": "22"
    },
    "5362": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5363": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5364": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5365": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1502"
    },
    "5368": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5369": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "5370": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5372": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5373": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "5374": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "5375": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5377": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "REVERT",
      "path": "22"
    },
    "5378": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5379": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "POP",
      "path": "22"
    },
    "5380": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "POP",
      "path": "22"
    },
    "5381": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "POP",
      "path": "22"
    },
    "5382": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "POP",
      "path": "22"
    },
    "5383": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5385": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5386": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "5387": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "5389": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "NOT",
      "path": "22"
    },
    "5390": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "5392": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5393": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "ADD",
      "path": "22"
    },
    "5394": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "AND",
      "path": "22"
    },
    "5395": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5396": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "ADD",
      "path": "22"
    },
    "5397": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5398": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5400": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5401": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "POP",
      "path": "22"
    },
    "5402": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5403": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "ADD",
      "path": "22"
    },
    "5404": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5405": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1526"
    },
    "5408": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5409": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5410": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3107"
    },
    "5413": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        3679,
        3713
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5414": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3679,
        3713
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5415": {
      "op": "POP"
    },
    "5416": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3736,
        3742
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 43,
      "value": "0xE"
    },
    "5418": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3736,
        3742
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5419": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3727,
        3749
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1538"
    },
    "5422": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3727,
        3749
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5423": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3736,
        3742
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "5426": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3736,
        3742
      ],
      "op": "AND",
      "path": "22"
    },
    "5427": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3744,
        3748
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5428": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3727,
        3735
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x221D"
    },
    "5431": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        3727,
        3749
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5432": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3727,
        3749
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5433": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3727,
        3749
      ],
      "op": "POP",
      "path": "22"
    },
    "5434": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3763,
        3780
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5436": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3783,
        3804
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1544"
    },
    "5439": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3799,
        3803
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5440": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3783,
        3798
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2398"
    },
    "5443": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        3783,
        3804
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5444": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3783,
        3804
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5445": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3844,
        3850
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 44,
      "value": "0xE"
    },
    "5447": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3844,
        3850
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5448": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3763,
        3804
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5449": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3763,
        3804
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5450": {
      "op": "POP"
    },
    "5451": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3835,
        3851
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1557"
    },
    "5454": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3835,
        3851
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5455": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3844,
        3850
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "5458": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3844,
        3850
      ],
      "op": "AND",
      "path": "22"
    },
    "5459": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3835,
        3843
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD7D"
    },
    "5462": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        3835,
        3851
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5463": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3835,
        3851
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5464": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3818,
        3851
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1561"
    },
    "5467": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3818,
        3851
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5468": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3818,
        3851
      ],
      "op": "DUP9",
      "path": "22"
    },
    "5469": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3818,
        3851
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30CD"
    },
    "5472": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        3818,
        3851
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5473": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3818,
        3851
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5474": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3818,
        3851
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "5475": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3818,
        3851
      ],
      "op": "POP",
      "path": "22"
    },
    "5476": {
      "branch": 159,
      "fn": "PoliceAndThief.mint",
      "offset": [
        3870,
        3875
      ],
      "op": "DUP8",
      "path": "22"
    },
    "5477": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3869,
        3875
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5478": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3869,
        3904
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5479": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3869,
        3904
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1579"
    },
    "5482": {
      "branch": 159,
      "fn": "PoliceAndThief.mint",
      "offset": [
        3869,
        3904
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5483": {
      "op": "POP"
    },
    "5484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5490": {
      "op": "SHL"
    },
    "5491": {
      "op": "SUB"
    },
    "5492": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3879,
        3904
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5493": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3879,
        3904
      ],
      "op": "AND",
      "path": "22"
    },
    "5494": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5495": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3879,
        3904
      ],
      "op": "EQ",
      "path": "22"
    },
    "5496": {
      "branch": 160,
      "fn": "PoliceAndThief.mint",
      "offset": [
        3879,
        3904
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5497": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3869,
        3904
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5498": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3865,
        4062
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5499": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3865,
        4062
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15B6"
    },
    "5502": {
      "branch": 160,
      "fn": "PoliceAndThief.mint",
      "offset": [
        3865,
        4062
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5503": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3936,
        3945
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 45
    },
    "5504": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3930
      ],
      "op": "DUP6",
      "path": "22"
    },
    "5505": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3931,
        3932
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5506": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3933
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5507": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3933
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5508": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3933
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5509": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3933
      ],
      "op": "LT",
      "path": "22"
    },
    "5510": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3933
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1591"
    },
    "5513": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3933
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5514": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3933
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1591"
    },
    "5517": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3933
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30B7"
    },
    "5520": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        3924,
        3933
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5521": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3933
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5522": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3933
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5524": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3933
      ],
      "op": "MUL",
      "path": "22"
    },
    "5525": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3933
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5527": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3933
      ],
      "op": "ADD",
      "path": "22"
    },
    "5528": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3933
      ],
      "op": "ADD",
      "path": "22"
    },
    "5529": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3945
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5536": {
      "op": "SHL"
    },
    "5537": {
      "op": "SUB"
    },
    "5538": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3945
      ],
      "op": "AND",
      "path": "22"
    },
    "5539": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3945
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5540": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3945
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5547": {
      "op": "SHL"
    },
    "5548": {
      "op": "SUB"
    },
    "5549": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3945
      ],
      "op": "AND",
      "path": "22"
    },
    "5550": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3945
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5551": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3945
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5552": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3945
      ],
      "op": "POP",
      "path": "22"
    },
    "5553": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3924,
        3945
      ],
      "op": "POP",
      "path": "22"
    },
    "5554": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3865,
        4062
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x162B"
    },
    "5557": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3865,
        4062
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5558": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3865,
        4062
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5559": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3998,
        4004
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 46,
      "value": "0xE"
    },
    "5561": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3998,
        4004
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5562": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3995
      ],
      "op": "DUP7",
      "path": "22"
    },
    "5563": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3995
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5564": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3998,
        4004
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "5567": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3998,
        4004
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5568": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3998,
        4004
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5569": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3998,
        4004
      ],
      "op": "AND",
      "path": "22"
    },
    "5570": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3998,
        4004
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5571": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3992
      ],
      "op": "DUP8",
      "path": "22"
    },
    "5572": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3992
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5573": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3993,
        3994
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5574": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3993,
        3994
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5575": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3995
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5576": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3995
      ],
      "op": "LT",
      "path": "22"
    },
    "5577": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3995
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15D4"
    },
    "5580": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3995
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5581": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3995
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15D4"
    },
    "5584": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3995
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30B7"
    },
    "5587": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        3984,
        3995
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5588": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3995
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5589": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        4004
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "5592": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        4004
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5593": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        4004
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5594": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        4004
      ],
      "op": "AND",
      "path": "22"
    },
    "5595": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3995
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5597": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3995
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5598": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3995
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5599": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3995
      ],
      "op": "MUL",
      "path": "22"
    },
    "5600": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3995
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5601": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3995
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5602": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3995
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5603": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3995
      ],
      "op": "ADD",
      "path": "22"
    },
    "5604": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3995
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5605": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3995
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5606": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        3995
      ],
      "op": "ADD",
      "path": "22"
    },
    "5607": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3984,
        4004
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5608": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4042,
        4046
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 47,
      "value": "0x12"
    },
    "5610": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4042,
        4046
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5611": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4031
      ],
      "op": "DUP6",
      "path": "22"
    },
    "5612": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4031
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5619": {
      "op": "SHL"
    },
    "5620": {
      "op": "SUB"
    },
    "5621": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4042,
        4046
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5622": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4042,
        4046
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5623": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4042,
        4046
      ],
      "op": "AND",
      "path": "22"
    },
    "5624": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4042,
        4046
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5625": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4028
      ],
      "op": "DUP7",
      "path": "22"
    },
    "5626": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4028
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5627": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4029,
        4030
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5628": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4029,
        4030
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5629": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4031
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5630": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4031
      ],
      "op": "LT",
      "path": "22"
    },
    "5631": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4031
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x160A"
    },
    "5634": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4031
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5635": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4031
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x160A"
    },
    "5638": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4031
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30B7"
    },
    "5641": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        4022,
        4031
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5642": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4031
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5643": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4031
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5645": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4031
      ],
      "op": "MUL",
      "path": "22"
    },
    "5646": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4031
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5648": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4031
      ],
      "op": "ADD",
      "path": "22"
    },
    "5649": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4031
      ],
      "op": "ADD",
      "path": "22"
    },
    "5650": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4047
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5657": {
      "op": "SHL"
    },
    "5658": {
      "op": "SUB"
    },
    "5659": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4047
      ],
      "op": "AND",
      "path": "22"
    },
    "5660": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4047
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5661": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4047
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5668": {
      "op": "SHL"
    },
    "5669": {
      "op": "SUB"
    },
    "5670": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4047
      ],
      "op": "AND",
      "path": "22"
    },
    "5671": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4047
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5672": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4047
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5673": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4047
      ],
      "op": "POP",
      "path": "22"
    },
    "5674": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4022,
        4047
      ],
      "op": "POP",
      "path": "22"
    },
    "5675": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3865,
        4062
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5676": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4080,
        4093
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x17"
    },
    "5678": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4080,
        4093
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5679": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4080,
        4093
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "5681": {
      "branch": 161,
      "fn": "PoliceAndThief.mint",
      "offset": [
        4080,
        4093
      ],
      "op": "AND",
      "path": "22"
    },
    "5682": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4076,
        4152
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5683": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4076,
        4152
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x164F"
    },
    "5686": {
      "branch": 161,
      "fn": "PoliceAndThief.mint",
      "offset": [
        4076,
        4152
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5687": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4136,
        4137
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 48,
      "value": "0x1"
    },
    "5689": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4113,
        4132
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x19"
    },
    "5691": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4113,
        4132
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5693": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4113,
        4137
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5694": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4113,
        4137
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5695": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4113,
        4137
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5696": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4113,
        4137
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1649"
    },
    "5699": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4113,
        4137
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5700": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4113,
        4137
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5701": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4113,
        4137
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30CD"
    },
    "5704": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        4113,
        4137
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5705": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4113,
        4137
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5706": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4113,
        4137
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5707": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4113,
        4137
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5708": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4113,
        4137
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5709": {
      "op": "POP"
    },
    "5710": {
      "op": "POP"
    },
    "5711": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4076,
        4152
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5712": {
      "op": "POP"
    },
    "5713": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3603,
        3606
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 49
    },
    "5714": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3603,
        3606
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x165A"
    },
    "5717": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3603,
        3606
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5718": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3603,
        3606
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3120"
    },
    "5721": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        3603,
        3606
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5722": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3603,
        3606
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5723": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3603,
        3606
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5724": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3603,
        3606
      ],
      "op": "POP",
      "path": "22"
    },
    "5725": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3603,
        3606
      ],
      "op": "POP",
      "path": "22"
    },
    "5726": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3571,
        4162
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1468"
    },
    "5729": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3571,
        4162
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5730": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        3571,
        4162
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5731": {
      "op": "POP"
    },
    "5732": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4176,
        4193
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5733": {
      "branch": 162,
      "fn": "PoliceAndThief.mint",
      "offset": [
        4176,
        4193
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5734": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4172,
        4233
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x16DC"
    },
    "5737": {
      "branch": 162,
      "fn": "PoliceAndThief.mint",
      "offset": [
        4172,
        4233
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5738": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4199
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 50,
      "value": "0x13"
    },
    "5740": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4199
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5747": {
      "op": "SHL"
    },
    "5748": {
      "op": "SUB"
    },
    "5749": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4199
      ],
      "op": "AND",
      "path": "22"
    },
    "5750": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4204
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x9DC29FAC"
    },
    "5755": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5756": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5758": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5763": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5765": {
      "op": "SHL"
    },
    "5766": {
      "op": "SUB"
    },
    "5767": {
      "op": "NOT"
    },
    "5768": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "5770": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5771": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5772": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "SHL",
      "path": "22"
    },
    "5773": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "AND",
      "path": "22"
    },
    "5774": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5775": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5782": {
      "op": "SHL"
    },
    "5783": {
      "op": "SUB"
    },
    "5784": {
      "op": "SWAP1"
    },
    "5785": {
      "op": "SWAP2"
    },
    "5786": {
      "op": "AND"
    },
    "5787": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5789": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5790": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "ADD",
      "path": "22"
    },
    "5791": {
      "op": "MSTORE"
    },
    "5792": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5794": {
      "op": "DUP2"
    },
    "5795": {
      "op": "ADD"
    },
    "5796": {
      "op": "DUP9"
    },
    "5797": {
      "op": "SWAP1"
    },
    "5798": {
      "op": "MSTORE"
    },
    "5799": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5801": {
      "op": "ADD"
    },
    "5802": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5804": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5806": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5807": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5808": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5809": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "SUB",
      "path": "22"
    },
    "5810": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5811": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5813": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "DUP8",
      "path": "22"
    },
    "5814": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5815": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "5816": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5817": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5818": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5819": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x16C3"
    },
    "5822": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5823": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5825": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5826": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "REVERT",
      "path": "22"
    },
    "5827": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5828": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "POP",
      "path": "22"
    },
    "5829": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "GAS",
      "path": "22"
    },
    "5830": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "CALL",
      "path": "22"
    },
    "5831": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5832": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5833": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5834": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x16D7"
    },
    "5837": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5838": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "5839": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5841": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5842": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "5843": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "5844": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5846": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "REVERT",
      "path": "22"
    },
    "5847": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5848": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "POP",
      "path": "22"
    },
    "5849": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "POP",
      "path": "22"
    },
    "5850": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "POP",
      "path": "22"
    },
    "5851": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4195,
        4233
      ],
      "op": "POP",
      "path": "22"
    },
    "5852": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4172,
        4233
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5853": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4249,
        4258
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5855": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4244,
        4456
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5856": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4268,
        4274
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5857": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4268,
        4281
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5858": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4264,
        4265
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5859": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4264,
        4281
      ],
      "op": "LT",
      "path": "22"
    },
    "5860": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4244,
        4456
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5861": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4244,
        4456
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1774"
    },
    "5864": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4244,
        4456
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5865": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4302,
        4312
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5867": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4315,
        4330
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x16F4"
    },
    "5870": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4329,
        4330
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5871": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4315,
        4326
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5872": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4315,
        4330
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30CD"
    },
    "5875": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        4315,
        4330
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5876": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4315,
        4330
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5877": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4315,
        4334
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x16FF"
    },
    "5880": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4315,
        4334
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5881": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4333,
        4334
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "5883": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4315,
        4334
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30CD"
    },
    "5886": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        4315,
        4334
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5887": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4315,
        4334
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5888": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4302,
        4334
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5889": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4302,
        4334
      ],
      "op": "POP",
      "path": "22"
    },
    "5890": {
      "branch": 163,
      "fn": "PoliceAndThief.mint",
      "offset": [
        4353,
        4358
      ],
      "op": "DUP8",
      "path": "22"
    },
    "5891": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4352,
        4358
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5892": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4352,
        4387
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5893": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4352,
        4387
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1739"
    },
    "5896": {
      "branch": 163,
      "fn": "PoliceAndThief.mint",
      "offset": [
        4352,
        4387
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5897": {
      "op": "POP"
    },
    "5898": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5905": {
      "op": "SHL"
    },
    "5906": {
      "op": "SUB"
    },
    "5907": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4362,
        4387
      ],
      "op": "AND",
      "path": "22"
    },
    "5908": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4362,
        4368
      ],
      "op": "DUP6",
      "path": "22"
    },
    "5909": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4369,
        4370
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5910": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4362,
        4371
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5911": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4362,
        4371
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5912": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4362,
        4371
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5913": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4362,
        4371
      ],
      "op": "LT",
      "path": "22"
    },
    "5914": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4362,
        4371
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1725"
    },
    "5917": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4362,
        4371
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5918": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4362,
        4371
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1725"
    },
    "5921": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4362,
        4371
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30B7"
    },
    "5924": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        4362,
        4371
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5925": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4362,
        4371
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5926": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4362,
        4371
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5928": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4362,
        4371
      ],
      "op": "MUL",
      "path": "22"
    },
    "5929": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4362,
        4371
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5931": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4362,
        4371
      ],
      "op": "ADD",
      "path": "22"
    },
    "5932": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4362,
        4371
      ],
      "op": "ADD",
      "path": "22"
    },
    "5933": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4362,
        4371
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5940": {
      "op": "SHL"
    },
    "5941": {
      "op": "SUB"
    },
    "5942": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4362,
        4387
      ],
      "op": "AND",
      "path": "22"
    },
    "5943": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4362,
        4387
      ],
      "op": "EQ",
      "path": "22"
    },
    "5944": {
      "branch": 164,
      "fn": "PoliceAndThief.mint",
      "offset": [
        4362,
        4387
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5945": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4352,
        4387
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5946": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4348,
        4446
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5947": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4348,
        4446
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1761"
    },
    "5950": {
      "branch": 164,
      "fn": "PoliceAndThief.mint",
      "offset": [
        4348,
        4446
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5951": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4407,
        4431
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 51,
      "value": "0x1761"
    },
    "5954": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4417,
        4423
      ],
      "op": "DUP6",
      "path": "22"
    },
    "5955": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4424,
        4425
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5956": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4417,
        4426
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5957": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4417,
        4426
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5958": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4417,
        4426
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5959": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4417,
        4426
      ],
      "op": "LT",
      "path": "22"
    },
    "5960": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4417,
        4426
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1753"
    },
    "5963": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4417,
        4426
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5964": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4417,
        4426
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1753"
    },
    "5967": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4417,
        4426
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30B7"
    },
    "5970": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        4417,
        4426
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5971": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4417,
        4426
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5972": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4417,
        4426
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5974": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4417,
        4426
      ],
      "op": "MUL",
      "path": "22"
    },
    "5975": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4417,
        4426
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5977": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4417,
        4426
      ],
      "op": "ADD",
      "path": "22"
    },
    "5978": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4417,
        4426
      ],
      "op": "ADD",
      "path": "22"
    },
    "5979": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4417,
        4426
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5980": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4428,
        4430
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5981": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4407,
        4416
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2455"
    },
    "5984": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        4407,
        4431
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5985": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4407,
        4431
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5986": {
      "op": "POP"
    },
    "5987": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4283,
        4286
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 52
    },
    "5988": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4283,
        4286
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x176C"
    },
    "5991": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4283,
        4286
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5992": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4283,
        4286
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3120"
    },
    "5995": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        4283,
        4286
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5996": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4283,
        4286
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5997": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4283,
        4286
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5998": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4283,
        4286
      ],
      "op": "POP",
      "path": "22"
    },
    "5999": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4283,
        4286
      ],
      "op": "POP",
      "path": "22"
    },
    "6000": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4244,
        4456
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x16DF"
    },
    "6003": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4244,
        4456
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6004": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4244,
        4456
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6005": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4244,
        4456
      ],
      "op": "POP",
      "path": "22"
    },
    "6006": {
      "branch": 165,
      "fn": "PoliceAndThief.mint",
      "offset": [
        4469,
        4474
      ],
      "op": "DUP6",
      "path": "22"
    },
    "6007": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4465,
        4525
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6008": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4465,
        4525
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17DE"
    },
    "6011": {
      "branch": 165,
      "fn": "PoliceAndThief.mint",
      "offset": [
        4465,
        4525
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6012": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4480
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 53,
      "value": "0x12"
    },
    "6014": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4480
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6021": {
      "op": "SHL"
    },
    "6022": {
      "op": "SUB"
    },
    "6023": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4480
      ],
      "op": "AND",
      "path": "22"
    },
    "6024": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4501
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x5B519142"
    },
    "6029": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6030": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4516,
        4524
      ],
      "op": "DUP7",
      "path": "22"
    },
    "6031": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6033": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6034": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6035": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "6040": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "AND",
      "path": "22"
    },
    "6041": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "6043": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "SHL",
      "path": "22"
    },
    "6044": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6045": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6046": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "6048": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "ADD",
      "path": "22"
    },
    "6049": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17AB"
    },
    "6052": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6053": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6054": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6055": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x313B"
    },
    "6058": {
      "fn": "PoliceAndThief.mint",
      "jump": "i",
      "offset": [
        4476,
        4525
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6059": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6060": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6062": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6064": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6065": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6066": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6067": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "SUB",
      "path": "22"
    },
    "6068": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6069": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6071": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "DUP8",
      "path": "22"
    },
    "6072": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6073": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "6074": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6075": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6076": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6077": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17C5"
    },
    "6080": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6081": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6083": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6084": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "REVERT",
      "path": "22"
    },
    "6085": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6086": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "POP",
      "path": "22"
    },
    "6087": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "GAS",
      "path": "22"
    },
    "6088": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "CALL",
      "path": "22"
    },
    "6089": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6090": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6091": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6092": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17D9"
    },
    "6095": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6096": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "6097": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6099": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6100": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "6101": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "6102": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6104": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "REVERT",
      "path": "22"
    },
    "6105": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6106": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "POP",
      "path": "22"
    },
    "6107": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "POP",
      "path": "22"
    },
    "6108": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "POP",
      "path": "22"
    },
    "6109": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4476,
        4525
      ],
      "op": "POP",
      "path": "22"
    },
    "6110": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        4465,
        4525
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6111": {
      "op": "POP"
    },
    "6112": {
      "op": "POP"
    },
    "6113": {
      "offset": [
        1943,
        1953
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x15"
    },
    "6115": {
      "offset": [
        1943,
        1961
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6116": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        1943,
        1961
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6117": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6121": {
      "op": "SHL"
    },
    "6122": {
      "op": "NOT"
    },
    "6123": {
      "offset": [
        1943,
        1961
      ],
      "op": "AND",
      "path": "22"
    },
    "6124": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        1943,
        1961
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6125": {
      "fn": "PoliceAndThief.mint",
      "offset": [
        1943,
        1961
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "6126": {
      "op": "POP"
    },
    "6127": {
      "op": "POP"
    },
    "6128": {
      "op": "POP"
    },
    "6129": {
      "op": "POP"
    },
    "6130": {
      "op": "POP"
    },
    "6131": {
      "fn": "PoliceAndThief.mint",
      "jump": "o",
      "offset": [
        2540,
        4532
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6132": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6133": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        1953
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6141": {
      "op": "SHL"
    },
    "6142": {
      "op": "SUB"
    },
    "6143": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1990,
        2009
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 54
    },
    "6144": {
      "branch": 175,
      "fn": "ERC721.balanceOf",
      "offset": [
        1990,
        2009
      ],
      "op": "AND",
      "path": "5"
    },
    "6145": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x185F"
    },
    "6148": {
      "branch": 175,
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6149": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6151": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6152": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6156": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6158": {
      "op": "SHL"
    },
    "6159": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6160": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6163": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6165": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6166": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "ADD",
      "path": "5"
    },
    "6167": {
      "op": "MSTORE"
    },
    "6168": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "6170": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6172": {
      "op": "DUP3"
    },
    "6173": {
      "op": "ADD"
    },
    "6174": {
      "op": "MSTORE"
    },
    "6175": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "6208": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6210": {
      "op": "DUP3"
    },
    "6211": {
      "op": "ADD"
    },
    "6212": {
      "op": "MSTORE"
    },
    "6213": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "6224": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6226": {
      "op": "SHL"
    },
    "6227": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6229": {
      "op": "DUP3"
    },
    "6230": {
      "op": "ADD"
    },
    "6231": {
      "op": "MSTORE"
    },
    "6232": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6234": {
      "op": "ADD"
    },
    "6235": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAC8"
    },
    "6238": {
      "op": "JUMP"
    },
    "6239": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6240": {
      "op": "POP"
    },
    "6241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6247": {
      "op": "SHL"
    },
    "6248": {
      "op": "SUB"
    },
    "6249": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "AND",
      "path": "5",
      "statement": 55
    },
    "6250": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6252": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6253": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6254": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6255": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2103
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "6257": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6259": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6260": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6262": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6263": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6264": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6265": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6266": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1834,
        2117
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6267": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10119,
        10292
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6268": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10224,
        10242
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1883"
    },
    "6271": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10224,
        10242
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2AD3"
    },
    "6274": {
      "fn": "PoliceAndThief.getTokenTraits",
      "jump": "i",
      "offset": [
        10224,
        10242
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6275": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10224,
        10242
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6276": {
      "op": "POP"
    },
    "6277": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10265,
        10285
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 56,
      "value": "0x0"
    },
    "6279": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10265,
        10285
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6280": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10265,
        10285
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6281": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10265,
        10285
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6282": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10265,
        10276
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xF"
    },
    "6284": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10265,
        10285
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6286": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10265,
        10285
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6287": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10265,
        10285
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6288": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10265,
        10285
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6289": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10265,
        10285
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6291": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10265,
        10285
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6292": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10265,
        10285
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6293": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10265,
        10285
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6294": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10265,
        10285
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "6295": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6296": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6297": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x120"
    },
    "6300": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6301": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "ADD",
      "path": "22"
    },
    "6302": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP5",
      "path": "22"
    },
    "6303": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6304": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6305": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6306": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "6308": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6309": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6310": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "AND",
      "path": "22"
    },
    "6311": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6312": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6313": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6314": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6315": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "6318": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6319": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6320": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DIV",
      "path": "22"
    },
    "6321": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6322": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "AND",
      "path": "22"
    },
    "6323": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "6324": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP5",
      "path": "22"
    },
    "6325": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "ADD",
      "path": "22"
    },
    "6326": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "6327": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6328": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "6329": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6330": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "6334": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6335": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DIV",
      "path": "22"
    },
    "6336": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6337": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "AND",
      "path": "22"
    },
    "6338": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "6339": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6340": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "ADD",
      "path": "22"
    },
    "6341": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "6342": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6343": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "6344": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6345": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x1000000"
    },
    "6350": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6351": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DIV",
      "path": "22"
    },
    "6352": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP5",
      "path": "22"
    },
    "6353": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "AND",
      "path": "22"
    },
    "6354": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "6356": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6357": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "ADD",
      "path": "22"
    },
    "6358": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6359": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "PUSH5",
      "path": "22",
      "value": "0x100000000"
    },
    "6365": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6366": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DIV",
      "path": "22"
    },
    "6367": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP5",
      "path": "22"
    },
    "6368": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "AND",
      "path": "22"
    },
    "6369": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "6371": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6372": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "ADD",
      "path": "22"
    },
    "6373": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6374": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "PUSH6",
      "path": "22",
      "value": "0x10000000000"
    },
    "6381": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6382": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DIV",
      "path": "22"
    },
    "6383": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP5",
      "path": "22"
    },
    "6384": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "AND",
      "path": "22"
    },
    "6385": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA0"
    },
    "6387": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6388": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "ADD",
      "path": "22"
    },
    "6389": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6392": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "6394": {
      "op": "SHL"
    },
    "6395": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6396": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DIV",
      "path": "22"
    },
    "6397": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP5",
      "path": "22"
    },
    "6398": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "AND",
      "path": "22"
    },
    "6399": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC0"
    },
    "6401": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6402": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "ADD",
      "path": "22"
    },
    "6403": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6406": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "6408": {
      "op": "SHL"
    },
    "6409": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6410": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DIV",
      "path": "22"
    },
    "6411": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP5",
      "path": "22"
    },
    "6412": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "AND",
      "path": "22"
    },
    "6413": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "6415": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6416": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "ADD",
      "path": "22"
    },
    "6417": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6420": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6422": {
      "op": "SHL"
    },
    "6423": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6424": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DIV",
      "path": "22"
    },
    "6425": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6426": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6427": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "AND",
      "path": "22"
    },
    "6428": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6429": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6430": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "ADD",
      "path": "22"
    },
    "6431": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6432": {
      "fn": "PoliceAndThief.getTokenTraits",
      "offset": [
        10258,
        10285
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6433": {
      "fn": "PoliceAndThief.getTokenTraits",
      "jump": "o",
      "offset": [
        10119,
        10292
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6434": {
      "fn": "ERC721.symbol",
      "offset": [
        2711,
        2813
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6435": {
      "fn": "ERC721.symbol",
      "offset": [
        2767,
        2780
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "6437": {
      "fn": "ERC721.symbol",
      "offset": [
        2799,
        2806
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 57,
      "value": "0x1"
    },
    "6439": {
      "fn": "ERC721.symbol",
      "offset": [
        2792,
        2806
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6440": {
      "fn": "ERC721.symbol",
      "offset": [
        2792,
        2806
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6441": {
      "fn": "ERC721.symbol",
      "offset": [
        2792,
        2806
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9D0"
    },
    "6444": {
      "fn": "ERC721.symbol",
      "offset": [
        2792,
        2806
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6445": {
      "fn": "ERC721.symbol",
      "offset": [
        2792,
        2806
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F9D"
    },
    "6448": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2792,
        2806
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6456": {
      "op": "SHL"
    },
    "6457": {
      "op": "SUB"
    },
    "6458": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4674,
        4698
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 58
    },
    "6459": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4674,
        4698
      ],
      "op": "AND",
      "path": "5"
    },
    "6460": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6461": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4674,
        4698
      ],
      "op": "EQ",
      "path": "5"
    },
    "6462": {
      "branch": 176,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4674,
        4698
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6463": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x198A"
    },
    "6466": {
      "branch": 176,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6467": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6469": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6470": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6474": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6476": {
      "op": "SHL"
    },
    "6477": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6478": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6481": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6483": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6484": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "ADD",
      "path": "5"
    },
    "6485": {
      "op": "MSTORE"
    },
    "6486": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6488": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6490": {
      "op": "DUP3"
    },
    "6491": {
      "op": "ADD"
    },
    "6492": {
      "op": "MSTORE"
    },
    "6493": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "6526": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6528": {
      "op": "DUP3"
    },
    "6529": {
      "op": "ADD"
    },
    "6530": {
      "op": "MSTORE"
    },
    "6531": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6533": {
      "op": "ADD"
    },
    "6534": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAC8"
    },
    "6537": {
      "op": "JUMP"
    },
    "6538": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6539": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6540": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 59,
      "value": "0x0"
    },
    "6542": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6543": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6544": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6545": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "6547": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6549": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6550": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6551": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6552": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6554": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6555": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6556": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6563": {
      "op": "SHL"
    },
    "6564": {
      "op": "SUB"
    },
    "6565": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6566": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "AND",
      "path": "5"
    },
    "6567": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6568": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6569": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6570": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6571": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6572": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6573": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6574": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6575": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6576": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6577": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6578": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6579": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6581": {
      "op": "NOT"
    },
    "6582": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "AND",
      "path": "5"
    },
    "6583": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "DUP7",
      "path": "5"
    },
    "6584": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6585": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6586": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6587": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6588": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "OR",
      "path": "5"
    },
    "6589": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6590": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6591": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "6592": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 60
    },
    "6593": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6594": {
      "op": "SWAP1"
    },
    "6595": {
      "op": "DUP2"
    },
    "6596": {
      "op": "MSTORE"
    },
    "6597": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6598": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6599": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6600": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "6633": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6634": {
      "op": "ADD"
    },
    "6635": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6637": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6638": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6639": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6640": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "SUB",
      "path": "5"
    },
    "6641": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6642": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "LOG3",
      "path": "5"
    },
    "6643": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "POP",
      "path": "5"
    },
    "6644": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "POP",
      "path": "5"
    },
    "6645": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4544,
        4862
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6646": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        11792,
        11882
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6647": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "6649": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6656": {
      "op": "SHL"
    },
    "6657": {
      "op": "SUB"
    },
    "6658": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "AND",
      "path": "20"
    },
    "6659": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6660": {
      "offset": [
        1200,
        1223
      ],
      "op": "EQ",
      "path": "20"
    },
    "6661": {
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A20"
    },
    "6664": {
      "offset": [
        1192,
        1260
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6665": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6667": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6668": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6672": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6674": {
      "op": "SHL"
    },
    "6675": {
      "offset": [
        1192,
        1260
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6676": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6677": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6679": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "ADD",
      "path": "20"
    },
    "6680": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAC8"
    },
    "6683": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6684": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2FD2"
    },
    "6687": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1192,
        1260
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6688": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6689": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        11856,
        11866
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 61,
      "value": "0xB"
    },
    "6691": {
      "fn": "PoliceAndThief.changePrice",
      "offset": [
        11856,
        11875
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "6692": {
      "fn": "PoliceAndThief.changePrice",
      "jump": "o",
      "offset": [
        11792,
        11882
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6693": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6694": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6053,
        6094
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 62,
      "value": "0x1A2F"
    },
    "6697": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6698": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6086,
        6093
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6699": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6053,
        6071
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1EAF"
    },
    "6702": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        6053,
        6094
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6703": {
      "branch": 177,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6053,
        6094
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6704": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A4B"
    },
    "6707": {
      "branch": 177,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6708": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6710": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6711": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6715": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6717": {
      "op": "SHL"
    },
    "6718": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6719": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6720": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6722": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "ADD",
      "path": "5"
    },
    "6723": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAC8"
    },
    "6726": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6727": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3007"
    },
    "6730": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        6032,
        6169
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6731": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6732": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6179,
        6210
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 63,
      "value": "0x1A56"
    },
    "6735": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6192,
        6196
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6736": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6198,
        6200
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6737": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6202,
        6209
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6738": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6179,
        6191
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCBC"
    },
    "6741": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        6179,
        6210
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6742": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6179,
        6210
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6743": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "POP",
      "path": "5"
    },
    "6744": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "POP",
      "path": "5"
    },
    "6745": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "POP",
      "path": "5"
    },
    "6746": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "POP",
      "path": "5"
    },
    "6747": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5871,
        6217
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6748": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11502,
        11786
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6749": {
      "fn": "ERC721._exists",
      "offset": [
        7788,
        7792
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6751": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6752": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6753": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6754": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7818
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6756": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6758": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6759": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6761": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6762": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6763": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6764": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11599,
        11612
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "6766": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11599,
        11612
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6771": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6773": {
      "op": "SHL"
    },
    "6774": {
      "op": "SUB"
    },
    "6775": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "AND",
      "path": "5"
    },
    "6776": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11628,
        11738
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 64,
      "value": "0x1ADB"
    },
    "6779": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11628,
        11738
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6780": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11628,
        11738
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6782": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11628,
        11738
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6783": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6787": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6789": {
      "op": "SHL"
    },
    "6790": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11628,
        11738
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6791": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11628,
        11738
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6794": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11628,
        11738
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "6796": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11628,
        11738
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6797": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11628,
        11738
      ],
      "op": "ADD",
      "path": "22"
    },
    "6798": {
      "op": "MSTORE"
    },
    "6799": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "6801": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6803": {
      "op": "DUP3"
    },
    "6804": {
      "op": "ADD"
    },
    "6805": {
      "op": "MSTORE"
    },
    "6806": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "6839": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6841": {
      "op": "DUP3"
    },
    "6842": {
      "op": "ADD"
    },
    "6843": {
      "op": "MSTORE"
    },
    "6844": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "6860": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "6862": {
      "op": "SHL"
    },
    "6863": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6865": {
      "op": "DUP3"
    },
    "6866": {
      "op": "ADD"
    },
    "6867": {
      "op": "MSTORE"
    },
    "6868": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6870": {
      "op": "ADD"
    },
    "6871": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11628,
        11738
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAC8"
    },
    "6874": {
      "op": "JUMP"
    },
    "6875": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11628,
        11738
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6876": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11761
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 65,
      "value": "0x14"
    },
    "6878": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11761
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6879": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6881": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6882": {
      "op": "PUSH4",
      "value": "0xC87B56DD"
    },
    "6887": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6889": {
      "op": "SHL"
    },
    "6890": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6891": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6892": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "6894": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6895": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "ADD",
      "path": "22"
    },
    "6896": {
      "op": "DUP5"
    },
    "6897": {
      "op": "SWAP1"
    },
    "6898": {
      "op": "MSTORE"
    },
    "6899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6905": {
      "op": "SHL"
    },
    "6906": {
      "op": "SUB"
    },
    "6907": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11761
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6908": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11761
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6909": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11761
      ],
      "op": "AND",
      "path": "22"
    },
    "6910": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11761
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6911": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11770
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC87B56DD"
    },
    "6916": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11770
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6917": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6919": {
      "op": "ADD"
    },
    "6920": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6922": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6924": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6925": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6926": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6927": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "SUB",
      "path": "22"
    },
    "6928": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6929": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "DUP7",
      "path": "22"
    },
    "6930": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "GAS",
      "path": "22"
    },
    "6931": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "6932": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6933": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6934": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6935": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B24"
    },
    "6938": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6939": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "6940": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6942": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6943": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "6944": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "6945": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6947": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "REVERT",
      "path": "22"
    },
    "6948": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6949": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "POP",
      "path": "22"
    },
    "6950": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "POP",
      "path": "22"
    },
    "6951": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "POP",
      "path": "22"
    },
    "6952": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "POP",
      "path": "22"
    },
    "6953": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6955": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6956": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "6957": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6959": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6960": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "6961": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "6963": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "6964": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6965": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6966": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "ADD",
      "path": "22"
    },
    "6967": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6969": {
      "op": "NOT"
    },
    "6970": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "AND",
      "path": "22"
    },
    "6971": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6972": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "ADD",
      "path": "22"
    },
    "6973": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6975": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6976": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9BB"
    },
    "6979": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6980": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6981": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6982": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "ADD",
      "path": "22"
    },
    "6983": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6984": {
      "fn": "PoliceAndThief.tokenURI",
      "offset": [
        11755,
        11779
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3195"
    },
    "6987": {
      "fn": "PoliceAndThief.tokenURI",
      "jump": "i",
      "offset": [
        11755,
        11779
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6988": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2293,
        2387
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6989": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "6991": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6998": {
      "op": "SHL"
    },
    "6999": {
      "op": "SUB"
    },
    "7000": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "AND",
      "path": "20"
    },
    "7001": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7002": {
      "offset": [
        1200,
        1223
      ],
      "op": "EQ",
      "path": "20"
    },
    "7003": {
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B76"
    },
    "7006": {
      "offset": [
        1192,
        1260
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7007": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7009": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7010": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7014": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7016": {
      "op": "SHL"
    },
    "7017": {
      "offset": [
        1192,
        1260
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7018": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7019": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7021": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "ADD",
      "path": "20"
    },
    "7022": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAC8"
    },
    "7025": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7026": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2FD2"
    },
    "7029": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1192,
        1260
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7030": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7031": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2360,
        2372
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 66,
      "value": "0x15"
    },
    "7033": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2360,
        2380
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7034": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2360,
        2380
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "7035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7041": {
      "op": "SHL"
    },
    "7042": {
      "op": "SUB"
    },
    "7043": {
      "op": "NOT"
    },
    "7044": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2360,
        2380
      ],
      "op": "AND",
      "path": "22"
    },
    "7045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7051": {
      "op": "SHL"
    },
    "7052": {
      "op": "SUB"
    },
    "7053": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2360,
        2380
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "7054": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2360,
        2380
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7055": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2360,
        2380
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "7056": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2360,
        2380
      ],
      "op": "AND",
      "path": "22"
    },
    "7057": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2360,
        2380
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7058": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2360,
        2380
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7059": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2360,
        2380
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7060": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2360,
        2380
      ],
      "op": "OR",
      "path": "22"
    },
    "7061": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2360,
        2380
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7062": {
      "fn": "PoliceAndThief.setRandomSource",
      "offset": [
        2360,
        2380
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "7063": {
      "fn": "PoliceAndThief.setRandomSource",
      "jump": "o",
      "offset": [
        2293,
        2387
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7064": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1427,
        1650
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7065": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "7067": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7072": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7074": {
      "op": "SHL"
    },
    "7075": {
      "op": "SUB"
    },
    "7076": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "AND",
      "path": "20"
    },
    "7077": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7078": {
      "offset": [
        1200,
        1223
      ],
      "op": "EQ",
      "path": "20"
    },
    "7079": {
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BC2"
    },
    "7082": {
      "offset": [
        1192,
        1260
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7083": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7085": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7086": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7090": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7092": {
      "op": "SHL"
    },
    "7093": {
      "offset": [
        1192,
        1260
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7094": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7095": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7097": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "ADD",
      "path": "20"
    },
    "7098": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAC8"
    },
    "7101": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7102": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2FD2"
    },
    "7105": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1192,
        1260
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7106": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7113": {
      "op": "SHL"
    },
    "7114": {
      "op": "SUB"
    },
    "7115": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1528,
        1550
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 67
    },
    "7116": {
      "branch": 188,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1528,
        1550
      ],
      "op": "AND",
      "path": "20"
    },
    "7117": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1507,
        1614
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C27"
    },
    "7120": {
      "branch": 188,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1507,
        1614
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7121": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1507,
        1614
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7123": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1507,
        1614
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7124": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7128": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7130": {
      "op": "SHL"
    },
    "7131": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1507,
        1614
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7132": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1507,
        1614
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7133": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7135": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1507,
        1614
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7137": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1507,
        1614
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7138": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1507,
        1614
      ],
      "op": "ADD",
      "path": "20"
    },
    "7139": {
      "op": "MSTORE"
    },
    "7140": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7142": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7144": {
      "op": "DUP3"
    },
    "7145": {
      "op": "ADD"
    },
    "7146": {
      "op": "MSTORE"
    },
    "7147": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "7180": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7182": {
      "op": "DUP3"
    },
    "7183": {
      "op": "ADD"
    },
    "7184": {
      "op": "MSTORE"
    },
    "7185": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "7192": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7194": {
      "op": "SHL"
    },
    "7195": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7197": {
      "op": "DUP3"
    },
    "7198": {
      "op": "ADD"
    },
    "7199": {
      "op": "MSTORE"
    },
    "7200": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7202": {
      "op": "ADD"
    },
    "7203": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1507,
        1614
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAC8"
    },
    "7206": {
      "op": "JUMP"
    },
    "7207": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1507,
        1614
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7208": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1624,
        1643
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 68,
      "value": "0xC87"
    },
    "7211": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1634,
        1642
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7212": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1624,
        1633
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x246F"
    },
    "7215": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1624,
        1643
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7216": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11300,
        11477
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7217": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "7219": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7226": {
      "op": "SHL"
    },
    "7227": {
      "op": "SUB"
    },
    "7228": {
      "fn": "Ownable.owner",
      "offset": [
        1060,
        1066
      ],
      "op": "AND",
      "path": "20"
    },
    "7229": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7230": {
      "offset": [
        1200,
        1223
      ],
      "op": "EQ",
      "path": "20"
    },
    "7231": {
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C5A"
    },
    "7234": {
      "offset": [
        1192,
        1260
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7235": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7237": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7238": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7242": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7244": {
      "op": "SHL"
    },
    "7245": {
      "offset": [
        1192,
        1260
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7246": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7247": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7249": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "ADD",
      "path": "20"
    },
    "7250": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAC8"
    },
    "7253": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7254": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2FD2"
    },
    "7257": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1192,
        1260
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7258": {
      "fn": "Context._msgSender",
      "offset": [
        1192,
        1260
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7259": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11380,
        11389
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "7261": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11375,
        11471
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7262": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11399,
        11404
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7263": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11399,
        11411
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "7264": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11395,
        11396
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7265": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11395,
        11411
      ],
      "op": "LT",
      "path": "22"
    },
    "7266": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11375,
        11471
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "7267": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11375,
        11471
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1CC2"
    },
    "7270": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11375,
        11471
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "7271": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11456,
        11460
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 69,
      "value": "0x1"
    },
    "7273": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11443
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x16"
    },
    "7275": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11453
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "7277": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11449
      ],
      "op": "DUP5",
      "path": "22"
    },
    "7278": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11450,
        11451
      ],
      "op": "DUP5",
      "path": "22"
    },
    "7279": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11452
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7280": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11452
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "7281": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11452
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7282": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11452
      ],
      "op": "LT",
      "path": "22"
    },
    "7283": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11452
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C7E"
    },
    "7286": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11452
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "7287": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11452
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C7E"
    },
    "7290": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11452
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30B7"
    },
    "7293": {
      "fn": "PoliceAndThief.setWhitelist",
      "jump": "i",
      "offset": [
        11444,
        11452
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7294": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11452
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7295": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11452
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "7297": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11452
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7298": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11452
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7299": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11452
      ],
      "op": "MUL",
      "path": "22"
    },
    "7300": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11452
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7301": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11452
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7302": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11452
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7303": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11452
      ],
      "op": "ADD",
      "path": "22"
    },
    "7304": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11452
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7305": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11452
      ],
      "op": "ADD",
      "path": "22"
    },
    "7306": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11444,
        11452
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "7307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7313": {
      "op": "SHL"
    },
    "7314": {
      "op": "SUB"
    },
    "7315": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11453
      ],
      "op": "AND",
      "path": "22"
    },
    "7316": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11453
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7317": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11453
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "7318": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11453
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7319": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11453
      ],
      "op": "ADD",
      "path": "22"
    },
    "7320": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11453
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7321": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11453
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7322": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11453
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7323": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11453
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "7324": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11453
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "7326": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11453
      ],
      "op": "ADD",
      "path": "22"
    },
    "7327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7329": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11453
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "7330": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11460
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7331": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11460
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "7332": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7334": {
      "op": "NOT"
    },
    "7335": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11460
      ],
      "op": "AND",
      "path": "22"
    },
    "7336": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11460
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7337": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11460
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "7338": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11460
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "7339": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11460
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7340": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11460
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7341": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11460
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7342": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11460
      ],
      "op": "OR",
      "path": "22"
    },
    "7343": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11460
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7344": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11432,
        11460
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "7345": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11413,
        11416
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 70
    },
    "7346": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11413,
        11416
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1CBA"
    },
    "7349": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11413,
        11416
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7350": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11413,
        11416
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3120"
    },
    "7353": {
      "fn": "PoliceAndThief.setWhitelist",
      "jump": "i",
      "offset": [
        11413,
        11416
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7354": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11413,
        11416
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7355": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11413,
        11416
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7356": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11413,
        11416
      ],
      "op": "POP",
      "path": "22"
    },
    "7357": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11413,
        11416
      ],
      "op": "POP",
      "path": "22"
    },
    "7358": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11375,
        11471
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C5D"
    },
    "7361": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11375,
        11471
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7362": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11375,
        11471
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7363": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11375,
        11471
      ],
      "op": "POP",
      "path": "22"
    },
    "7364": {
      "fn": "PoliceAndThief.setWhitelist",
      "offset": [
        11300,
        11477
      ],
      "op": "POP",
      "path": "22"
    },
    "7365": {
      "fn": "PoliceAndThief.setWhitelist",
      "jump": "o",
      "offset": [
        11300,
        11477
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7366": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7367": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1573,
        1577
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7373": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7375": {
      "op": "SHL"
    },
    "7376": {
      "op": "SUB"
    },
    "7377": {
      "op": "NOT"
    },
    "7378": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1612,
        1652
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 71
    },
    "7379": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1612,
        1652
      ],
      "op": "AND",
      "path": "5"
    },
    "7380": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "7385": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7387": {
      "op": "SHL"
    },
    "7388": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1612,
        1652
      ],
      "op": "EQ",
      "path": "5"
    },
    "7389": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1612,
        1652
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7390": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1612,
        1716
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CF7"
    },
    "7393": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1612,
        1716
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7394": {
      "op": "POP"
    },
    "7395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7399": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7401": {
      "op": "SHL"
    },
    "7402": {
      "op": "SUB"
    },
    "7403": {
      "op": "NOT"
    },
    "7404": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1668,
        1716
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7405": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1668,
        1716
      ],
      "op": "AND",
      "path": "5"
    },
    "7406": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "7411": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7413": {
      "op": "SHL"
    },
    "7414": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1668,
        1716
      ],
      "op": "EQ",
      "path": "5"
    },
    "7415": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1612,
        1716
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7416": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1612,
        1768
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7417": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1612,
        1768
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9BB"
    },
    "7420": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1612,
        1768
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7421": {
      "op": "POP"
    },
    "7422": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "7427": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7429": {
      "op": "SHL"
    },
    "7430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7434": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7436": {
      "op": "SHL"
    },
    "7437": {
      "op": "SUB"
    },
    "7438": {
      "op": "NOT"
    },
    "7439": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        955
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 72
    },
    "7440": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        955
      ],
      "op": "AND",
      "path": "3"
    },
    "7441": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        955
      ],
      "op": "EQ",
      "path": "3"
    },
    "7442": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1732,
        1768
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9BB"
    },
    "7445": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        763,
        962
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7446": {
      "fn": "ERC721._approve",
      "offset": [
        11541,
        11712
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7447": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 73,
      "value": "0x0"
    },
    "7449": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7450": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7451": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7452": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11630
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7454": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7456": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7457": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7459": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7460": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7461": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7462": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7469": {
      "op": "SHL"
    },
    "7470": {
      "op": "SUB"
    },
    "7471": {
      "op": "NOT"
    },
    "7472": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "AND",
      "path": "5"
    },
    "7473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7477": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7479": {
      "op": "SHL"
    },
    "7480": {
      "op": "SUB"
    },
    "7481": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7482": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "AND",
      "path": "5"
    },
    "7483": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7484": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7485": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "OR",
      "path": "5"
    },
    "7486": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7487": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7488": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7489": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7490": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7491": {
      "fn": "ERC721._approve",
      "offset": [
        11668,
        11691
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 74,
      "value": "0x1D4B"
    },
    "7494": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7495": {
      "fn": "ERC721._approve",
      "offset": [
        11668,
        11682
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1013"
    },
    "7498": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11668,
        11691
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7499": {
      "fn": "ERC721._approve",
      "offset": [
        11668,
        11691
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7504": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7506": {
      "op": "SHL"
    },
    "7507": {
      "op": "SUB"
    },
    "7508": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "AND",
      "path": "5"
    },
    "7509": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "7542": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7544": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7545": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7547": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7548": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7549": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7550": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "SUB",
      "path": "5"
    },
    "7551": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7552": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "LOG4",
      "path": "5"
    },
    "7553": {
      "fn": "ERC721._approve",
      "offset": [
        11541,
        11712
      ],
      "op": "POP",
      "path": "5"
    },
    "7554": {
      "fn": "ERC721._approve",
      "offset": [
        11541,
        11712
      ],
      "op": "POP",
      "path": "5"
    },
    "7555": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11541,
        11712
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7556": {
      "fn": "Pauseable._pause",
      "offset": [
        1800,
        1915
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7557": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xA"
    },
    "7559": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "7560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7564": {
      "op": "SHL"
    },
    "7565": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7566": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "DIV",
      "path": "21"
    },
    "7567": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "7569": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "AND",
      "path": "21"
    },
    "7570": {
      "offset": [
        1346,
        1355
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "7571": {
      "offset": [
        1338,
        1377
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1DD2"
    },
    "7574": {
      "offset": [
        1338,
        1377
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "7575": {
      "fn": "Pauseable.paused",
      "offset": [
        1338,
        1377
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "7577": {
      "fn": "Pauseable.paused",
      "offset": [
        1338,
        1377
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "7578": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7582": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7584": {
      "op": "SHL"
    },
    "7585": {
      "offset": [
        1338,
        1377
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7586": {
      "fn": "Pauseable.paused",
      "offset": [
        1338,
        1377
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "7587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7589": {
      "offset": [
        1338,
        1377
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "7591": {
      "fn": "Pauseable.paused",
      "offset": [
        1338,
        1377
      ],
      "op": "DUP3",
      "path": "21"
    },
    "7592": {
      "fn": "Pauseable.paused",
      "offset": [
        1338,
        1377
      ],
      "op": "ADD",
      "path": "21"
    },
    "7593": {
      "op": "MSTORE"
    },
    "7594": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7596": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7598": {
      "op": "DUP3"
    },
    "7599": {
      "op": "ADD"
    },
    "7600": {
      "op": "MSTORE"
    },
    "7601": {
      "op": "PUSH17",
      "value": "0x14185D5CD958589B194E881C185D5CD959"
    },
    "7619": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "7621": {
      "op": "SHL"
    },
    "7622": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7624": {
      "op": "DUP3"
    },
    "7625": {
      "op": "ADD"
    },
    "7626": {
      "op": "MSTORE"
    },
    "7627": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7629": {
      "op": "ADD"
    },
    "7630": {
      "offset": [
        1338,
        1377
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xAC8"
    },
    "7633": {
      "op": "JUMP"
    },
    "7634": {
      "offset": [
        1338,
        1377
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7635": {
      "fn": "Pauseable._pause",
      "offset": [
        1859,
        1866
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 75,
      "value": "0xA"
    },
    "7637": {
      "fn": "Pauseable._pause",
      "offset": [
        1859,
        1873
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7638": {
      "fn": "Pauseable._pause",
      "offset": [
        1859,
        1873
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "7639": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7643": {
      "op": "SHL"
    },
    "7644": {
      "op": "NOT"
    },
    "7645": {
      "fn": "Pauseable._pause",
      "offset": [
        1859,
        1873
      ],
      "op": "AND",
      "path": "21"
    },
    "7646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7650": {
      "op": "SHL"
    },
    "7651": {
      "fn": "Pauseable._pause",
      "offset": [
        1859,
        1873
      ],
      "op": "OR",
      "path": "21"
    },
    "7652": {
      "fn": "Pauseable._pause",
      "offset": [
        1859,
        1873
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7653": {
      "fn": "Pauseable._pause",
      "offset": [
        1859,
        1873
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "7654": {
      "fn": "Pauseable._pause",
      "offset": [
        1888,
        1908
      ],
      "op": "PUSH32",
      "path": "21",
      "statement": 76,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "7687": {
      "fn": "Pauseable._pause",
      "offset": [
        1895,
        1907
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1E0D"
    },
    "7690": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7691": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7692": {
      "fn": "Context._msgSender",
      "offset": [
        587,
        683
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7693": {
      "fn": "Pauseable._pause",
      "offset": [
        1895,
        1907
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7694": {
      "fn": "Pauseable._pause",
      "offset": [
        1888,
        1908
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "7696": {
      "fn": "Pauseable._pause",
      "offset": [
        1888,
        1908
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "7697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7703": {
      "op": "SHL"
    },
    "7704": {
      "op": "SUB"
    },
    "7705": {
      "op": "SWAP1"
    },
    "7706": {
      "op": "SWAP2"
    },
    "7707": {
      "op": "AND"
    },
    "7708": {
      "op": "DUP2"
    },
    "7709": {
      "op": "MSTORE"
    },
    "7710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7712": {
      "op": "ADD"
    },
    "7713": {
      "fn": "Pauseable._pause",
      "offset": [
        1888,
        1908
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "7715": {
      "fn": "Pauseable._pause",
      "offset": [
        1888,
        1908
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "7716": {
      "fn": "Pauseable._pause",
      "offset": [
        1888,
        1908
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7717": {
      "fn": "Pauseable._pause",
      "offset": [
        1888,
        1908
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7718": {
      "fn": "Pauseable._pause",
      "offset": [
        1888,
        1908
      ],
      "op": "SUB",
      "path": "21"
    },
    "7719": {
      "fn": "Pauseable._pause",
      "offset": [
        1888,
        1908
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7720": {
      "fn": "Pauseable._pause",
      "offset": [
        1888,
        1908
      ],
      "op": "LOG1",
      "path": "21"
    },
    "7721": {
      "fn": "Pauseable._pause",
      "jump": "o",
      "offset": [
        1800,
        1915
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7722": {
      "fn": "Pauseable._unpause",
      "offset": [
        2047,
        2164
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7723": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xA"
    },
    "7725": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "7726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7730": {
      "op": "SHL"
    },
    "7731": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7732": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "DIV",
      "path": "21"
    },
    "7733": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "7735": {
      "fn": "Pauseable.paused",
      "offset": [
        1103,
        1110
      ],
      "op": "AND",
      "path": "21"
    },
    "7736": {
      "offset": [
        1605,
        1647
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1E7B"
    },
    "7739": {
      "fn": "Pauseable.paused",
      "offset": [
        1605,
        1647
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "7740": {
      "fn": "Pauseable.paused",
      "offset": [
        1605,
        1647
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "7742": {
      "fn": "Pauseable.paused",
      "offset": [
        1605,
        1647
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "7743": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7747": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7749": {
      "op": "SHL"
    },
    "7750": {
      "offset": [
        1605,
        1647
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7751": {
      "fn": "Pauseable.paused",
      "offset": [
        1605,
        1647
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "7752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7754": {
      "offset": [
        1605,
        1647
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "7756": {
      "fn": "Pauseable.paused",
      "offset": [
        1605,
        1647
      ],
      "op": "DUP3",
      "path": "21"
    },
    "7757": {
      "fn": "Pauseable.paused",
      "offset": [
        1605,
        1647
      ],
      "op": "ADD",
      "path": "21"
    },
    "7758": {
      "op": "MSTORE"
    },
    "7759": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "7761": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7763": {
      "op": "DUP3"
    },
    "7764": {
      "op": "ADD"
    },
    "7765": {
      "op": "MSTORE"
    },
    "7766": {
      "op": "PUSH21",
      "value": "0x14185D5CD958589B194E881B9BDD081C185D5CD959"
    },
    "7788": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "7790": {
      "op": "SHL"
    },
    "7791": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7793": {
      "op": "DUP3"
    },
    "7794": {
      "op": "ADD"
    },
    "7795": {
      "op": "MSTORE"
    },
    "7796": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7798": {
      "op": "ADD"
    },
    "7799": {
      "offset": [
        1605,
        1647
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xAC8"
    },
    "7802": {
      "op": "JUMP"
    },
    "7803": {
      "offset": [
        1605,
        1647
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7804": {
      "fn": "Pauseable._unpause",
      "offset": [
        2105,
        2112
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 77,
      "value": "0xA"
    },
    "7806": {
      "fn": "Pauseable._unpause",
      "offset": [
        2105,
        2120
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7807": {
      "fn": "Pauseable._unpause",
      "offset": [
        2105,
        2120
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "7808": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7810": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7812": {
      "op": "SHL"
    },
    "7813": {
      "op": "NOT"
    },
    "7814": {
      "fn": "Pauseable._unpause",
      "offset": [
        2105,
        2120
      ],
      "op": "AND",
      "path": "21"
    },
    "7815": {
      "fn": "Pauseable._unpause",
      "offset": [
        2105,
        2120
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7816": {
      "fn": "Pauseable._unpause",
      "offset": [
        2105,
        2120
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "7817": {
      "fn": "Pauseable._unpause",
      "offset": [
        2135,
        2157
      ],
      "op": "PUSH32",
      "path": "21",
      "statement": 78,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "7850": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7851": {
      "fn": "Pauseable._unpause",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1E0D"
    },
    "7854": {
      "fn": "Context._msgSender",
      "offset": [
        587,
        683
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7855": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8006,
        8444
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7856": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8131,
        8135
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7858": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7859": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7860": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7861": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7818
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "7863": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7865": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7866": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7868": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7869": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7870": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7877": {
      "op": "SHL"
    },
    "7878": {
      "op": "SUB"
    },
    "7879": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "AND",
      "path": "5"
    },
    "7880": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 79,
      "value": "0x1F28"
    },
    "7883": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7884": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7886": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7887": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7891": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7893": {
      "op": "SHL"
    },
    "7894": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7895": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7898": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7900": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7901": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "ADD",
      "path": "5"
    },
    "7902": {
      "op": "MSTORE"
    },
    "7903": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "7905": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7907": {
      "op": "DUP3"
    },
    "7908": {
      "op": "ADD"
    },
    "7909": {
      "op": "MSTORE"
    },
    "7910": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "7943": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7945": {
      "op": "DUP3"
    },
    "7946": {
      "op": "ADD"
    },
    "7947": {
      "op": "MSTORE"
    },
    "7948": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "7961": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "7963": {
      "op": "SHL"
    },
    "7964": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7966": {
      "op": "DUP3"
    },
    "7967": {
      "op": "ADD"
    },
    "7968": {
      "op": "MSTORE"
    },
    "7969": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7971": {
      "op": "ADD"
    },
    "7972": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAC8"
    },
    "7975": {
      "op": "JUMP"
    },
    "7976": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7977": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8268,
        8281
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7979": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8284,
        8307
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F33"
    },
    "7982": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8299,
        8306
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7983": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8284,
        8298
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1013"
    },
    "7986": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        8284,
        8307
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7987": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8284,
        8307
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7988": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8268,
        8307
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7989": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8268,
        8307
      ],
      "op": "POP",
      "path": "5"
    },
    "7990": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8336,
        8341
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 80
    },
    "7991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7997": {
      "op": "SHL"
    },
    "7998": {
      "op": "SUB"
    },
    "7999": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8341
      ],
      "op": "AND",
      "path": "5"
    },
    "8000": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8332
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8007": {
      "op": "SHL"
    },
    "8008": {
      "op": "SUB"
    },
    "8009": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8341
      ],
      "op": "AND",
      "path": "5"
    },
    "8010": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8341
      ],
      "op": "EQ",
      "path": "5"
    },
    "8011": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8388
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8012": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8388
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F6E"
    },
    "8015": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8388
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8016": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8388
      ],
      "op": "POP",
      "path": "5"
    },
    "8017": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8381,
        8388
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8024": {
      "op": "SHL"
    },
    "8025": {
      "op": "SUB"
    },
    "8026": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8357,
        8388
      ],
      "op": "AND",
      "path": "5"
    },
    "8027": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8357,
        8377
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F63"
    },
    "8030": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8369,
        8376
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8031": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8357,
        8368
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA53"
    },
    "8034": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        8357,
        8377
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8035": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8357,
        8377
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8042": {
      "op": "SHL"
    },
    "8043": {
      "op": "SUB"
    },
    "8044": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8357,
        8388
      ],
      "op": "AND",
      "path": "5"
    },
    "8045": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8357,
        8388
      ],
      "op": "EQ",
      "path": "5"
    },
    "8046": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8388
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8047": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8436
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8048": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8436
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F9E"
    },
    "8051": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8436
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8052": {
      "op": "POP"
    },
    "8053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8059": {
      "op": "SHL"
    },
    "8060": {
      "op": "SUB"
    },
    "8061": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8062": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8063": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "AND",
      "path": "5"
    },
    "8064": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5065,
        5069
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8066": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8067": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8068": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8069": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5110
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "8071": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8073": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8074": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8075": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8076": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8078": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8079": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8080": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8081": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "8082": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "DUP9",
      "path": "5"
    },
    "8083": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "AND",
      "path": "5"
    },
    "8084": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8085": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8086": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8087": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8088": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8089": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8090": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8091": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "8093": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "AND",
      "path": "5"
    },
    "8094": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8404,
        8436
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8095": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8317,
        8437
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "8096": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8006,
        8444
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "8097": {
      "op": "POP"
    },
    "8098": {
      "op": "POP"
    },
    "8099": {
      "op": "POP"
    },
    "8100": {
      "op": "POP"
    },
    "8101": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        8006,
        8444
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8102": {
      "fn": "ERC721._transfer",
      "offset": [
        10836,
        11430
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8103": {
      "fn": "ERC721._transfer",
      "offset": [
        11003,
        11007
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 81
    },
    "8104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8110": {
      "op": "SHL"
    },
    "8111": {
      "op": "SUB"
    },
    "8112": {
      "fn": "ERC721._transfer",
      "offset": [
        10976,
        11007
      ],
      "op": "AND",
      "path": "5"
    },
    "8113": {
      "fn": "ERC721._transfer",
      "offset": [
        10976,
        10999
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1FB9"
    },
    "8116": {
      "fn": "ERC721._transfer",
      "offset": [
        10991,
        10998
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8117": {
      "fn": "ERC721._transfer",
      "offset": [
        10976,
        10990
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1013"
    },
    "8120": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10976,
        10999
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8121": {
      "fn": "ERC721._transfer",
      "offset": [
        10976,
        10999
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8126": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8128": {
      "op": "SHL"
    },
    "8129": {
      "op": "SUB"
    },
    "8130": {
      "fn": "ERC721._transfer",
      "offset": [
        10976,
        11007
      ],
      "op": "AND",
      "path": "5"
    },
    "8131": {
      "branch": 178,
      "fn": "ERC721._transfer",
      "offset": [
        10976,
        11007
      ],
      "op": "EQ",
      "path": "5"
    },
    "8132": {
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2021"
    },
    "8135": {
      "branch": 178,
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8136": {
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8138": {
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8139": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8143": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8145": {
      "op": "SHL"
    },
    "8146": {
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8147": {
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8150": {
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "8152": {
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8153": {
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "ADD",
      "path": "5"
    },
    "8154": {
      "op": "MSTORE"
    },
    "8155": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "8157": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8159": {
      "op": "DUP3"
    },
    "8160": {
      "op": "ADD"
    },
    "8161": {
      "op": "MSTORE"
    },
    "8162": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "8195": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8197": {
      "op": "DUP3"
    },
    "8198": {
      "op": "ADD"
    },
    "8199": {
      "op": "MSTORE"
    },
    "8200": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "8210": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "8212": {
      "op": "SHL"
    },
    "8213": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8215": {
      "op": "DUP3"
    },
    "8216": {
      "op": "ADD"
    },
    "8217": {
      "op": "MSTORE"
    },
    "8218": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8220": {
      "op": "ADD"
    },
    "8221": {
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAC8"
    },
    "8224": {
      "op": "JUMP"
    },
    "8225": {
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8232": {
      "op": "SHL"
    },
    "8233": {
      "op": "SUB"
    },
    "8234": {
      "fn": "ERC721._transfer",
      "offset": [
        11092,
        11108
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 82
    },
    "8235": {
      "branch": 179,
      "fn": "ERC721._transfer",
      "offset": [
        11092,
        11108
      ],
      "op": "AND",
      "path": "5"
    },
    "8236": {
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2083"
    },
    "8239": {
      "branch": 179,
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8240": {
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8242": {
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8243": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8247": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8249": {
      "op": "SHL"
    },
    "8250": {
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8251": {
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8252": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8254": {
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "8256": {
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8257": {
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "ADD",
      "path": "5"
    },
    "8258": {
      "op": "MSTORE"
    },
    "8259": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8261": {
      "op": "DUP1"
    },
    "8262": {
      "op": "DUP3"
    },
    "8263": {
      "op": "ADD"
    },
    "8264": {
      "op": "MSTORE"
    },
    "8265": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "8298": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8300": {
      "op": "DUP3"
    },
    "8301": {
      "op": "ADD"
    },
    "8302": {
      "op": "MSTORE"
    },
    "8303": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "8308": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8310": {
      "op": "SHL"
    },
    "8311": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8313": {
      "op": "DUP3"
    },
    "8314": {
      "op": "ADD"
    },
    "8315": {
      "op": "MSTORE"
    },
    "8316": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8318": {
      "op": "ADD"
    },
    "8319": {
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAC8"
    },
    "8322": {
      "op": "JUMP"
    },
    "8323": {
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8324": {
      "fn": "ERC721._transfer",
      "offset": [
        11160,
        11199
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 83,
      "value": "0x208E"
    },
    "8327": {
      "fn": "ERC721._transfer",
      "offset": [
        11181,
        11185
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8328": {
      "fn": "ERC721._transfer",
      "offset": [
        11187,
        11189
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8329": {
      "fn": "ERC721._transfer",
      "offset": [
        11191,
        11198
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8330": {
      "fn": "ERC721._transfer",
      "offset": [
        11160,
        11180
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x24C1"
    },
    "8333": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11160,
        11199
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8334": {
      "fn": "ERC721._transfer",
      "offset": [
        11160,
        11199
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8335": {
      "fn": "ERC721._transfer",
      "offset": [
        11261,
        11290
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 84,
      "value": "0x2099"
    },
    "8338": {
      "fn": "ERC721._transfer",
      "offset": [
        11278,
        11279
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8340": {
      "fn": "ERC721._transfer",
      "offset": [
        11282,
        11289
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8341": {
      "fn": "ERC721._transfer",
      "offset": [
        11261,
        11269
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D16"
    },
    "8344": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11261,
        11290
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8345": {
      "fn": "ERC721._transfer",
      "offset": [
        11261,
        11290
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8352": {
      "op": "SHL"
    },
    "8353": {
      "op": "SUB"
    },
    "8354": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 85
    },
    "8355": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "AND",
      "path": "5"
    },
    "8356": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8358": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8359": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8360": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8361": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11310
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "8363": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8365": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8366": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8368": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8369": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8370": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11321
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8371": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11321
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8372": {
      "fn": "ERC721._transfer",
      "offset": [
        11320,
        11321
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "8374": {
      "fn": "ERC721._transfer",
      "offset": [
        11320,
        11321
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8375": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8376": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11321
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20C2"
    },
    "8379": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11321
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8380": {
      "fn": "ERC721._transfer",
      "offset": [
        11320,
        11321
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8381": {
      "fn": "ERC721._transfer",
      "offset": [
        11320,
        11321
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8382": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11321
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x320C"
    },
    "8385": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11301,
        11321
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8386": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11321
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8387": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11321
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8388": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11321
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8389": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11321
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8390": {
      "op": "POP"
    },
    "8391": {
      "op": "POP"
    },
    "8392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8398": {
      "op": "SHL"
    },
    "8399": {
      "op": "SUB"
    },
    "8400": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 86
    },
    "8401": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "AND",
      "path": "5"
    },
    "8402": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8404": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8405": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8406": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8407": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11340
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "8409": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8411": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8412": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8414": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8415": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8416": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11349
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8417": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11349
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8418": {
      "fn": "ERC721._transfer",
      "offset": [
        11348,
        11349
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "8420": {
      "fn": "ERC721._transfer",
      "offset": [
        11348,
        11349
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8421": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8422": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11349
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20F0"
    },
    "8425": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11349
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8426": {
      "fn": "ERC721._transfer",
      "offset": [
        11348,
        11349
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8427": {
      "fn": "ERC721._transfer",
      "offset": [
        11348,
        11349
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8428": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11349
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30CD"
    },
    "8431": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11331,
        11349
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8432": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11349
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8433": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11349
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8434": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11349
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8435": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11349
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8436": {
      "op": "POP"
    },
    "8437": {
      "op": "POP"
    },
    "8438": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 87,
      "value": "0x0"
    },
    "8440": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8441": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8442": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8443": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11366
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "8445": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8447": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8448": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8450": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8451": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8452": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8453": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8454": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8461": {
      "op": "SHL"
    },
    "8462": {
      "op": "SUB"
    },
    "8463": {
      "op": "NOT"
    },
    "8464": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "AND",
      "path": "5"
    },
    "8465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8471": {
      "op": "SHL"
    },
    "8472": {
      "op": "SUB"
    },
    "8473": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "DUP7",
      "path": "5"
    },
    "8474": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8475": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "AND",
      "path": "5"
    },
    "8476": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8477": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8478": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "OR",
      "path": "5"
    },
    "8479": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8480": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8481": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8482": {
      "fn": "ERC721._transfer",
      "offset": [
        11396,
        11423
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 88
    },
    "8483": {
      "fn": "ERC721._transfer",
      "offset": [
        11396,
        11423
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8484": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8485": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "8486": {
      "fn": "ERC721._transfer",
      "offset": [
        11396,
        11423
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8487": {
      "fn": "ERC721._transfer",
      "offset": [
        11396,
        11423
      ],
      "op": "DUP8",
      "path": "5"
    },
    "8488": {
      "fn": "ERC721._transfer",
      "offset": [
        11396,
        11423
      ],
      "op": "AND",
      "path": "5"
    },
    "8489": {
      "fn": "ERC721._transfer",
      "offset": [
        11396,
        11423
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8490": {
      "fn": "ERC721._transfer",
      "offset": [
        11396,
        11423
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8523": {
      "fn": "ERC721._transfer",
      "offset": [
        11396,
        11423
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8524": {
      "fn": "ERC721._transfer",
      "offset": [
        11396,
        11423
      ],
      "op": "LOG4",
      "path": "5"
    },
    "8525": {
      "fn": "ERC721._transfer",
      "offset": [
        10836,
        11430
      ],
      "op": "POP",
      "path": "5"
    },
    "8526": {
      "fn": "ERC721._transfer",
      "offset": [
        10836,
        11430
      ],
      "op": "POP",
      "path": "5"
    },
    "8527": {
      "fn": "ERC721._transfer",
      "offset": [
        10836,
        11430
      ],
      "op": "POP",
      "path": "5"
    },
    "8528": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10836,
        11430
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8529": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9691,
        10096
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "8530": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10082
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 89,
      "value": "0x15"
    },
    "8532": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10082
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "8533": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "8535": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "DUP1",
      "path": "22"
    },
    "8536": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "8537": {
      "op": "PUSH4",
      "value": "0x3ECA3C95"
    },
    "8542": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8544": {
      "op": "SHL"
    },
    "8545": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "DUP2",
      "path": "22"
    },
    "8546": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "8547": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8548": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "8549": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9744,
        9751
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "8551": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9744,
        9751
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "8552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8558": {
      "op": "SHL"
    },
    "8559": {
      "op": "SUB"
    },
    "8560": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10082
      ],
      "op": "AND",
      "path": "22"
    },
    "8561": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10082
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "8562": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10087
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x7D94792A"
    },
    "8567": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10087
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "8568": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "8570": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "DUP1",
      "path": "22"
    },
    "8571": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "DUP4",
      "path": "22"
    },
    "8572": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "ADD",
      "path": "22"
    },
    "8573": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "8574": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "8576": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "8577": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "8578": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8579": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "DUP3",
      "path": "22"
    },
    "8580": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8581": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "SUB",
      "path": "22"
    },
    "8582": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "ADD",
      "path": "22"
    },
    "8583": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "DUP2",
      "path": "22"
    },
    "8584": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10082
      ],
      "op": "DUP7",
      "path": "22"
    },
    "8585": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "GAS",
      "path": "22"
    },
    "8586": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "8587": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "8588": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "DUP1",
      "path": "22"
    },
    "8589": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "8590": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x219B"
    },
    "8593": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "8594": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "8595": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "8597": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "DUP1",
      "path": "22"
    },
    "8598": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "8599": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "8600": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "8602": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "REVERT",
      "path": "22"
    },
    "8603": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "8604": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "POP",
      "path": "22"
    },
    "8605": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "POP",
      "path": "22"
    },
    "8606": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "POP",
      "path": "22"
    },
    "8607": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "POP",
      "path": "22"
    },
    "8608": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "8610": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "8611": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "8612": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "8614": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "NOT",
      "path": "22"
    },
    "8615": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "8617": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "DUP3",
      "path": "22"
    },
    "8618": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "ADD",
      "path": "22"
    },
    "8619": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "AND",
      "path": "22"
    },
    "8620": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "DUP3",
      "path": "22"
    },
    "8621": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "ADD",
      "path": "22"
    },
    "8622": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "DUP1",
      "path": "22"
    },
    "8623": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "8625": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "8626": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "POP",
      "path": "22"
    },
    "8627": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "DUP2",
      "path": "22"
    },
    "8628": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "ADD",
      "path": "22"
    },
    "8629": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8630": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x21BF"
    },
    "8633": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "8634": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8635": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3107"
    },
    "8638": {
      "fn": "PoliceAndThief.random",
      "jump": "i",
      "offset": [
        10070,
        10089
      ],
      "op": "JUMP",
      "path": "22"
    },
    "8639": {
      "fn": "PoliceAndThief.random",
      "offset": [
        10070,
        10089
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "8640": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9880,
        9889
      ],
      "op": "ORIGIN",
      "path": "22"
    },
    "8641": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9925,
        9941
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x21CB"
    },
    "8644": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9940,
        9941
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "8646": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9925,
        9937
      ],
      "op": "NUMBER",
      "path": "22"
    },
    "8647": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9925,
        9941
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x320C"
    },
    "8650": {
      "fn": "PoliceAndThief.random",
      "jump": "i",
      "offset": [
        9925,
        9941
      ],
      "op": "JUMP",
      "path": "22"
    },
    "8651": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9925,
        9941
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "8652": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9838,
        10035
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "8654": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9838,
        10035
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "8655": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8657": {
      "op": "SWAP3"
    },
    "8658": {
      "op": "SWAP1"
    },
    "8659": {
      "op": "SWAP3"
    },
    "8660": {
      "op": "SHL"
    },
    "8661": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "8674": {
      "op": "NOT"
    },
    "8675": {
      "op": "AND"
    },
    "8676": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9838,
        10035
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "8678": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9838,
        10035
      ],
      "op": "DUP4",
      "path": "22"
    },
    "8679": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9838,
        10035
      ],
      "op": "ADD",
      "path": "22"
    },
    "8680": {
      "op": "MSTORE"
    },
    "8681": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9915,
        9942
      ],
      "op": "BLOCKHASH",
      "path": "22"
    },
    "8682": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "8684": {
      "op": "DUP3"
    },
    "8685": {
      "op": "ADD"
    },
    "8686": {
      "op": "MSTORE"
    },
    "8687": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9968,
        9983
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "8690": {
      "op": "DUP3"
    },
    "8691": {
      "op": "ADD"
    },
    "8692": {
      "op": "MSTORE"
    },
    "8693": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "8695": {
      "op": "DUP2"
    },
    "8696": {
      "op": "ADD"
    },
    "8697": {
      "op": "DUP5"
    },
    "8698": {
      "op": "SWAP1"
    },
    "8699": {
      "op": "MSTORE"
    },
    "8700": {
      "op": "PUSH1",
      "value": "0x94"
    },
    "8702": {
      "op": "ADD"
    },
    "8703": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9838,
        10035
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "8705": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9838,
        10035
      ],
      "op": "DUP1",
      "path": "22"
    },
    "8706": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9838,
        10035
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "8707": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8709": {
      "op": "NOT"
    },
    "8710": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9838,
        10035
      ],
      "op": "DUP2",
      "path": "22"
    },
    "8711": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9838,
        10035
      ],
      "op": "DUP5",
      "path": "22"
    },
    "8712": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9838,
        10035
      ],
      "op": "SUB",
      "path": "22"
    },
    "8713": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9838,
        10035
      ],
      "op": "ADD",
      "path": "22"
    },
    "8714": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9838,
        10035
      ],
      "op": "DUP2",
      "path": "22"
    },
    "8715": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9838,
        10035
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "8716": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9838,
        10035
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "8717": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9838,
        10035
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8718": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9838,
        10035
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "8719": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9807,
        10053
      ],
      "op": "DUP1",
      "path": "22"
    },
    "8720": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9807,
        10053
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "8721": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9838,
        10035
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "8723": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9807,
        10053
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8724": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9807,
        10053
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "8725": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9807,
        10053
      ],
      "op": "ADD",
      "path": "22"
    },
    "8726": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9807,
        10053
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "8727": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9782,
        10089
      ],
      "op": "XOR",
      "path": "22"
    },
    "8728": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9782,
        10089
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "8729": {
      "fn": "PoliceAndThief.random",
      "offset": [
        9691,
        10096
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "8730": {
      "op": "POP"
    },
    "8731": {
      "op": "POP"
    },
    "8732": {
      "fn": "PoliceAndThief.random",
      "jump": "o",
      "offset": [
        9691,
        10096
      ],
      "op": "JUMP",
      "path": "22"
    },
    "8733": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        5878,
        6263
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "8734": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        5961,
        5981
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2225"
    },
    "8737": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        5961,
        5981
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2AD3"
    },
    "8740": {
      "fn": "PoliceAndThief.generate",
      "jump": "i",
      "offset": [
        5961,
        5981
      ],
      "op": "JUMP",
      "path": "22"
    },
    "8741": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        5961,
        5981
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "8742": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6001,
        6019
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 90,
      "value": "0x222E"
    },
    "8745": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6014,
        6018
      ],
      "op": "DUP3",
      "path": "22"
    },
    "8746": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6001,
        6013
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2579"
    },
    "8749": {
      "fn": "PoliceAndThief.generate",
      "jump": "i",
      "offset": [
        6001,
        6019
      ],
      "op": "JUMP",
      "path": "22"
    },
    "8750": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6001,
        6019
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "8751": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        5997,
        6019
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8752": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        5997,
        6019
      ],
      "op": "POP",
      "path": "22"
    },
    "8753": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6033,
        6053
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x10"
    },
    "8755": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6033,
        6070
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "8757": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6054,
        6069
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x223D"
    },
    "8760": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6067,
        6068
      ],
      "op": "DUP4",
      "path": "22"
    },
    "8761": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6054,
        6066
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x26C4"
    },
    "8764": {
      "fn": "PoliceAndThief.generate",
      "jump": "i",
      "offset": [
        6054,
        6069
      ],
      "op": "JUMP",
      "path": "22"
    },
    "8765": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6054,
        6069
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "8766": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6033,
        6070
      ],
      "op": "DUP2",
      "path": "22"
    },
    "8767": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6033,
        6070
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "8768": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6033,
        6070
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "8770": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6033,
        6070
      ],
      "op": "ADD",
      "path": "22"
    },
    "8771": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6033,
        6070
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8772": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6033,
        6070
      ],
      "op": "DUP2",
      "path": "22"
    },
    "8773": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6033,
        6070
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "8774": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6033,
        6070
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "8776": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6033,
        6070
      ],
      "op": "ADD",
      "path": "22"
    },
    "8777": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6033,
        6070
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "8779": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6033,
        6070
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "8780": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6033,
        6070
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "8781": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6074,
        6075
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "8783": {
      "branch": 166,
      "fn": "PoliceAndThief.generate",
      "offset": [
        6033,
        6075
      ],
      "op": "EQ",
      "path": "22"
    },
    "8784": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6029,
        6209
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "8785": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6029,
        6209
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x237F"
    },
    "8788": {
      "branch": 166,
      "fn": "PoliceAndThief.generate",
      "offset": [
        6029,
        6209
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "8789": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6111
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 91,
      "value": "0x0"
    },
    "8791": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6111
      ],
      "op": "DUP4",
      "path": "22"
    },
    "8792": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6111
      ],
      "op": "DUP2",
      "path": "22"
    },
    "8793": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6111
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "8794": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6102
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xF"
    },
    "8796": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6111
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "8798": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6111
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8799": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6111
      ],
      "op": "DUP2",
      "path": "22"
    },
    "8800": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6111
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "8801": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6111
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "8803": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6111
      ],
      "op": "DUP1",
      "path": "22"
    },
    "8804": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6111
      ],
      "op": "DUP4",
      "path": "22"
    },
    "8805": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6111
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "8806": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "DUP5",
      "path": "22"
    },
    "8807": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "8808": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "DUP2",
      "path": "22"
    },
    "8809": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "8810": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "8811": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "DUP7",
      "path": "22"
    },
    "8812": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "ADD",
      "path": "22"
    },
    "8813": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "8814": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "8815": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "DUP7",
      "path": "22"
    },
    "8816": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "ADD",
      "path": "22"
    },
    "8817": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "8818": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "8820": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "DUP8",
      "path": "22"
    },
    "8821": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "ADD",
      "path": "22"
    },
    "8822": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "8823": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "8825": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "DUP9",
      "path": "22"
    },
    "8826": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "ADD",
      "path": "22"
    },
    "8827": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "8828": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA0"
    },
    "8830": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "DUP10",
      "path": "22"
    },
    "8831": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "ADD",
      "path": "22"
    },
    "8832": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "8833": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC0"
    },
    "8835": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "DUP11",
      "path": "22"
    },
    "8836": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "ADD",
      "path": "22"
    },
    "8837": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "8838": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "8840": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "DUP12",
      "path": "22"
    },
    "8841": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "ADD",
      "path": "22"
    },
    "8842": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "8843": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "8846": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "DUP1",
      "path": "22"
    },
    "8847": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "DUP14",
      "path": "22"
    },
    "8848": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "ADD",
      "path": "22"
    },
    "8849": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "8850": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "8853": {
      "op": "NOT"
    },
    "8854": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8855": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP12",
      "path": "22"
    },
    "8856": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "AND",
      "path": "22"
    },
    "8857": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "8858": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "8859": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "8860": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "8863": {
      "op": "NOT"
    },
    "8864": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "AND",
      "path": "22"
    },
    "8865": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "8866": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8867": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "8868": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "OR",
      "path": "22"
    },
    "8869": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "8871": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP10",
      "path": "22"
    },
    "8872": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "DUP11",
      "path": "22"
    },
    "8873": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "AND",
      "path": "22"
    },
    "8874": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8875": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "8876": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "MUL",
      "path": "22"
    },
    "8877": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "8878": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8879": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "8880": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "OR",
      "path": "22"
    },
    "8881": {
      "op": "PUSH4",
      "value": "0xFFFF0000"
    },
    "8886": {
      "op": "NOT"
    },
    "8887": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "AND",
      "path": "22"
    },
    "8888": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "8892": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "8893": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "DUP10",
      "path": "22"
    },
    "8894": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "AND",
      "path": "22"
    },
    "8895": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "8896": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8897": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "8898": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "MUL",
      "path": "22"
    },
    "8899": {
      "op": "PUSH4",
      "value": "0xFF000000"
    },
    "8904": {
      "op": "NOT"
    },
    "8905": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "AND",
      "path": "22"
    },
    "8906": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "8907": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8908": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "8909": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "OR",
      "path": "22"
    },
    "8910": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x1000000"
    },
    "8915": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "8916": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "DUP9",
      "path": "22"
    },
    "8917": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "AND",
      "path": "22"
    },
    "8918": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "8919": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8920": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "8921": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "MUL",
      "path": "22"
    },
    "8922": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "8923": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8924": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "8925": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "OR",
      "path": "22"
    },
    "8926": {
      "op": "PUSH6",
      "value": "0xFFFF00000000"
    },
    "8933": {
      "op": "NOT"
    },
    "8934": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "AND",
      "path": "22"
    },
    "8935": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "PUSH5",
      "path": "22",
      "value": "0x100000000"
    },
    "8941": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "8942": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "DUP8",
      "path": "22"
    },
    "8943": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "AND",
      "path": "22"
    },
    "8944": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "8945": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8946": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "8947": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "MUL",
      "path": "22"
    },
    "8948": {
      "op": "PUSH6",
      "value": "0xFF0000000000"
    },
    "8955": {
      "op": "NOT"
    },
    "8956": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "AND",
      "path": "22"
    },
    "8957": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "OR",
      "path": "22"
    },
    "8958": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "PUSH6",
      "path": "22",
      "value": "0x10000000000"
    },
    "8965": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "8966": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "DUP7",
      "path": "22"
    },
    "8967": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "AND",
      "path": "22"
    },
    "8968": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "8969": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8970": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "8971": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "MUL",
      "path": "22"
    },
    "8972": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "OR",
      "path": "22"
    },
    "8973": {
      "op": "PUSH8",
      "value": "0xFFFF000000000000"
    },
    "8982": {
      "op": "NOT"
    },
    "8983": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "AND",
      "path": "22"
    },
    "8984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8986": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "8988": {
      "op": "SHL"
    },
    "8989": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "8990": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "DUP6",
      "path": "22"
    },
    "8991": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "AND",
      "path": "22"
    },
    "8992": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "8993": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8994": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "8995": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "MUL",
      "path": "22"
    },
    "8996": {
      "op": "PUSH8",
      "value": "0xFF00000000000000"
    },
    "9005": {
      "op": "NOT"
    },
    "9006": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "AND",
      "path": "22"
    },
    "9007": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "OR",
      "path": "22"
    },
    "9008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9010": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "9012": {
      "op": "SHL"
    },
    "9013": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9014": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "DUP5",
      "path": "22"
    },
    "9015": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "AND",
      "path": "22"
    },
    "9016": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9017": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9018": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9019": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "MUL",
      "path": "22"
    },
    "9020": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "OR",
      "path": "22"
    },
    "9021": {
      "op": "PUSH9",
      "value": "0xFF0000000000000000"
    },
    "9031": {
      "op": "NOT"
    },
    "9032": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "AND",
      "path": "22"
    },
    "9033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9035": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9037": {
      "op": "SHL"
    },
    "9038": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "9039": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9040": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "9041": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "AND",
      "path": "22"
    },
    "9042": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9043": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9044": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9045": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "MUL",
      "path": "22"
    },
    "9046": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9047": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9048": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9049": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "OR",
      "path": "22"
    },
    "9050": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9051": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "9052": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6111
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9053": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6111
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9054": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6129,
        6149
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 92,
      "value": "0x10"
    },
    "9056": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6129,
        6149
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9057": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6150,
        6165
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2369"
    },
    "9060": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6091,
        6115
      ],
      "op": "DUP5",
      "path": "22"
    },
    "9061": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6150,
        6162
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x26C4"
    },
    "9064": {
      "fn": "PoliceAndThief.generate",
      "jump": "i",
      "offset": [
        6150,
        6165
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9065": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6150,
        6165
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9066": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6129,
        6166
      ],
      "op": "DUP2",
      "path": "22"
    },
    "9067": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6129,
        6166
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9068": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6129,
        6166
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "9070": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6129,
        6166
      ],
      "op": "DUP2",
      "path": "22"
    },
    "9071": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6129,
        6166
      ],
      "op": "ADD",
      "path": "22"
    },
    "9072": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6129,
        6166
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9073": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6129,
        6166
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9074": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6129,
        6166
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9075": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6129,
        6166
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9076": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6129,
        6166
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "9078": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6129,
        6166
      ],
      "op": "ADD",
      "path": "22"
    },
    "9079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9081": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6129,
        6166
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "9082": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6129,
        6176
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "9083": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6190,
        6198
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 93,
      "value": "0x9BB"
    },
    "9086": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6190,
        6198
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9087": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6029,
        6209
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9088": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6225,
        6256
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 94,
      "value": "0x2391"
    },
    "9091": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6234,
        6241
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9092": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6243,
        6255
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x238C"
    },
    "9095": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6250,
        6254
      ],
      "op": "DUP5",
      "path": "22"
    },
    "9096": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6243,
        6249
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2151"
    },
    "9099": {
      "fn": "PoliceAndThief.generate",
      "jump": "i",
      "offset": [
        6243,
        6255
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9100": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6243,
        6255
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9101": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6225,
        6233
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x221D"
    },
    "9104": {
      "fn": "PoliceAndThief.generate",
      "jump": "i",
      "offset": [
        6225,
        6256
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9105": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6225,
        6256
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9106": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        6218,
        6256
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "9107": {
      "fn": "PoliceAndThief.generate",
      "offset": [
        5878,
        6263
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "9108": {
      "op": "POP"
    },
    "9109": {
      "op": "POP"
    },
    "9110": {
      "op": "POP"
    },
    "9111": {
      "fn": "PoliceAndThief.generate",
      "jump": "o",
      "offset": [
        5878,
        6263
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9112": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7164,
        7568
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9113": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7259,
        7270
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "9115": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7259,
        7270
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "9116": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7249,
        7255
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE"
    },
    "9118": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7249,
        7255
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "9119": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7226,
        7233
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "9121": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7226,
        7233
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9122": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7249,
        7255
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "9125": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7249,
        7255
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9126": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7249,
        7255
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9127": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7249,
        7255
      ],
      "op": "AND",
      "path": "22"
    },
    "9128": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7249,
        7270
      ],
      "op": "GT",
      "path": "22"
    },
    "9129": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7249,
        7270
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "9130": {
      "branch": 167,
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7249,
        7270
      ],
      "op": "DUP1",
      "path": "22"
    },
    "9131": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7249,
        7299
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23C1"
    },
    "9134": {
      "branch": 167,
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7249,
        7299
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "9135": {
      "op": "POP"
    },
    "9136": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7275,
        7293
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23BE"
    },
    "9139": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7291,
        7293
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "9141": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7284,
        7287
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xF5"
    },
    "9143": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7276,
        7287
      ],
      "op": "DUP5",
      "path": "22"
    },
    "9144": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7276,
        7287
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9145": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7276,
        7287
      ],
      "op": "SHR",
      "path": "22"
    },
    "9146": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7275,
        7293
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3223"
    },
    "9149": {
      "fn": "PoliceAndThief.selectRecipient",
      "jump": "i",
      "offset": [
        7275,
        7293
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9150": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7275,
        7293
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9151": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7274,
        7299
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "9152": {
      "branch": 168,
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7274,
        7299
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "9153": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7249,
        7299
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9154": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7245,
        7332
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "9155": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7245,
        7332
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23CC"
    },
    "9158": {
      "branch": 168,
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7245,
        7332
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "9159": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "9160": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7320,
        7332
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 95,
      "value": "0x9BB"
    },
    "9163": {
      "fn": "Context._msgSender",
      "offset": [
        587,
        683
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9164": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7245,
        7332
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9165": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7403
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x12"
    },
    "9167": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7403
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "9168": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "9170": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "9171": {
      "op": "PUSH4",
      "value": "0x4F36F725"
    },
    "9176": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9178": {
      "op": "SHL"
    },
    "9179": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "DUP2",
      "path": "22"
    },
    "9180": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9181": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7430,
        7433
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x90"
    },
    "9183": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7422,
        7433
      ],
      "op": "DUP5",
      "path": "22"
    },
    "9184": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7422,
        7433
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9185": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7422,
        7433
      ],
      "op": "SHR",
      "path": "22"
    },
    "9186": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "9188": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "DUP3",
      "path": "22"
    },
    "9189": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "ADD",
      "path": "22"
    },
    "9190": {
      "op": "MSTORE"
    },
    "9191": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7383,
        7396
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "9193": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7383,
        7396
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9200": {
      "op": "SHL"
    },
    "9201": {
      "op": "SUB"
    },
    "9202": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7403
      ],
      "op": "AND",
      "path": "22"
    },
    "9203": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7403
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9204": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7421
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x9E6DEE4A"
    },
    "9209": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7421
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9210": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9212": {
      "op": "ADD"
    },
    "9213": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "9215": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "9217": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "9218": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "DUP1",
      "path": "22"
    },
    "9219": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9220": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "SUB",
      "path": "22"
    },
    "9221": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "DUP2",
      "path": "22"
    },
    "9222": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "DUP7",
      "path": "22"
    },
    "9223": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "GAS",
      "path": "22"
    },
    "9224": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "9225": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "9226": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "DUP1",
      "path": "22"
    },
    "9227": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "9228": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2419"
    },
    "9231": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "9232": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "9233": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "9235": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "DUP1",
      "path": "22"
    },
    "9236": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "9237": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "9238": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "9240": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "REVERT",
      "path": "22"
    },
    "9241": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9242": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "POP",
      "path": "22"
    },
    "9243": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "POP",
      "path": "22"
    },
    "9244": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "POP",
      "path": "22"
    },
    "9245": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "POP",
      "path": "22"
    },
    "9246": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "9248": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "9249": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "9250": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "9252": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "NOT",
      "path": "22"
    },
    "9253": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "9255": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "DUP3",
      "path": "22"
    },
    "9256": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "ADD",
      "path": "22"
    },
    "9257": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "AND",
      "path": "22"
    },
    "9258": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "DUP3",
      "path": "22"
    },
    "9259": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "ADD",
      "path": "22"
    },
    "9260": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "DUP1",
      "path": "22"
    },
    "9261": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "9263": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9264": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "POP",
      "path": "22"
    },
    "9265": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "DUP2",
      "path": "22"
    },
    "9266": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "ADD",
      "path": "22"
    },
    "9267": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9268": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x243D"
    },
    "9271": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9272": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9273": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3237"
    },
    "9276": {
      "fn": "PoliceAndThief.selectRecipient",
      "jump": "i",
      "offset": [
        7399,
        7434
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9277": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7399,
        7434
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9278": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7383,
        7434
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9279": {
      "op": "POP"
    },
    "9280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9284": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9286": {
      "op": "SHL"
    },
    "9287": {
      "op": "SUB"
    },
    "9288": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7497,
        7518
      ],
      "op": "DUP2",
      "path": "22"
    },
    "9289": {
      "branch": 169,
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7497,
        7518
      ],
      "op": "AND",
      "path": "22"
    },
    "9290": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7493,
        7539
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9BB"
    },
    "9293": {
      "branch": 169,
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7493,
        7539
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "9294": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "9295": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7520,
        7539
      ],
      "op": "SWAP4",
      "path": "22",
      "statement": 96
    },
    "9296": {
      "fn": "PoliceAndThief.selectRecipient",
      "offset": [
        7164,
        7568
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "9297": {
      "op": "POP"
    },
    "9298": {
      "op": "POP"
    },
    "9299": {
      "op": "POP"
    },
    "9300": {
      "fn": "PoliceAndThief.selectRecipient",
      "jump": "o",
      "offset": [
        7164,
        7568
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9301": {
      "fn": "ERC721._safeMint",
      "offset": [
        8774,
        8882
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9302": {
      "fn": "ERC721._safeMint",
      "offset": [
        8849,
        8875
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 97,
      "value": "0x1CC2"
    },
    "9305": {
      "fn": "ERC721._safeMint",
      "offset": [
        8859,
        8861
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9306": {
      "fn": "ERC721._safeMint",
      "offset": [
        8863,
        8870
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9307": {
      "fn": "ERC721._safeMint",
      "offset": [
        8849,
        8875
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9309": {
      "fn": "ERC721._safeMint",
      "offset": [
        8849,
        8875
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9310": {
      "fn": "ERC721._safeMint",
      "offset": [
        8849,
        8875
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9311": {
      "fn": "ERC721._safeMint",
      "offset": [
        8849,
        8875
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9313": {
      "fn": "ERC721._safeMint",
      "offset": [
        8849,
        8875
      ],
      "op": "ADD",
      "path": "5"
    },
    "9314": {
      "fn": "ERC721._safeMint",
      "offset": [
        8849,
        8875
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9316": {
      "fn": "ERC721._safeMint",
      "offset": [
        8849,
        8875
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9317": {
      "fn": "ERC721._safeMint",
      "offset": [
        8849,
        8875
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9318": {
      "fn": "ERC721._safeMint",
      "offset": [
        8849,
        8875
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9320": {
      "fn": "ERC721._safeMint",
      "offset": [
        8849,
        8875
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9321": {
      "fn": "ERC721._safeMint",
      "offset": [
        8849,
        8875
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9322": {
      "fn": "ERC721._safeMint",
      "offset": [
        8849,
        8875
      ],
      "op": "POP",
      "path": "5"
    },
    "9323": {
      "fn": "ERC721._safeMint",
      "offset": [
        8849,
        8858
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2771"
    },
    "9326": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8849,
        8875
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9327": {
      "fn": "Ownable._setOwner",
      "offset": [
        1656,
        1825
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9328": {
      "fn": "Ownable._setOwner",
      "offset": [
        1730,
        1736
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "9330": {
      "fn": "Ownable._setOwner",
      "offset": [
        1730,
        1736
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9331": {
      "fn": "Ownable._setOwner",
      "offset": [
        1730,
        1736
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9338": {
      "op": "SHL"
    },
    "9339": {
      "op": "SUB"
    },
    "9340": {
      "fn": "Ownable._setOwner",
      "offset": [
        1746,
        1763
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 98
    },
    "9341": {
      "fn": "Ownable._setOwner",
      "offset": [
        1746,
        1763
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9342": {
      "fn": "Ownable._setOwner",
      "offset": [
        1746,
        1763
      ],
      "op": "AND",
      "path": "20"
    },
    "9343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9349": {
      "op": "SHL"
    },
    "9350": {
      "op": "SUB"
    },
    "9351": {
      "op": "NOT"
    },
    "9352": {
      "fn": "Ownable._setOwner",
      "offset": [
        1746,
        1763
      ],
      "op": "DUP4",
      "path": "20"
    },
    "9353": {
      "fn": "Ownable._setOwner",
      "offset": [
        1746,
        1763
      ],
      "op": "AND",
      "path": "20"
    },
    "9354": {
      "fn": "Ownable._setOwner",
      "offset": [
        1746,
        1763
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9355": {
      "fn": "Ownable._setOwner",
      "offset": [
        1746,
        1763
      ],
      "op": "OR",
      "path": "20"
    },
    "9356": {
      "fn": "Ownable._setOwner",
      "offset": [
        1746,
        1763
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9357": {
      "fn": "Ownable._setOwner",
      "offset": [
        1746,
        1763
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "9358": {
      "fn": "Ownable._setOwner",
      "offset": [
        1746,
        1763
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "9359": {
      "fn": "Ownable._setOwner",
      "offset": [
        1778,
        1818
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 99,
      "value": "0x40"
    },
    "9361": {
      "fn": "Ownable._setOwner",
      "offset": [
        1778,
        1818
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9362": {
      "fn": "Ownable._setOwner",
      "offset": [
        1730,
        1736
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9363": {
      "fn": "Ownable._setOwner",
      "offset": [
        1730,
        1736
      ],
      "op": "AND",
      "path": "20"
    },
    "9364": {
      "fn": "Ownable._setOwner",
      "offset": [
        1730,
        1736
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9365": {
      "fn": "Ownable._setOwner",
      "offset": [
        1746,
        1763
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9366": {
      "fn": "Ownable._setOwner",
      "offset": [
        1730,
        1736
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9367": {
      "fn": "Ownable._setOwner",
      "offset": [
        1730,
        1736
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9368": {
      "fn": "Ownable._setOwner",
      "offset": [
        1778,
        1818
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "9401": {
      "fn": "Ownable._setOwner",
      "offset": [
        1778,
        1818
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9402": {
      "fn": "Ownable._setOwner",
      "offset": [
        1711,
        1727
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "9404": {
      "fn": "Ownable._setOwner",
      "offset": [
        1711,
        1727
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9405": {
      "fn": "Ownable._setOwner",
      "offset": [
        1778,
        1818
      ],
      "op": "LOG3",
      "path": "20"
    },
    "9406": {
      "fn": "Ownable._setOwner",
      "offset": [
        1701,
        1825
      ],
      "op": "POP",
      "path": "20"
    },
    "9407": {
      "fn": "Ownable._setOwner",
      "offset": [
        1656,
        1825
      ],
      "op": "POP",
      "path": "20"
    },
    "9408": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        1656,
        1825
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9409": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2767,
        3339
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9416": {
      "op": "SHL"
    },
    "9417": {
      "op": "SUB"
    },
    "9418": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2966,
        2984
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9419": {
      "branch": 183,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2966,
        2984
      ],
      "op": "AND",
      "path": "6"
    },
    "9420": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2962,
        3145
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x251C"
    },
    "9423": {
      "branch": 183,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2962,
        3145
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9424": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3000,
        3040
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 100,
      "value": "0x2517"
    },
    "9427": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3032,
        3039
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9428": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4148,
        4158
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 101,
      "value": "0x8"
    },
    "9430": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4148,
        4165
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9431": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4148,
        4165
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "9432": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4121,
        4145
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "9434": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4121,
        4145
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9435": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4121,
        4145
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9436": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4121,
        4145
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9437": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4121,
        4136
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "9439": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4121,
        4145
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9441": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4121,
        4145
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9442": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4121,
        4145
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9444": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4121,
        4145
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9445": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4121,
        4145
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "9446": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4121,
        4165
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9447": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4121,
        4165
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9448": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4121,
        4165
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "9449": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4175,
        4199
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 102,
      "value": "0x1"
    },
    "9451": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4175,
        4199
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9452": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4175,
        4199
      ],
      "op": "ADD",
      "path": "6"
    },
    "9453": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4175,
        4199
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9454": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4175,
        4199
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "9455": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4175,
        4199
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9456": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4175,
        4199
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9457": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4175,
        4199
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9458": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4175,
        4199
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9459": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4175,
        4199
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "9492": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4175,
        4199
      ],
      "op": "ADD",
      "path": "6"
    },
    "9493": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4175,
        4199
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "9494": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4045,
        4206
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9495": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3000,
        3040
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9496": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2962,
        3145
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x253F"
    },
    "9499": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2962,
        3145
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9500": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2962,
        3145
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9501": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3069,
        3071
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9508": {
      "op": "SHL"
    },
    "9509": {
      "op": "SUB"
    },
    "9510": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3061,
        3071
      ],
      "op": "AND",
      "path": "6"
    },
    "9511": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3061,
        3065
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9518": {
      "op": "SHL"
    },
    "9519": {
      "op": "SUB"
    },
    "9520": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3061,
        3071
      ],
      "op": "AND",
      "path": "6"
    },
    "9521": {
      "branch": 184,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3061,
        3071
      ],
      "op": "EQ",
      "path": "6"
    },
    "9522": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3057,
        3145
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x253F"
    },
    "9525": {
      "branch": 184,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3057,
        3145
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9526": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3087,
        3134
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 103,
      "value": "0x253F"
    },
    "9529": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3120,
        3124
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9530": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3126,
        3133
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9531": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3087,
        3119
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x277B"
    },
    "9534": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3087,
        3134
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9535": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3087,
        3134
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9542": {
      "op": "SHL"
    },
    "9543": {
      "op": "SUB"
    },
    "9544": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3158,
        3174
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9545": {
      "branch": 185,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3158,
        3174
      ],
      "op": "AND",
      "path": "6"
    },
    "9546": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3154,
        3333
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2556"
    },
    "9549": {
      "branch": 185,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3154,
        3333
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9550": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3190,
        3235
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 104,
      "value": "0xC4A"
    },
    "9553": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3227,
        3234
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9554": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3190,
        3226
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2818"
    },
    "9557": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3190,
        3235
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9558": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3154,
        3333
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9559": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3262,
        3266
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9566": {
      "op": "SHL"
    },
    "9567": {
      "op": "SUB"
    },
    "9568": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3256,
        3266
      ],
      "op": "AND",
      "path": "6"
    },
    "9569": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3256,
        3258
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9576": {
      "op": "SHL"
    },
    "9577": {
      "op": "SUB"
    },
    "9578": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3256,
        3266
      ],
      "op": "AND",
      "path": "6"
    },
    "9579": {
      "branch": 186,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3256,
        3266
      ],
      "op": "EQ",
      "path": "6"
    },
    "9580": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3252,
        3333
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC4A"
    },
    "9583": {
      "branch": 186,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3252,
        3333
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9584": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3282,
        3322
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 105,
      "value": "0xC4A"
    },
    "9587": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3310,
        3312
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9588": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3314,
        3321
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9589": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3282,
        3309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28C7"
    },
    "9592": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3282,
        3322
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9593": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7791,
        8734
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9594": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7874,
        7894
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2581"
    },
    "9597": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7874,
        7894
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2AD3"
    },
    "9600": {
      "fn": "PoliceAndThief.selectTraits",
      "jump": "i",
      "offset": [
        7874,
        7894
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9601": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7874,
        7894
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9602": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7922,
        7942
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 106,
      "value": "0x2590"
    },
    "9605": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7940,
        7942
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "9607": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7930,
        7936
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "9610": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7923,
        7936
      ],
      "op": "DUP5",
      "path": "22"
    },
    "9611": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7923,
        7936
      ],
      "op": "AND",
      "path": "22"
    },
    "9612": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7922,
        7942
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3223"
    },
    "9615": {
      "fn": "PoliceAndThief.selectTraits",
      "jump": "i",
      "offset": [
        7922,
        7942
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9616": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7922,
        7942
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9617": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7922,
        7947
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "9618": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7922,
        7947
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "9619": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7910,
        7947
      ],
      "op": "DUP1",
      "path": "22"
    },
    "9620": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7910,
        7947
      ],
      "op": "DUP3",
      "path": "22"
    },
    "9621": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7910,
        7947
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9622": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7946,
        7947
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "9624": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7946,
        7947
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9625": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7971,
        7989
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x25A3"
    },
    "9628": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7971,
        7989
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "9629": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7987,
        7989
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "9631": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7971,
        7989
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x25A6"
    },
    "9634": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7971,
        7989
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9635": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7971,
        7989
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9636": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7983,
        7984
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "9638": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7971,
        7989
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9639": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8009,
        8011
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 107,
      "value": "0x10"
    },
    "9641": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8000,
        8011
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "9642": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8000,
        8011
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9643": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8000,
        8011
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "9644": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8000,
        8011
      ],
      "op": "SHR",
      "path": "22"
    },
    "9645": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8000,
        8011
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "9646": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7957,
        7989
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9647": {
      "op": "POP"
    },
    "9648": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8033,
        8078
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 108,
      "value": "0x25C7"
    },
    "9651": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8059,
        8065
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "9654": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8052,
        8065
      ],
      "op": "DUP5",
      "path": "22"
    },
    "9655": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8052,
        8065
      ],
      "op": "AND",
      "path": "22"
    },
    "9656": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8068,
        8077
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x25C2"
    },
    "9659": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7957,
        7989
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9660": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8068,
        8069
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "9662": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8068,
        8077
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3254"
    },
    "9665": {
      "fn": "PoliceAndThief.selectTraits",
      "jump": "i",
      "offset": [
        8068,
        8077
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9666": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8068,
        8077
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9667": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8033,
        8044
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x290B"
    },
    "9670": {
      "fn": "PoliceAndThief.selectTraits",
      "jump": "i",
      "offset": [
        8033,
        8078
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9671": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8033,
        8078
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9672": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8021,
        8078
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "9674": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8021,
        8078
      ],
      "op": "AND",
      "path": "22"
    },
    "9675": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8021,
        8030
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "9677": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8021,
        8030
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9678": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8021,
        8030
      ],
      "op": "ADD",
      "path": "22"
    },
    "9679": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8021,
        8078
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9680": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8098,
        8100
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 109,
      "value": "0x10"
    },
    "9682": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8089,
        8100
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "9683": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8089,
        8100
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9684": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8089,
        8100
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "9685": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8089,
        8100
      ],
      "op": "SHR",
      "path": "22"
    },
    "9686": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8089,
        8100
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9687": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8119,
        8164
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 110,
      "value": "0x25E9"
    },
    "9690": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8145,
        8151
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "9693": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8138,
        8151
      ],
      "op": "DUP5",
      "path": "22"
    },
    "9694": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8138,
        8151
      ],
      "op": "AND",
      "path": "22"
    },
    "9695": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8154,
        8163
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x25C2"
    },
    "9698": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8158,
        8163
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9699": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8154,
        8155
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "9701": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8154,
        8163
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3254"
    },
    "9704": {
      "fn": "PoliceAndThief.selectTraits",
      "jump": "i",
      "offset": [
        8154,
        8163
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9705": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8119,
        8164
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9706": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8110,
        8164
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "9708": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8110,
        8164
      ],
      "op": "AND",
      "path": "22"
    },
    "9709": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8110,
        8116
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "9711": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8110,
        8116
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9712": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8110,
        8116
      ],
      "op": "ADD",
      "path": "22"
    },
    "9713": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8110,
        8164
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9714": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8184,
        8186
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 111,
      "value": "0x10"
    },
    "9716": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8175,
        8186
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "9717": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8175,
        8186
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9718": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8175,
        8186
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "9719": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8175,
        8186
      ],
      "op": "SHR",
      "path": "22"
    },
    "9720": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8175,
        8186
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9721": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8211,
        8256
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 112,
      "value": "0x260B"
    },
    "9724": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8237,
        8243
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "9727": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8230,
        8243
      ],
      "op": "DUP5",
      "path": "22"
    },
    "9728": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8230,
        8243
      ],
      "op": "AND",
      "path": "22"
    },
    "9729": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8246,
        8255
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x25C2"
    },
    "9732": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8250,
        8255
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9733": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8246,
        8247
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "9735": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8246,
        8255
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3254"
    },
    "9738": {
      "fn": "PoliceAndThief.selectTraits",
      "jump": "i",
      "offset": [
        8246,
        8255
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9739": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8211,
        8256
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9740": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8196,
        8256
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "9742": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8196,
        8256
      ],
      "op": "AND",
      "path": "22"
    },
    "9743": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8196,
        8208
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "9745": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8196,
        8208
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9746": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8196,
        8208
      ],
      "op": "ADD",
      "path": "22"
    },
    "9747": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8196,
        8256
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9748": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8276,
        8278
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 113,
      "value": "0x10"
    },
    "9750": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8267,
        8278
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "9751": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8267,
        8278
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9752": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8267,
        8278
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "9753": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8267,
        8278
      ],
      "op": "SHR",
      "path": "22"
    },
    "9754": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8267,
        8278
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9755": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8297,
        8342
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 114,
      "value": "0x262D"
    },
    "9758": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8323,
        8329
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "9761": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8316,
        8329
      ],
      "op": "DUP5",
      "path": "22"
    },
    "9762": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8316,
        8329
      ],
      "op": "AND",
      "path": "22"
    },
    "9763": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8332,
        8341
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x25C2"
    },
    "9766": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8336,
        8341
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9767": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8332,
        8333
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "9769": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8332,
        8341
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3254"
    },
    "9772": {
      "fn": "PoliceAndThief.selectTraits",
      "jump": "i",
      "offset": [
        8332,
        8341
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9773": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8297,
        8342
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9774": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8288,
        8342
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "9776": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8288,
        8342
      ],
      "op": "AND",
      "path": "22"
    },
    "9777": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8288,
        8294
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "9779": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8288,
        8294
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9780": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8288,
        8294
      ],
      "op": "ADD",
      "path": "22"
    },
    "9781": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8288,
        8342
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9782": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8362,
        8364
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 115,
      "value": "0x10"
    },
    "9784": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8353,
        8364
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "9785": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8353,
        8364
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9786": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8353,
        8364
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "9787": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8353,
        8364
      ],
      "op": "SHR",
      "path": "22"
    },
    "9788": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8353,
        8364
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9789": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8388,
        8433
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 116,
      "value": "0x264F"
    },
    "9792": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8414,
        8420
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "9795": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8407,
        8420
      ],
      "op": "DUP5",
      "path": "22"
    },
    "9796": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8407,
        8420
      ],
      "op": "AND",
      "path": "22"
    },
    "9797": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8423,
        8432
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x25C2"
    },
    "9800": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8427,
        8432
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9801": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8423,
        8424
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "9803": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8423,
        8432
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3254"
    },
    "9806": {
      "fn": "PoliceAndThief.selectTraits",
      "jump": "i",
      "offset": [
        8423,
        8432
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9807": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8388,
        8433
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9808": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8374,
        8433
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "9810": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8374,
        8433
      ],
      "op": "AND",
      "path": "22"
    },
    "9811": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8374,
        8385
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "9813": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8374,
        8385
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9814": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8374,
        8385
      ],
      "op": "ADD",
      "path": "22"
    },
    "9815": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8374,
        8433
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9816": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8453,
        8455
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 117,
      "value": "0x10"
    },
    "9818": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8444,
        8455
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "9819": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8444,
        8455
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9820": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8444,
        8455
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "9821": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8444,
        8455
      ],
      "op": "SHR",
      "path": "22"
    },
    "9822": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8444,
        8455
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9823": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8478,
        8523
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 118,
      "value": "0x2671"
    },
    "9826": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8504,
        8510
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "9829": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8497,
        8510
      ],
      "op": "DUP5",
      "path": "22"
    },
    "9830": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8497,
        8510
      ],
      "op": "AND",
      "path": "22"
    },
    "9831": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8513,
        8522
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x25C2"
    },
    "9834": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8517,
        8522
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9835": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8513,
        8514
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "9837": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8513,
        8522
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3254"
    },
    "9840": {
      "fn": "PoliceAndThief.selectTraits",
      "jump": "i",
      "offset": [
        8513,
        8522
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9841": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8478,
        8523
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9842": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8465,
        8523
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "9844": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8465,
        8523
      ],
      "op": "AND",
      "path": "22"
    },
    "9845": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8465,
        8475
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA0"
    },
    "9847": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8465,
        8475
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9848": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8465,
        8475
      ],
      "op": "ADD",
      "path": "22"
    },
    "9849": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8465,
        8523
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9850": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8560,
        8569
      ],
      "op": "DUP2",
      "path": "22"
    },
    "9851": {
      "branch": 170,
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8560,
        8569
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "9852": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8543,
        8545
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 119,
      "value": "0x10"
    },
    "9854": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8534,
        8545
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "9855": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8534,
        8545
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9856": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8534,
        8545
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "9857": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8534,
        8545
      ],
      "op": "SHR",
      "path": "22"
    },
    "9858": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8534,
        8545
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "9859": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8555,
        8728
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x26BE"
    },
    "9862": {
      "branch": 170,
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8555,
        8728
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "9863": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8598,
        8643
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 120,
      "value": "0x2699"
    },
    "9866": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8624,
        8630
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "9869": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8617,
        8630
      ],
      "op": "DUP5",
      "path": "22"
    },
    "9870": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8617,
        8630
      ],
      "op": "AND",
      "path": "22"
    },
    "9871": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8633,
        8642
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x25C2"
    },
    "9874": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8637,
        8642
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9875": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8633,
        8634
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "9877": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8633,
        8642
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3254"
    },
    "9880": {
      "fn": "PoliceAndThief.selectTraits",
      "jump": "i",
      "offset": [
        8633,
        8642
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9881": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8598,
        8643
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9882": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8585,
        8643
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "9884": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8585,
        8643
      ],
      "op": "AND",
      "path": "22"
    },
    "9885": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8585,
        8595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC0"
    },
    "9887": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8585,
        8595
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9888": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8585,
        8595
      ],
      "op": "ADD",
      "path": "22"
    },
    "9889": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8585,
        8643
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9890": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8672,
        8717
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 121,
      "value": "0x26B4"
    },
    "9893": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8698,
        8704
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFFF"
    },
    "9896": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8691,
        8704
      ],
      "op": "DUP5",
      "path": "22"
    },
    "9897": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8691,
        8704
      ],
      "op": "AND",
      "path": "22"
    },
    "9898": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8707,
        8716
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x25C2"
    },
    "9901": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8711,
        8716
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9902": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8707,
        8708
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "9904": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8707,
        8716
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3254"
    },
    "9907": {
      "fn": "PoliceAndThief.selectTraits",
      "jump": "i",
      "offset": [
        8707,
        8716
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9908": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8672,
        8717
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9909": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8657,
        8717
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "9911": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8657,
        8717
      ],
      "op": "AND",
      "path": "22"
    },
    "9912": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8657,
        8669
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "9915": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8657,
        8669
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9916": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8657,
        8669
      ],
      "op": "ADD",
      "path": "22"
    },
    "9917": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8657,
        8717
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "9918": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        8555,
        8728
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9919": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7900,
        8734
      ],
      "op": "POP",
      "path": "22"
    },
    "9920": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7791,
        8734
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "9921": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7791,
        8734
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9922": {
      "fn": "PoliceAndThief.selectTraits",
      "offset": [
        7791,
        8734
      ],
      "op": "POP",
      "path": "22"
    },
    "9923": {
      "fn": "PoliceAndThief.selectTraits",
      "jump": "o",
      "offset": [
        7791,
        8734
      ],
      "op": "JUMP",
      "path": "22"
    },
    "9924": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        8916,
        9501
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "9925": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9147,
        9156
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 122
    },
    "9926": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9147,
        9156
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "9927": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9182,
        9191
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "9929": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9182,
        9191
      ],
      "op": "DUP1",
      "path": "22"
    },
    "9930": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9182,
        9191
      ],
      "op": "DUP4",
      "path": "22"
    },
    "9931": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9182,
        9191
      ],
      "op": "ADD",
      "path": "22"
    },
    "9932": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9182,
        9191
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "9933": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9217,
        9223
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "9935": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9217,
        9223
      ],
      "op": "DUP1",
      "path": "22"
    },
    "9936": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9217,
        9223
      ],
      "op": "DUP6",
      "path": "22"
    },
    "9937": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9217,
        9223
      ],
      "op": "ADD",
      "path": "22"
    },
    "9938": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9217,
        9223
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "9939": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9249,
        9261
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "9941": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9249,
        9261
      ],
      "op": "DUP7",
      "path": "22"
    },
    "9942": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9249,
        9261
      ],
      "op": "ADD",
      "path": "22"
    },
    "9943": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9249,
        9261
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "9944": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9287,
        9293
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "9946": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9287,
        9293
      ],
      "op": "DUP8",
      "path": "22"
    },
    "9947": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9287,
        9293
      ],
      "op": "ADD",
      "path": "22"
    },
    "9948": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9287,
        9293
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "9949": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9319,
        9329
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA0"
    },
    "9951": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9319,
        9329
      ],
      "op": "DUP9",
      "path": "22"
    },
    "9952": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9319,
        9329
      ],
      "op": "ADD",
      "path": "22"
    },
    "9953": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9319,
        9329
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "9954": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9355,
        9366
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "9956": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9355,
        9366
      ],
      "op": "DUP10",
      "path": "22"
    },
    "9957": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9355,
        9366
      ],
      "op": "ADD",
      "path": "22"
    },
    "9958": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9355,
        9366
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "9959": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9392,
        9402
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC0"
    },
    "9961": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9392,
        9402
      ],
      "op": "DUP11",
      "path": "22"
    },
    "9962": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9392,
        9402
      ],
      "op": "ADD",
      "path": "22"
    },
    "9963": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9392,
        9402
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "9964": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9428,
        9440
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "9967": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9428,
        9440
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "9968": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9428,
        9440
      ],
      "op": "SWAP11",
      "path": "22"
    },
    "9969": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9428,
        9440
      ],
      "op": "ADD",
      "path": "22"
    },
    "9970": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9428,
        9440
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "9971": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9105,
        9462
      ],
      "op": "DUP7",
      "path": "22"
    },
    "9972": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9105,
        9462
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "9973": {
      "op": "SWAP10"
    },
    "9974": {
      "op": "ISZERO"
    },
    "9975": {
      "op": "ISZERO"
    },
    "9976": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9978": {
      "op": "SWAP1"
    },
    "9979": {
      "op": "DUP2"
    },
    "9980": {
      "op": "SHL"
    },
    "9981": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9105,
        9462
      ],
      "op": "DUP12",
      "path": "22"
    },
    "9982": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9105,
        9462
      ],
      "op": "DUP12",
      "path": "22"
    },
    "9983": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9105,
        9462
      ],
      "op": "ADD",
      "path": "22"
    },
    "9984": {
      "op": "MSTORE"
    },
    "9985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9989": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9991": {
      "op": "SHL"
    },
    "9992": {
      "op": "SUB"
    },
    "9993": {
      "op": "NOT"
    },
    "9994": {
      "op": "SWAP9"
    },
    "9995": {
      "op": "DUP2"
    },
    "9996": {
      "op": "SHL"
    },
    "9997": {
      "op": "DUP10"
    },
    "9998": {
      "op": "AND"
    },
    "9999": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "10001": {
      "op": "DUP13"
    },
    "10002": {
      "op": "ADD"
    },
    "10003": {
      "op": "MSTORE"
    },
    "10004": {
      "op": "SWAP6"
    },
    "10005": {
      "op": "DUP7"
    },
    "10006": {
      "op": "SHL"
    },
    "10007": {
      "op": "DUP9"
    },
    "10008": {
      "op": "AND"
    },
    "10009": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10011": {
      "op": "DUP12"
    },
    "10012": {
      "op": "ADD"
    },
    "10013": {
      "op": "MSTORE"
    },
    "10014": {
      "op": "SWAP4"
    },
    "10015": {
      "op": "DUP6"
    },
    "10016": {
      "op": "SHL"
    },
    "10017": {
      "op": "DUP8"
    },
    "10018": {
      "op": "AND"
    },
    "10019": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "10021": {
      "op": "DUP11"
    },
    "10022": {
      "op": "ADD"
    },
    "10023": {
      "op": "MSTORE"
    },
    "10024": {
      "op": "SWAP2"
    },
    "10025": {
      "op": "DUP5"
    },
    "10026": {
      "op": "SHL"
    },
    "10027": {
      "op": "DUP7"
    },
    "10028": {
      "op": "AND"
    },
    "10029": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10031": {
      "op": "DUP10"
    },
    "10032": {
      "op": "ADD"
    },
    "10033": {
      "op": "MSTORE"
    },
    "10034": {
      "op": "DUP4"
    },
    "10035": {
      "op": "SHL"
    },
    "10036": {
      "op": "DUP6"
    },
    "10037": {
      "op": "AND"
    },
    "10038": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "10040": {
      "op": "DUP9"
    },
    "10041": {
      "op": "ADD"
    },
    "10042": {
      "op": "MSTORE"
    },
    "10043": {
      "op": "DUP3"
    },
    "10044": {
      "op": "SHL"
    },
    "10045": {
      "op": "DUP5"
    },
    "10046": {
      "op": "AND"
    },
    "10047": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "10049": {
      "op": "DUP8"
    },
    "10050": {
      "op": "ADD"
    },
    "10051": {
      "op": "MSTORE"
    },
    "10052": {
      "op": "SWAP6"
    },
    "10053": {
      "op": "DUP2"
    },
    "10054": {
      "op": "SHL"
    },
    "10055": {
      "op": "DUP4"
    },
    "10056": {
      "op": "AND"
    },
    "10057": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "10059": {
      "op": "DUP7"
    },
    "10060": {
      "op": "ADD"
    },
    "10061": {
      "op": "MSTORE"
    },
    "10062": {
      "op": "SWAP5"
    },
    "10063": {
      "op": "SWAP1"
    },
    "10064": {
      "op": "SWAP5"
    },
    "10065": {
      "op": "SHL"
    },
    "10066": {
      "op": "AND"
    },
    "10067": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "10069": {
      "op": "DUP4"
    },
    "10070": {
      "op": "ADD"
    },
    "10071": {
      "op": "MSTORE"
    },
    "10072": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9105,
        9462
      ],
      "op": "DUP3",
      "path": "22"
    },
    "10073": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9105,
        9462
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "10074": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9105,
        9462
      ],
      "op": "DUP1",
      "path": "22"
    },
    "10075": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9105,
        9462
      ],
      "op": "DUP4",
      "path": "22"
    },
    "10076": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9105,
        9462
      ],
      "op": "SUB",
      "path": "22"
    },
    "10077": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9105,
        9462
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "10079": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9105,
        9462
      ],
      "op": "ADD",
      "path": "22"
    },
    "10080": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9105,
        9462
      ],
      "op": "DUP2",
      "path": "22"
    },
    "10081": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9105,
        9462
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "10082": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "10084": {
      "op": "SWAP1"
    },
    "10085": {
      "op": "SWAP3"
    },
    "10086": {
      "op": "ADD"
    },
    "10087": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9105,
        9462
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "10088": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9105,
        9462
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "10089": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9105,
        9462
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "10090": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9074,
        9480
      ],
      "op": "DUP1",
      "path": "22"
    },
    "10091": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9074,
        9480
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "10092": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9074,
        9480
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "10093": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9074,
        9480
      ],
      "op": "ADD",
      "path": "22"
    },
    "10094": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9074,
        9480
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "10095": {
      "fn": "PoliceAndThief.structToHash",
      "offset": [
        9074,
        9480
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "10096": {
      "fn": "PoliceAndThief.structToHash",
      "jump": "o",
      "offset": [
        8916,
        9501
      ],
      "op": "JUMP",
      "path": "22"
    },
    "10097": {
      "fn": "ERC721._safeMint",
      "offset": [
        9103,
        9253
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10098": {
      "fn": "ERC721._safeMint",
      "offset": [
        9228,
        9246
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 123,
      "value": "0xC4A"
    },
    "10101": {
      "fn": "ERC721._safeMint",
      "offset": [
        9234,
        9236
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10102": {
      "fn": "ERC721._safeMint",
      "offset": [
        9238,
        9245
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10103": {
      "fn": "ERC721._safeMint",
      "offset": [
        9228,
        9233
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2985"
    },
    "10106": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        9228,
        9246
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10107": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4823,
        5805
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10108": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5097,
        5119
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10110": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5147,
        5148
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "10112": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5122,
        5144
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2788"
    },
    "10115": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5139,
        5143
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10116": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5122,
        5138
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17F4"
    },
    "10119": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        5122,
        5144
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10120": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5122,
        5144
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10121": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5122,
        5148
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2792"
    },
    "10124": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5122,
        5148
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10125": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5122,
        5148
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10126": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5122,
        5148
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x320C"
    },
    "10129": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        5122,
        5148
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10130": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5122,
        5148
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10131": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5158,
        5176
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10133": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5179,
        5205
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10134": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5179,
        5205
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10135": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5179,
        5205
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10136": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5179,
        5196
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "10138": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5179,
        5205
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10140": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5179,
        5205
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10141": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5179,
        5205
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10143": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5179,
        5205
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10144": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5179,
        5205
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10145": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5179,
        5205
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "10146": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5097,
        5148
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10147": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5097,
        5148
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10148": {
      "op": "POP"
    },
    "10149": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5309,
        5337
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10150": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5309,
        5337
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10151": {
      "branch": 187,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5309,
        5337
      ],
      "op": "EQ",
      "path": "6"
    },
    "10152": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5628
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27E5"
    },
    "10155": {
      "branch": 187,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5628
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10162": {
      "op": "SHL"
    },
    "10163": {
      "op": "SUB"
    },
    "10164": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5393
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10165": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5393
      ],
      "op": "AND",
      "path": "6"
    },
    "10166": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5353,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10168": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5393
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10169": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5393
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10170": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5393
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10171": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5387
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "10173": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5393
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10175": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5393
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10176": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5393
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10177": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5393
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10178": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5393
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10180": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5393
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10181": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5393
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10182": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5393
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10183": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5409
      ],
      "op": "DUP6",
      "path": "6"
    },
    "10184": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5409
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10185": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5409
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10186": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5409
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10187": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5409
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10188": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5409
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10189": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5409
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10190": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5409
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10191": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5375,
        5409
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "10192": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5424,
        5454
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 124
    },
    "10193": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5424,
        5454
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10194": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5424,
        5454
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10195": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5424,
        5454
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10196": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5424,
        5454
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10197": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5424,
        5454
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10198": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5424,
        5468
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10199": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5424,
        5468
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10200": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5424,
        5468
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10201": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5540,
        5570
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 125
    },
    "10202": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5540,
        5570
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10203": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5540,
        5557
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "10205": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5540,
        5570
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10206": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5540,
        5570
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10207": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5540,
        5570
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10208": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5540,
        5570
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10209": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5540,
        5570
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10210": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5540,
        5583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10211": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5540,
        5583
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10212": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5540,
        5583
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10213": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5305,
        5628
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10214": {
      "op": "POP"
    },
    "10215": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5721,
        5747
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 126,
      "value": "0x0"
    },
    "10217": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5721,
        5747
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10218": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5721,
        5747
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10219": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5721,
        5747
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10220": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5721,
        5738
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "10222": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5721,
        5747
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10224": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5721,
        5747
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10225": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5721,
        5747
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10226": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5721,
        5747
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10227": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5721,
        5747
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10229": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5721,
        5747
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10230": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5721,
        5747
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10231": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5721,
        5747
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10232": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5714,
        5747
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10233": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5714,
        5747
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10234": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5714,
        5747
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10241": {
      "op": "SHL"
    },
    "10242": {
      "op": "SUB"
    },
    "10243": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5764,
        5782
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 127
    },
    "10244": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5764,
        5782
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "10245": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5764,
        5782
      ],
      "op": "AND",
      "path": "6"
    },
    "10246": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5764,
        5782
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10247": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5764,
        5782
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10248": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5764,
        5776
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "10250": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5764,
        5782
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10251": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5764,
        5782
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10252": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5764,
        5782
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10253": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5764,
        5782
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10254": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5764,
        5782
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10255": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5764,
        5798
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10256": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5764,
        5798
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10257": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5764,
        5798
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10258": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5764,
        5798
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10259": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5764,
        5798
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10260": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5764,
        5798
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10261": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5764,
        5798
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10262": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5757,
        5798
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10263": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4823,
        5805
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10264": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6093,
        7154
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10265": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6367,
        6377
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "10267": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6367,
        6384
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "10268": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6342,
        6364
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10270": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6342,
        6364
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10271": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6367,
        6388
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x282A"
    },
    "10274": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6367,
        6388
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10275": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6387,
        6388
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "10277": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6387,
        6388
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10278": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6367,
        6388
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x320C"
    },
    "10281": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6367,
        6388
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10282": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6367,
        6388
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10283": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6398,
        6416
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10285": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6419,
        6443
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10286": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6419,
        6443
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10287": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6419,
        6443
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10288": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6419,
        6434
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "10290": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6419,
        6443
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10292": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6419,
        6443
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10293": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6419,
        6443
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10295": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6419,
        6443
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10296": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6419,
        6443
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10297": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6419,
        6443
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "10298": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6787,
        6797
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "10300": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6787,
        6813
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10301": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6787,
        6813
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "10302": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6342,
        6388
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "10303": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6342,
        6388
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "10304": {
      "op": "POP"
    },
    "10305": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6419,
        6443
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10306": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6419,
        6443
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "10307": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6342,
        6388
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10308": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6342,
        6388
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10309": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6787,
        6813
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10310": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6787,
        6813
      ],
      "op": "LT",
      "path": "6"
    },
    "10311": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6787,
        6813
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2852"
    },
    "10314": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6787,
        6813
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10315": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6787,
        6813
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2852"
    },
    "10318": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6787,
        6813
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x30B7"
    },
    "10321": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6787,
        6813
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10322": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6787,
        6813
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10323": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6787,
        6813
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10324": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6787,
        6813
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10326": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6787,
        6813
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10327": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6787,
        6813
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10329": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6787,
        6813
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10331": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6787,
        6813
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10332": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6787,
        6813
      ],
      "op": "ADD",
      "path": "6"
    },
    "10333": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6787,
        6813
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "10334": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6765,
        6813
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10335": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6765,
        6813
      ],
      "op": "POP",
      "path": "6"
    },
    "10336": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6849,
        6860
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 128
    },
    "10337": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6834
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "10339": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6835,
        6845
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10340": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6846
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10341": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6846
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "10342": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6846
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10343": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6846
      ],
      "op": "LT",
      "path": "6"
    },
    "10344": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6846
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2873"
    },
    "10347": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6846
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10348": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6846
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2873"
    },
    "10351": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6846
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x30B7"
    },
    "10354": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6824,
        6846
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10355": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6846
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10356": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6846
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10358": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6846
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10359": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6846
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10360": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6846
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10361": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6846
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10363": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6846
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10364": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6846
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10365": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6846
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10366": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6846
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10367": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6846
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10368": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6846
      ],
      "op": "ADD",
      "path": "6"
    },
    "10369": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6860
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "10370": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6860
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10371": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6860
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "10372": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6824,
        6860
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10373": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6928,
        6956
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 129
    },
    "10374": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6928,
        6956
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10375": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6928,
        6956
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10376": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6928,
        6943
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "10378": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6928,
        6956
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10379": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6928,
        6956
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10380": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6928,
        6956
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10381": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6928,
        6956
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10383": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6928,
        6956
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10384": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6928,
        6956
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10385": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6928,
        6956
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10386": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6928,
        6969
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10387": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6928,
        6969
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10388": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6928,
        6969
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10389": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7097,
        7121
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 130
    },
    "10390": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7097,
        7121
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10391": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7097,
        7121
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10392": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7097,
        7121
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10393": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7097,
        7121
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10394": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7090,
        7121
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10395": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7141
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 131,
      "value": "0x8"
    },
    "10397": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10398": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "10399": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10400": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28AB"
    },
    "10403": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10404": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28AB"
    },
    "10407": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3279"
    },
    "10410": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        7131,
        7147
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10411": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10412": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "10414": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10415": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "SUB",
      "path": "6"
    },
    "10416": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10417": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10418": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10419": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10421": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10422": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10424": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10426": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10427": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "ADD",
      "path": "6"
    },
    "10428": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10430": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10431": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10432": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10433": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7131,
        7147
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10434": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6164,
        7154
      ],
      "op": "POP",
      "path": "6"
    },
    "10435": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6164,
        7154
      ],
      "op": "POP",
      "path": "6"
    },
    "10436": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6164,
        7154
      ],
      "op": "POP",
      "path": "6"
    },
    "10437": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6093,
        7154
      ],
      "op": "POP",
      "path": "6"
    },
    "10438": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        6093,
        7154
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10439": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3633,
        3850
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10440": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3717,
        3731
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10442": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3734,
        3754
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28D2"
    },
    "10445": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3751,
        3753
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10446": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3734,
        3750
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17F4"
    },
    "10449": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3734,
        3754
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10450": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3734,
        3754
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10457": {
      "op": "SHL"
    },
    "10458": {
      "op": "SUB"
    },
    "10459": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3780
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 132
    },
    "10460": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3780
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "10461": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3780
      ],
      "op": "AND",
      "path": "6"
    },
    "10462": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3780
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10464": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3780
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10465": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3780
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10466": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3780
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10467": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3776
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "10469": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3780
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10471": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3780
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10472": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3780
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10473": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3780
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10474": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3780
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10476": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3780
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10477": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3780
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10478": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3780
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10479": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3788
      ],
      "op": "DUP7",
      "path": "6"
    },
    "10480": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3788
      ],
      "op": "DUP5",
      "path": "6"
    },
    "10481": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3788
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10482": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3788
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10483": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3788
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10484": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3788
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10485": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3788
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10486": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3788
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10487": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3798
      ],
      "op": "DUP6",
      "path": "6"
    },
    "10488": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3798
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10489": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3764,
        3798
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10490": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3808,
        3834
      ],
      "op": "SWAP4",
      "path": "6",
      "statement": 133
    },
    "10491": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3808,
        3834
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10492": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3808,
        3834
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10493": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3808,
        3825
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "10495": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3808,
        3834
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10496": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3808,
        3834
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10497": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3808,
        3834
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10498": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3808,
        3834
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10499": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3808,
        3834
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10500": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3808,
        3834
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "10501": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3808,
        3843
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10502": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3808,
        3843
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10503": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3808,
        3843
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10504": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3808,
        3843
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "10505": {
      "op": "POP"
    },
    "10506": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3633,
        3850
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10507": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6686,
        6854
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "10508": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6818
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 134,
      "value": "0x14"
    },
    "10510": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6818
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "10511": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "10513": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "10514": {
      "op": "PUSH4",
      "value": "0x53584B49"
    },
    "10519": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10521": {
      "op": "SHL"
    },
    "10522": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "10523": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "10524": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "10527": {
      "op": "DUP5"
    },
    "10528": {
      "op": "AND"
    },
    "10529": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "10531": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "DUP3",
      "path": "22"
    },
    "10532": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "ADD",
      "path": "22"
    },
    "10533": {
      "op": "MSTORE"
    },
    "10534": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10536": {
      "op": "DUP4"
    },
    "10537": {
      "op": "AND"
    },
    "10538": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10540": {
      "op": "DUP3"
    },
    "10541": {
      "op": "ADD"
    },
    "10542": {
      "op": "MSTORE"
    },
    "10543": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6784,
        6789
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "10545": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6784,
        6789
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "10546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10552": {
      "op": "SHL"
    },
    "10553": {
      "op": "SUB"
    },
    "10554": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6818
      ],
      "op": "AND",
      "path": "22"
    },
    "10555": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6818
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "10556": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6830
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA6B09692"
    },
    "10561": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6830
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "10562": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10564": {
      "op": "ADD"
    },
    "10565": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "10567": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "10569": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "10570": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "DUP1",
      "path": "22"
    },
    "10571": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "DUP4",
      "path": "22"
    },
    "10572": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "SUB",
      "path": "22"
    },
    "10573": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "10574": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "DUP7",
      "path": "22"
    },
    "10575": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "GAS",
      "path": "22"
    },
    "10576": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "10577": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "10578": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "DUP1",
      "path": "22"
    },
    "10579": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "10580": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2961"
    },
    "10583": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "10584": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "10585": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "10587": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "DUP1",
      "path": "22"
    },
    "10588": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "10589": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "10590": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "10592": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "REVERT",
      "path": "22"
    },
    "10593": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "10594": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "POP",
      "path": "22"
    },
    "10595": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "POP",
      "path": "22"
    },
    "10596": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "POP",
      "path": "22"
    },
    "10597": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "POP",
      "path": "22"
    },
    "10598": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "10600": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "10601": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "10602": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "10604": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "NOT",
      "path": "22"
    },
    "10605": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "10607": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "DUP3",
      "path": "22"
    },
    "10608": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "ADD",
      "path": "22"
    },
    "10609": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "AND",
      "path": "22"
    },
    "10610": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "DUP3",
      "path": "22"
    },
    "10611": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "ADD",
      "path": "22"
    },
    "10612": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "DUP1",
      "path": "22"
    },
    "10613": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "10615": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "10616": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "POP",
      "path": "22"
    },
    "10617": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "10618": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "ADD",
      "path": "22"
    },
    "10619": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "10620": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2391"
    },
    "10623": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "10624": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "10625": {
      "fn": "PoliceAndThief.selectTrait",
      "offset": [
        6812,
        6847
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x328F"
    },
    "10628": {
      "fn": "PoliceAndThief.selectTrait",
      "jump": "i",
      "offset": [
        6812,
        6847
      ],
      "op": "JUMP",
      "path": "22"
    },
    "10629": {
      "fn": "ERC721._mint",
      "offset": [
        9575,
        9947
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10636": {
      "op": "SHL"
    },
    "10637": {
      "op": "SUB"
    },
    "10638": {
      "fn": "ERC721._mint",
      "offset": [
        9654,
        9670
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 135
    },
    "10639": {
      "branch": 180,
      "fn": "ERC721._mint",
      "offset": [
        9654,
        9670
      ],
      "op": "AND",
      "path": "5"
    },
    "10640": {
      "fn": "ERC721._mint",
      "offset": [
        9646,
        9707
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29DB"
    },
    "10643": {
      "branch": 180,
      "fn": "ERC721._mint",
      "offset": [
        9646,
        9707
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10644": {
      "fn": "ERC721._mint",
      "offset": [
        9646,
        9707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10646": {
      "fn": "ERC721._mint",
      "offset": [
        9646,
        9707
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10647": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10651": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10653": {
      "op": "SHL"
    },
    "10654": {
      "fn": "ERC721._mint",
      "offset": [
        9646,
        9707
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10655": {
      "fn": "ERC721._mint",
      "offset": [
        9646,
        9707
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10658": {
      "fn": "ERC721._mint",
      "offset": [
        9646,
        9707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "10660": {
      "fn": "ERC721._mint",
      "offset": [
        9646,
        9707
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10661": {
      "fn": "ERC721._mint",
      "offset": [
        9646,
        9707
      ],
      "op": "ADD",
      "path": "5"
    },
    "10662": {
      "op": "DUP2"
    },
    "10663": {
      "op": "SWAP1"
    },
    "10664": {
      "op": "MSTORE"
    },
    "10665": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10667": {
      "op": "DUP3"
    },
    "10668": {
      "op": "ADD"
    },
    "10669": {
      "op": "MSTORE"
    },
    "10670": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "10703": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10705": {
      "op": "DUP3"
    },
    "10706": {
      "op": "ADD"
    },
    "10707": {
      "op": "MSTORE"
    },
    "10708": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10710": {
      "op": "ADD"
    },
    "10711": {
      "fn": "ERC721._mint",
      "offset": [
        9646,
        9707
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAC8"
    },
    "10714": {
      "op": "JUMP"
    },
    "10715": {
      "fn": "ERC721._mint",
      "offset": [
        9646,
        9707
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10716": {
      "fn": "ERC721._exists",
      "offset": [
        7788,
        7792
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10718": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10719": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10720": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10721": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7818
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "10723": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10725": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10726": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10728": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10729": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "10730": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10737": {
      "op": "SHL"
    },
    "10738": {
      "op": "SUB"
    },
    "10739": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "AND",
      "path": "5"
    },
    "10740": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7841
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10741": {
      "fn": "ERC721._mint",
      "offset": [
        9717,
        9775
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 136,
      "value": "0x2A40"
    },
    "10744": {
      "fn": "ERC721._mint",
      "offset": [
        9717,
        9775
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10745": {
      "fn": "ERC721._mint",
      "offset": [
        9717,
        9775
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10747": {
      "fn": "ERC721._mint",
      "offset": [
        9717,
        9775
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10748": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10752": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10754": {
      "op": "SHL"
    },
    "10755": {
      "fn": "ERC721._mint",
      "offset": [
        9717,
        9775
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10756": {
      "fn": "ERC721._mint",
      "offset": [
        9717,
        9775
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10759": {
      "fn": "ERC721._mint",
      "offset": [
        9717,
        9775
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "10761": {
      "fn": "ERC721._mint",
      "offset": [
        9717,
        9775
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10762": {
      "fn": "ERC721._mint",
      "offset": [
        9717,
        9775
      ],
      "op": "ADD",
      "path": "5"
    },
    "10763": {
      "op": "MSTORE"
    },
    "10764": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "10766": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10768": {
      "op": "DUP3"
    },
    "10769": {
      "op": "ADD"
    },
    "10770": {
      "op": "MSTORE"
    },
    "10771": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "10804": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10806": {
      "op": "DUP3"
    },
    "10807": {
      "op": "ADD"
    },
    "10808": {
      "op": "MSTORE"
    },
    "10809": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10811": {
      "op": "ADD"
    },
    "10812": {
      "fn": "ERC721._mint",
      "offset": [
        9717,
        9775
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAC8"
    },
    "10815": {
      "op": "JUMP"
    },
    "10816": {
      "fn": "ERC721._mint",
      "offset": [
        9717,
        9775
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10817": {
      "fn": "ERC721._mint",
      "offset": [
        9786,
        9831
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 137,
      "value": "0x2A4C"
    },
    "10820": {
      "fn": "ERC721._mint",
      "offset": [
        9815,
        9816
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10822": {
      "fn": "ERC721._mint",
      "offset": [
        9819,
        9821
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10823": {
      "fn": "ERC721._mint",
      "offset": [
        9823,
        9830
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10824": {
      "fn": "ERC721._mint",
      "offset": [
        9786,
        9806
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x24C1"
    },
    "10827": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9786,
        9831
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10828": {
      "fn": "ERC721._mint",
      "offset": [
        9786,
        9831
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10835": {
      "op": "SHL"
    },
    "10836": {
      "op": "SUB"
    },
    "10837": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9855
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 138
    },
    "10838": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9855
      ],
      "op": "AND",
      "path": "5"
    },
    "10839": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9855
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10841": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9855
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10842": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9855
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10843": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9855
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10844": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9851
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "10846": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9855
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10848": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9855
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10849": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9855
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10851": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9855
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10852": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9855
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "10853": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9860
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10854": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9860
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10855": {
      "fn": "ERC721._mint",
      "offset": [
        9859,
        9860
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "10857": {
      "fn": "ERC721._mint",
      "offset": [
        9859,
        9860
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "10858": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9855
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10859": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9860
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A75"
    },
    "10862": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9860
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10863": {
      "fn": "ERC721._mint",
      "offset": [
        9859,
        9860
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10864": {
      "fn": "ERC721._mint",
      "offset": [
        9859,
        9860
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10865": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9860
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30CD"
    },
    "10868": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9842,
        9860
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10869": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9860
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10870": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9860
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10871": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9860
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10872": {
      "fn": "ERC721._mint",
      "offset": [
        9842,
        9860
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "10873": {
      "op": "POP"
    },
    "10874": {
      "op": "POP"
    },
    "10875": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9886
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 139,
      "value": "0x0"
    },
    "10877": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9886
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10878": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9886
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10879": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9886
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10880": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9877
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "10882": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10884": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9886
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10885": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10887": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9886
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10888": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9886
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10889": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9886
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "10890": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10891": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9891
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10898": {
      "op": "SHL"
    },
    "10899": {
      "op": "SUB"
    },
    "10900": {
      "op": "NOT"
    },
    "10901": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9891
      ],
      "op": "AND",
      "path": "5"
    },
    "10902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10908": {
      "op": "SHL"
    },
    "10909": {
      "op": "SUB"
    },
    "10910": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9891
      ],
      "op": "DUP7",
      "path": "5"
    },
    "10911": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9891
      ],
      "op": "AND",
      "path": "5"
    },
    "10912": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10913": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10914": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9891
      ],
      "op": "OR",
      "path": "5"
    },
    "10915": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10916": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10917": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9891
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "10918": {
      "fn": "ERC721._mint",
      "offset": [
        9907,
        9940
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 140
    },
    "10919": {
      "fn": "ERC721._mint",
      "offset": [
        9907,
        9940
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10920": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9886
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10921": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9886
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "10922": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9886
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10923": {
      "fn": "ERC721._mint",
      "offset": [
        9907,
        9940
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "10956": {
      "fn": "ERC721._mint",
      "offset": [
        9907,
        9940
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10957": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9886
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10958": {
      "fn": "ERC721._mint",
      "offset": [
        9870,
        9886
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10959": {
      "fn": "ERC721._mint",
      "offset": [
        9907,
        9940
      ],
      "op": "LOG4",
      "path": "5"
    },
    "10960": {
      "fn": "ERC721._mint",
      "offset": [
        9575,
        9947
      ],
      "op": "POP",
      "path": "5"
    },
    "10961": {
      "fn": "ERC721._mint",
      "offset": [
        9575,
        9947
      ],
      "op": "POP",
      "path": "5"
    },
    "10962": {
      "fn": "ERC721._mint",
      "jump": "o",
      "offset": [
        9575,
        9947
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10963": {
      "op": "JUMPDEST"
    },
    "10964": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10966": {
      "op": "DUP1"
    },
    "10967": {
      "op": "MLOAD"
    },
    "10968": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "10971": {
      "op": "DUP2"
    },
    "10972": {
      "op": "ADD"
    },
    "10973": {
      "op": "DUP3"
    },
    "10974": {
      "op": "MSTORE"
    },
    "10975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10977": {
      "op": "DUP1"
    },
    "10978": {
      "op": "DUP3"
    },
    "10979": {
      "op": "MSTORE"
    },
    "10980": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10982": {
      "op": "DUP3"
    },
    "10983": {
      "op": "ADD"
    },
    "10984": {
      "op": "DUP2"
    },
    "10985": {
      "op": "SWAP1"
    },
    "10986": {
      "op": "MSTORE"
    },
    "10987": {
      "op": "SWAP2"
    },
    "10988": {
      "op": "DUP2"
    },
    "10989": {
      "op": "ADD"
    },
    "10990": {
      "op": "DUP3"
    },
    "10991": {
      "op": "SWAP1"
    },
    "10992": {
      "op": "MSTORE"
    },
    "10993": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10995": {
      "op": "DUP2"
    },
    "10996": {
      "op": "ADD"
    },
    "10997": {
      "op": "DUP3"
    },
    "10998": {
      "op": "SWAP1"
    },
    "10999": {
      "op": "MSTORE"
    },
    "11000": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11002": {
      "op": "DUP2"
    },
    "11003": {
      "op": "ADD"
    },
    "11004": {
      "op": "DUP3"
    },
    "11005": {
      "op": "SWAP1"
    },
    "11006": {
      "op": "MSTORE"
    },
    "11007": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11009": {
      "op": "DUP2"
    },
    "11010": {
      "op": "ADD"
    },
    "11011": {
      "op": "DUP3"
    },
    "11012": {
      "op": "SWAP1"
    },
    "11013": {
      "op": "MSTORE"
    },
    "11014": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11016": {
      "op": "DUP2"
    },
    "11017": {
      "op": "ADD"
    },
    "11018": {
      "op": "DUP3"
    },
    "11019": {
      "op": "SWAP1"
    },
    "11020": {
      "op": "MSTORE"
    },
    "11021": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11023": {
      "op": "DUP2"
    },
    "11024": {
      "op": "ADD"
    },
    "11025": {
      "op": "DUP3"
    },
    "11026": {
      "op": "SWAP1"
    },
    "11027": {
      "op": "MSTORE"
    },
    "11028": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11031": {
      "op": "DUP2"
    },
    "11032": {
      "op": "ADD"
    },
    "11033": {
      "op": "SWAP2"
    },
    "11034": {
      "op": "SWAP1"
    },
    "11035": {
      "op": "SWAP2"
    },
    "11036": {
      "op": "MSTORE"
    },
    "11037": {
      "op": "SWAP1"
    },
    "11038": {
      "jump": "o",
      "op": "JUMP"
    },
    "11039": {
      "op": "JUMPDEST"
    },
    "11040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11042": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11044": {
      "op": "DUP3"
    },
    "11045": {
      "op": "DUP5"
    },
    "11046": {
      "op": "SUB"
    },
    "11047": {
      "op": "SLT"
    },
    "11048": {
      "op": "ISZERO"
    },
    "11049": {
      "op": "PUSH2",
      "value": "0x2B31"
    },
    "11052": {
      "op": "JUMPI"
    },
    "11053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11055": {
      "op": "DUP1"
    },
    "11056": {
      "op": "REVERT"
    },
    "11057": {
      "op": "JUMPDEST"
    },
    "11058": {
      "op": "DUP2"
    },
    "11059": {
      "op": "CALLDATALOAD"
    },
    "11060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11064": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11066": {
      "op": "SHL"
    },
    "11067": {
      "op": "SUB"
    },
    "11068": {
      "op": "NOT"
    },
    "11069": {
      "op": "DUP2"
    },
    "11070": {
      "op": "AND"
    },
    "11071": {
      "op": "DUP2"
    },
    "11072": {
      "op": "EQ"
    },
    "11073": {
      "op": "PUSH2",
      "value": "0x2391"
    },
    "11076": {
      "op": "JUMPI"
    },
    "11077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11079": {
      "op": "DUP1"
    },
    "11080": {
      "op": "REVERT"
    },
    "11081": {
      "op": "JUMPDEST"
    },
    "11082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11084": {
      "op": "JUMPDEST"
    },
    "11085": {
      "op": "DUP4"
    },
    "11086": {
      "op": "DUP2"
    },
    "11087": {
      "op": "LT"
    },
    "11088": {
      "op": "ISZERO"
    },
    "11089": {
      "op": "PUSH2",
      "value": "0x2B64"
    },
    "11092": {
      "op": "JUMPI"
    },
    "11093": {
      "op": "DUP2"
    },
    "11094": {
      "op": "DUP2"
    },
    "11095": {
      "op": "ADD"
    },
    "11096": {
      "op": "MLOAD"
    },
    "11097": {
      "op": "DUP4"
    },
    "11098": {
      "op": "DUP3"
    },
    "11099": {
      "op": "ADD"
    },
    "11100": {
      "op": "MSTORE"
    },
    "11101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11103": {
      "op": "ADD"
    },
    "11104": {
      "op": "PUSH2",
      "value": "0x2B4C"
    },
    "11107": {
      "op": "JUMP"
    },
    "11108": {
      "op": "JUMPDEST"
    },
    "11109": {
      "op": "DUP4"
    },
    "11110": {
      "op": "DUP2"
    },
    "11111": {
      "op": "GT"
    },
    "11112": {
      "op": "ISZERO"
    },
    "11113": {
      "op": "PUSH2",
      "value": "0x1A56"
    },
    "11116": {
      "op": "JUMPI"
    },
    "11117": {
      "op": "POP"
    },
    "11118": {
      "op": "POP"
    },
    "11119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11121": {
      "op": "SWAP2"
    },
    "11122": {
      "op": "ADD"
    },
    "11123": {
      "op": "MSTORE"
    },
    "11124": {
      "jump": "o",
      "op": "JUMP"
    },
    "11125": {
      "op": "JUMPDEST"
    },
    "11126": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11128": {
      "op": "DUP2"
    },
    "11129": {
      "op": "MSTORE"
    },
    "11130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11132": {
      "op": "DUP3"
    },
    "11133": {
      "op": "MLOAD"
    },
    "11134": {
      "op": "DUP1"
    },
    "11135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11137": {
      "op": "DUP5"
    },
    "11138": {
      "op": "ADD"
    },
    "11139": {
      "op": "MSTORE"
    },
    "11140": {
      "op": "PUSH2",
      "value": "0x2B94"
    },
    "11143": {
      "op": "DUP2"
    },
    "11144": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11146": {
      "op": "DUP6"
    },
    "11147": {
      "op": "ADD"
    },
    "11148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11150": {
      "op": "DUP8"
    },
    "11151": {
      "op": "ADD"
    },
    "11152": {
      "op": "PUSH2",
      "value": "0x2B49"
    },
    "11155": {
      "jump": "i",
      "op": "JUMP"
    },
    "11156": {
      "op": "JUMPDEST"
    },
    "11157": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11159": {
      "op": "ADD"
    },
    "11160": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11162": {
      "op": "NOT"
    },
    "11163": {
      "op": "AND"
    },
    "11164": {
      "op": "SWAP2"
    },
    "11165": {
      "op": "SWAP1"
    },
    "11166": {
      "op": "SWAP2"
    },
    "11167": {
      "op": "ADD"
    },
    "11168": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11170": {
      "op": "ADD"
    },
    "11171": {
      "op": "SWAP3"
    },
    "11172": {
      "op": "SWAP2"
    },
    "11173": {
      "op": "POP"
    },
    "11174": {
      "op": "POP"
    },
    "11175": {
      "jump": "o",
      "op": "JUMP"
    },
    "11176": {
      "op": "JUMPDEST"
    },
    "11177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11179": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11181": {
      "op": "DUP3"
    },
    "11182": {
      "op": "DUP5"
    },
    "11183": {
      "op": "SUB"
    },
    "11184": {
      "op": "SLT"
    },
    "11185": {
      "op": "ISZERO"
    },
    "11186": {
      "op": "PUSH2",
      "value": "0x2BBA"
    },
    "11189": {
      "op": "JUMPI"
    },
    "11190": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11192": {
      "op": "DUP1"
    },
    "11193": {
      "op": "REVERT"
    },
    "11194": {
      "op": "JUMPDEST"
    },
    "11195": {
      "op": "POP"
    },
    "11196": {
      "op": "CALLDATALOAD"
    },
    "11197": {
      "op": "SWAP2"
    },
    "11198": {
      "op": "SWAP1"
    },
    "11199": {
      "op": "POP"
    },
    "11200": {
      "jump": "o",
      "op": "JUMP"
    },
    "11201": {
      "op": "JUMPDEST"
    },
    "11202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11208": {
      "op": "SHL"
    },
    "11209": {
      "op": "SUB"
    },
    "11210": {
      "op": "DUP2"
    },
    "11211": {
      "op": "AND"
    },
    "11212": {
      "op": "DUP2"
    },
    "11213": {
      "op": "EQ"
    },
    "11214": {
      "op": "PUSH2",
      "value": "0xC87"
    },
    "11217": {
      "op": "JUMPI"
    },
    "11218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11220": {
      "op": "DUP1"
    },
    "11221": {
      "op": "REVERT"
    },
    "11222": {
      "op": "JUMPDEST"
    },
    "11223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11227": {
      "op": "DUP3"
    },
    "11228": {
      "op": "DUP5"
    },
    "11229": {
      "op": "SUB"
    },
    "11230": {
      "op": "SLT"
    },
    "11231": {
      "op": "ISZERO"
    },
    "11232": {
      "op": "PUSH2",
      "value": "0x2BE8"
    },
    "11235": {
      "op": "JUMPI"
    },
    "11236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11238": {
      "op": "DUP1"
    },
    "11239": {
      "op": "REVERT"
    },
    "11240": {
      "op": "JUMPDEST"
    },
    "11241": {
      "op": "DUP2"
    },
    "11242": {
      "op": "CALLDATALOAD"
    },
    "11243": {
      "op": "PUSH2",
      "value": "0x2391"
    },
    "11246": {
      "op": "DUP2"
    },
    "11247": {
      "op": "PUSH2",
      "value": "0x2BC1"
    },
    "11250": {
      "jump": "i",
      "op": "JUMP"
    },
    "11251": {
      "op": "JUMPDEST"
    },
    "11252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11254": {
      "op": "DUP1"
    },
    "11255": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11257": {
      "op": "DUP4"
    },
    "11258": {
      "op": "DUP6"
    },
    "11259": {
      "op": "SUB"
    },
    "11260": {
      "op": "SLT"
    },
    "11261": {
      "op": "ISZERO"
    },
    "11262": {
      "op": "PUSH2",
      "value": "0x2C06"
    },
    "11265": {
      "op": "JUMPI"
    },
    "11266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11268": {
      "op": "DUP1"
    },
    "11269": {
      "op": "REVERT"
    },
    "11270": {
      "op": "JUMPDEST"
    },
    "11271": {
      "op": "DUP3"
    },
    "11272": {
      "op": "CALLDATALOAD"
    },
    "11273": {
      "op": "PUSH2",
      "value": "0x2C11"
    },
    "11276": {
      "op": "DUP2"
    },
    "11277": {
      "op": "PUSH2",
      "value": "0x2BC1"
    },
    "11280": {
      "jump": "i",
      "op": "JUMP"
    },
    "11281": {
      "op": "JUMPDEST"
    },
    "11282": {
      "op": "SWAP5"
    },
    "11283": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11285": {
      "op": "SWAP4"
    },
    "11286": {
      "op": "SWAP1"
    },
    "11287": {
      "op": "SWAP4"
    },
    "11288": {
      "op": "ADD"
    },
    "11289": {
      "op": "CALLDATALOAD"
    },
    "11290": {
      "op": "SWAP4"
    },
    "11291": {
      "op": "POP"
    },
    "11292": {
      "op": "POP"
    },
    "11293": {
      "op": "POP"
    },
    "11294": {
      "jump": "o",
      "op": "JUMP"
    },
    "11295": {
      "op": "JUMPDEST"
    },
    "11296": {
      "op": "DUP1"
    },
    "11297": {
      "op": "CALLDATALOAD"
    },
    "11298": {
      "op": "DUP1"
    },
    "11299": {
      "op": "ISZERO"
    },
    "11300": {
      "op": "ISZERO"
    },
    "11301": {
      "op": "DUP2"
    },
    "11302": {
      "op": "EQ"
    },
    "11303": {
      "op": "PUSH2",
      "value": "0x2C2F"
    },
    "11306": {
      "op": "JUMPI"
    },
    "11307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11309": {
      "op": "DUP1"
    },
    "11310": {
      "op": "REVERT"
    },
    "11311": {
      "op": "JUMPDEST"
    },
    "11312": {
      "op": "SWAP2"
    },
    "11313": {
      "op": "SWAP1"
    },
    "11314": {
      "op": "POP"
    },
    "11315": {
      "jump": "o",
      "op": "JUMP"
    },
    "11316": {
      "op": "JUMPDEST"
    },
    "11317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11319": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11321": {
      "op": "DUP3"
    },
    "11322": {
      "op": "DUP5"
    },
    "11323": {
      "op": "SUB"
    },
    "11324": {
      "op": "SLT"
    },
    "11325": {
      "op": "ISZERO"
    },
    "11326": {
      "op": "PUSH2",
      "value": "0x2C46"
    },
    "11329": {
      "op": "JUMPI"
    },
    "11330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11332": {
      "op": "DUP1"
    },
    "11333": {
      "op": "REVERT"
    },
    "11334": {
      "op": "JUMPDEST"
    },
    "11335": {
      "op": "PUSH2",
      "value": "0x2391"
    },
    "11338": {
      "op": "DUP3"
    },
    "11339": {
      "op": "PUSH2",
      "value": "0x2C1F"
    },
    "11342": {
      "jump": "i",
      "op": "JUMP"
    },
    "11343": {
      "op": "JUMPDEST"
    },
    "11344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11346": {
      "op": "DUP1"
    },
    "11347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11349": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11351": {
      "op": "DUP5"
    },
    "11352": {
      "op": "DUP7"
    },
    "11353": {
      "op": "SUB"
    },
    "11354": {
      "op": "SLT"
    },
    "11355": {
      "op": "ISZERO"
    },
    "11356": {
      "op": "PUSH2",
      "value": "0x2C64"
    },
    "11359": {
      "op": "JUMPI"
    },
    "11360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11362": {
      "op": "DUP1"
    },
    "11363": {
      "op": "REVERT"
    },
    "11364": {
      "op": "JUMPDEST"
    },
    "11365": {
      "op": "DUP4"
    },
    "11366": {
      "op": "CALLDATALOAD"
    },
    "11367": {
      "op": "PUSH2",
      "value": "0x2C6F"
    },
    "11370": {
      "op": "DUP2"
    },
    "11371": {
      "op": "PUSH2",
      "value": "0x2BC1"
    },
    "11374": {
      "jump": "i",
      "op": "JUMP"
    },
    "11375": {
      "op": "JUMPDEST"
    },
    "11376": {
      "op": "SWAP3"
    },
    "11377": {
      "op": "POP"
    },
    "11378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11380": {
      "op": "DUP5"
    },
    "11381": {
      "op": "ADD"
    },
    "11382": {
      "op": "CALLDATALOAD"
    },
    "11383": {
      "op": "PUSH2",
      "value": "0x2C7F"
    },
    "11386": {
      "op": "DUP2"
    },
    "11387": {
      "op": "PUSH2",
      "value": "0x2BC1"
    },
    "11390": {
      "jump": "i",
      "op": "JUMP"
    },
    "11391": {
      "op": "JUMPDEST"
    },
    "11392": {
      "op": "SWAP3"
    },
    "11393": {
      "op": "SWAP6"
    },
    "11394": {
      "op": "SWAP3"
    },
    "11395": {
      "op": "SWAP5"
    },
    "11396": {
      "op": "POP"
    },
    "11397": {
      "op": "POP"
    },
    "11398": {
      "op": "POP"
    },
    "11399": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11401": {
      "op": "SWAP2"
    },
    "11402": {
      "op": "SWAP1"
    },
    "11403": {
      "op": "SWAP2"
    },
    "11404": {
      "op": "ADD"
    },
    "11405": {
      "op": "CALLDATALOAD"
    },
    "11406": {
      "op": "SWAP1"
    },
    "11407": {
      "jump": "o",
      "op": "JUMP"
    },
    "11408": {
      "op": "JUMPDEST"
    },
    "11409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11411": {
      "op": "DUP1"
    },
    "11412": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11414": {
      "op": "DUP4"
    },
    "11415": {
      "op": "DUP6"
    },
    "11416": {
      "op": "SUB"
    },
    "11417": {
      "op": "SLT"
    },
    "11418": {
      "op": "ISZERO"
    },
    "11419": {
      "op": "PUSH2",
      "value": "0x2CA3"
    },
    "11422": {
      "op": "JUMPI"
    },
    "11423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11425": {
      "op": "DUP1"
    },
    "11426": {
      "op": "REVERT"
    },
    "11427": {
      "op": "JUMPDEST"
    },
    "11428": {
      "op": "DUP3"
    },
    "11429": {
      "op": "CALLDATALOAD"
    },
    "11430": {
      "op": "SWAP2"
    },
    "11431": {
      "op": "POP"
    },
    "11432": {
      "op": "PUSH2",
      "value": "0x2CB3"
    },
    "11435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11437": {
      "op": "DUP5"
    },
    "11438": {
      "op": "ADD"
    },
    "11439": {
      "op": "PUSH2",
      "value": "0x2C1F"
    },
    "11442": {
      "jump": "i",
      "op": "JUMP"
    },
    "11443": {
      "op": "JUMPDEST"
    },
    "11444": {
      "op": "SWAP1"
    },
    "11445": {
      "op": "POP"
    },
    "11446": {
      "op": "SWAP3"
    },
    "11447": {
      "op": "POP"
    },
    "11448": {
      "op": "SWAP3"
    },
    "11449": {
      "op": "SWAP1"
    },
    "11450": {
      "op": "POP"
    },
    "11451": {
      "jump": "o",
      "op": "JUMP"
    },
    "11452": {
      "op": "JUMPDEST"
    },
    "11453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11455": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "11458": {
      "op": "DUP3"
    },
    "11459": {
      "op": "ADD"
    },
    "11460": {
      "op": "SWAP1"
    },
    "11461": {
      "op": "POP"
    },
    "11462": {
      "op": "DUP3"
    },
    "11463": {
      "op": "MLOAD"
    },
    "11464": {
      "op": "ISZERO"
    },
    "11465": {
      "op": "ISZERO"
    },
    "11466": {
      "op": "DUP3"
    },
    "11467": {
      "op": "MSTORE"
    },
    "11468": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11470": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11472": {
      "op": "DUP5"
    },
    "11473": {
      "op": "ADD"
    },
    "11474": {
      "op": "MLOAD"
    },
    "11475": {
      "op": "AND"
    },
    "11476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11478": {
      "op": "DUP4"
    },
    "11479": {
      "op": "ADD"
    },
    "11480": {
      "op": "MSTORE"
    },
    "11481": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11483": {
      "op": "DUP4"
    },
    "11484": {
      "op": "ADD"
    },
    "11485": {
      "op": "MLOAD"
    },
    "11486": {
      "op": "PUSH2",
      "value": "0x2CEC"
    },
    "11489": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11491": {
      "op": "DUP5"
    },
    "11492": {
      "op": "ADD"
    },
    "11493": {
      "op": "DUP3"
    },
    "11494": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11496": {
      "op": "AND"
    },
    "11497": {
      "op": "SWAP1"
    },
    "11498": {
      "op": "MSTORE"
    },
    "11499": {
      "op": "JUMP"
    },
    "11500": {
      "op": "JUMPDEST"
    },
    "11501": {
      "op": "POP"
    },
    "11502": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11504": {
      "op": "DUP4"
    },
    "11505": {
      "op": "ADD"
    },
    "11506": {
      "op": "MLOAD"
    },
    "11507": {
      "op": "PUSH2",
      "value": "0x2D01"
    },
    "11510": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11512": {
      "op": "DUP5"
    },
    "11513": {
      "op": "ADD"
    },
    "11514": {
      "op": "DUP3"
    },
    "11515": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11517": {
      "op": "AND"
    },
    "11518": {
      "op": "SWAP1"
    },
    "11519": {
      "op": "MSTORE"
    },
    "11520": {
      "op": "JUMP"
    },
    "11521": {
      "op": "JUMPDEST"
    },
    "11522": {
      "op": "POP"
    },
    "11523": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11525": {
      "op": "DUP4"
    },
    "11526": {
      "op": "ADD"
    },
    "11527": {
      "op": "MLOAD"
    },
    "11528": {
      "op": "PUSH2",
      "value": "0x2D16"
    },
    "11531": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11533": {
      "op": "DUP5"
    },
    "11534": {
      "op": "ADD"
    },
    "11535": {
      "op": "DUP3"
    },
    "11536": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11538": {
      "op": "AND"
    },
    "11539": {
      "op": "SWAP1"
    },
    "11540": {
      "op": "MSTORE"
    },
    "11541": {
      "op": "JUMP"
    },
    "11542": {
      "op": "JUMPDEST"
    },
    "11543": {
      "op": "POP"
    },
    "11544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11546": {
      "op": "DUP4"
    },
    "11547": {
      "op": "ADD"
    },
    "11548": {
      "op": "MLOAD"
    },
    "11549": {
      "op": "PUSH2",
      "value": "0x2D2B"
    },
    "11552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11554": {
      "op": "DUP5"
    },
    "11555": {
      "op": "ADD"
    },
    "11556": {
      "op": "DUP3"
    },
    "11557": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11559": {
      "op": "AND"
    },
    "11560": {
      "op": "SWAP1"
    },
    "11561": {
      "op": "MSTORE"
    },
    "11562": {
      "op": "JUMP"
    },
    "11563": {
      "op": "JUMPDEST"
    },
    "11564": {
      "op": "POP"
    },
    "11565": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11567": {
      "op": "DUP4"
    },
    "11568": {
      "op": "ADD"
    },
    "11569": {
      "op": "MLOAD"
    },
    "11570": {
      "op": "PUSH2",
      "value": "0x2D40"
    },
    "11573": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11575": {
      "op": "DUP5"
    },
    "11576": {
      "op": "ADD"
    },
    "11577": {
      "op": "DUP3"
    },
    "11578": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11580": {
      "op": "AND"
    },
    "11581": {
      "op": "SWAP1"
    },
    "11582": {
      "op": "MSTORE"
    },
    "11583": {
      "op": "JUMP"
    },
    "11584": {
      "op": "JUMPDEST"
    },
    "11585": {
      "op": "POP"
    },
    "11586": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11588": {
      "op": "DUP4"
    },
    "11589": {
      "op": "ADD"
    },
    "11590": {
      "op": "MLOAD"
    },
    "11591": {
      "op": "PUSH2",
      "value": "0x2D55"
    },
    "11594": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11596": {
      "op": "DUP5"
    },
    "11597": {
      "op": "ADD"
    },
    "11598": {
      "op": "DUP3"
    },
    "11599": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11601": {
      "op": "AND"
    },
    "11602": {
      "op": "SWAP1"
    },
    "11603": {
      "op": "MSTORE"
    },
    "11604": {
      "op": "JUMP"
    },
    "11605": {
      "op": "JUMPDEST"
    },
    "11606": {
      "op": "POP"
    },
    "11607": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11610": {
      "op": "SWAP3"
    },
    "11611": {
      "op": "DUP4"
    },
    "11612": {
      "op": "ADD"
    },
    "11613": {
      "op": "MLOAD"
    },
    "11614": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11616": {
      "op": "AND"
    },
    "11617": {
      "op": "SWAP2"
    },
    "11618": {
      "op": "SWAP1"
    },
    "11619": {
      "op": "SWAP3"
    },
    "11620": {
      "op": "ADD"
    },
    "11621": {
      "op": "MSTORE"
    },
    "11622": {
      "op": "SWAP1"
    },
    "11623": {
      "jump": "o",
      "op": "JUMP"
    },
    "11624": {
      "op": "JUMPDEST"
    },
    "11625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11627": {
      "op": "DUP1"
    },
    "11628": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11630": {
      "op": "DUP4"
    },
    "11631": {
      "op": "DUP6"
    },
    "11632": {
      "op": "SUB"
    },
    "11633": {
      "op": "SLT"
    },
    "11634": {
      "op": "ISZERO"
    },
    "11635": {
      "op": "PUSH2",
      "value": "0x2D7B"
    },
    "11638": {
      "op": "JUMPI"
    },
    "11639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11641": {
      "op": "DUP1"
    },
    "11642": {
      "op": "REVERT"
    },
    "11643": {
      "op": "JUMPDEST"
    },
    "11644": {
      "op": "DUP3"
    },
    "11645": {
      "op": "CALLDATALOAD"
    },
    "11646": {
      "op": "PUSH2",
      "value": "0x2D86"
    },
    "11649": {
      "op": "DUP2"
    },
    "11650": {
      "op": "PUSH2",
      "value": "0x2BC1"
    },
    "11653": {
      "jump": "i",
      "op": "JUMP"
    },
    "11654": {
      "op": "JUMPDEST"
    },
    "11655": {
      "op": "SWAP2"
    },
    "11656": {
      "op": "POP"
    },
    "11657": {
      "op": "PUSH2",
      "value": "0x2CB3"
    },
    "11660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11662": {
      "op": "DUP5"
    },
    "11663": {
      "op": "ADD"
    },
    "11664": {
      "op": "PUSH2",
      "value": "0x2C1F"
    },
    "11667": {
      "jump": "i",
      "op": "JUMP"
    },
    "11668": {
      "op": "JUMPDEST"
    },
    "11669": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11674": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11676": {
      "op": "SHL"
    },
    "11677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11679": {
      "op": "MSTORE"
    },
    "11680": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "11682": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11684": {
      "op": "MSTORE"
    },
    "11685": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11689": {
      "op": "REVERT"
    },
    "11690": {
      "op": "JUMPDEST"
    },
    "11691": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11693": {
      "op": "MLOAD"
    },
    "11694": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11696": {
      "op": "DUP3"
    },
    "11697": {
      "op": "ADD"
    },
    "11698": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11700": {
      "op": "NOT"
    },
    "11701": {
      "op": "AND"
    },
    "11702": {
      "op": "DUP2"
    },
    "11703": {
      "op": "ADD"
    },
    "11704": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11713": {
      "op": "DUP2"
    },
    "11714": {
      "op": "GT"
    },
    "11715": {
      "op": "DUP3"
    },
    "11716": {
      "op": "DUP3"
    },
    "11717": {
      "op": "LT"
    },
    "11718": {
      "op": "OR"
    },
    "11719": {
      "op": "ISZERO"
    },
    "11720": {
      "op": "PUSH2",
      "value": "0x2DD3"
    },
    "11723": {
      "op": "JUMPI"
    },
    "11724": {
      "op": "PUSH2",
      "value": "0x2DD3"
    },
    "11727": {
      "op": "PUSH2",
      "value": "0x2D94"
    },
    "11730": {
      "jump": "i",
      "op": "JUMP"
    },
    "11731": {
      "op": "JUMPDEST"
    },
    "11732": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11734": {
      "op": "MSTORE"
    },
    "11735": {
      "op": "SWAP2"
    },
    "11736": {
      "op": "SWAP1"
    },
    "11737": {
      "op": "POP"
    },
    "11738": {
      "jump": "o",
      "op": "JUMP"
    },
    "11739": {
      "op": "JUMPDEST"
    },
    "11740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11742": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11751": {
      "op": "DUP3"
    },
    "11752": {
      "op": "GT"
    },
    "11753": {
      "op": "ISZERO"
    },
    "11754": {
      "op": "PUSH2",
      "value": "0x2DF5"
    },
    "11757": {
      "op": "JUMPI"
    },
    "11758": {
      "op": "PUSH2",
      "value": "0x2DF5"
    },
    "11761": {
      "op": "PUSH2",
      "value": "0x2D94"
    },
    "11764": {
      "jump": "i",
      "op": "JUMP"
    },
    "11765": {
      "op": "JUMPDEST"
    },
    "11766": {
      "op": "POP"
    },
    "11767": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11769": {
      "op": "ADD"
    },
    "11770": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11772": {
      "op": "NOT"
    },
    "11773": {
      "op": "AND"
    },
    "11774": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11776": {
      "op": "ADD"
    },
    "11777": {
      "op": "SWAP1"
    },
    "11778": {
      "jump": "o",
      "op": "JUMP"
    },
    "11779": {
      "op": "JUMPDEST"
    },
    "11780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11782": {
      "op": "DUP1"
    },
    "11783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11785": {
      "op": "DUP1"
    },
    "11786": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11788": {
      "op": "DUP6"
    },
    "11789": {
      "op": "DUP8"
    },
    "11790": {
      "op": "SUB"
    },
    "11791": {
      "op": "SLT"
    },
    "11792": {
      "op": "ISZERO"
    },
    "11793": {
      "op": "PUSH2",
      "value": "0x2E19"
    },
    "11796": {
      "op": "JUMPI"
    },
    "11797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11799": {
      "op": "DUP1"
    },
    "11800": {
      "op": "REVERT"
    },
    "11801": {
      "op": "JUMPDEST"
    },
    "11802": {
      "op": "DUP5"
    },
    "11803": {
      "op": "CALLDATALOAD"
    },
    "11804": {
      "op": "PUSH2",
      "value": "0x2E24"
    },
    "11807": {
      "op": "DUP2"
    },
    "11808": {
      "op": "PUSH2",
      "value": "0x2BC1"
    },
    "11811": {
      "jump": "i",
      "op": "JUMP"
    },
    "11812": {
      "op": "JUMPDEST"
    },
    "11813": {
      "op": "SWAP4"
    },
    "11814": {
      "op": "POP"
    },
    "11815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11817": {
      "op": "DUP6"
    },
    "11818": {
      "op": "ADD"
    },
    "11819": {
      "op": "CALLDATALOAD"
    },
    "11820": {
      "op": "PUSH2",
      "value": "0x2E34"
    },
    "11823": {
      "op": "DUP2"
    },
    "11824": {
      "op": "PUSH2",
      "value": "0x2BC1"
    },
    "11827": {
      "jump": "i",
      "op": "JUMP"
    },
    "11828": {
      "op": "JUMPDEST"
    },
    "11829": {
      "op": "SWAP3"
    },
    "11830": {
      "op": "POP"
    },
    "11831": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11833": {
      "op": "DUP6"
    },
    "11834": {
      "op": "ADD"
    },
    "11835": {
      "op": "CALLDATALOAD"
    },
    "11836": {
      "op": "SWAP2"
    },
    "11837": {
      "op": "POP"
    },
    "11838": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11840": {
      "op": "DUP6"
    },
    "11841": {
      "op": "ADD"
    },
    "11842": {
      "op": "CALLDATALOAD"
    },
    "11843": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11852": {
      "op": "DUP2"
    },
    "11853": {
      "op": "GT"
    },
    "11854": {
      "op": "ISZERO"
    },
    "11855": {
      "op": "PUSH2",
      "value": "0x2E57"
    },
    "11858": {
      "op": "JUMPI"
    },
    "11859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11861": {
      "op": "DUP1"
    },
    "11862": {
      "op": "REVERT"
    },
    "11863": {
      "op": "JUMPDEST"
    },
    "11864": {
      "op": "DUP6"
    },
    "11865": {
      "op": "ADD"
    },
    "11866": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11868": {
      "op": "DUP2"
    },
    "11869": {
      "op": "ADD"
    },
    "11870": {
      "op": "DUP8"
    },
    "11871": {
      "op": "SGT"
    },
    "11872": {
      "op": "PUSH2",
      "value": "0x2E68"
    },
    "11875": {
      "op": "JUMPI"
    },
    "11876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11878": {
      "op": "DUP1"
    },
    "11879": {
      "op": "REVERT"
    },
    "11880": {
      "op": "JUMPDEST"
    },
    "11881": {
      "op": "DUP1"
    },
    "11882": {
      "op": "CALLDATALOAD"
    },
    "11883": {
      "op": "PUSH2",
      "value": "0x2E7B"
    },
    "11886": {
      "op": "PUSH2",
      "value": "0x2E76"
    },
    "11889": {
      "op": "DUP3"
    },
    "11890": {
      "op": "PUSH2",
      "value": "0x2DDB"
    },
    "11893": {
      "jump": "i",
      "op": "JUMP"
    },
    "11894": {
      "op": "JUMPDEST"
    },
    "11895": {
      "op": "PUSH2",
      "value": "0x2DAA"
    },
    "11898": {
      "jump": "i",
      "op": "JUMP"
    },
    "11899": {
      "op": "JUMPDEST"
    },
    "11900": {
      "op": "DUP2"
    },
    "11901": {
      "op": "DUP2"
    },
    "11902": {
      "op": "MSTORE"
    },
    "11903": {
      "op": "DUP9"
    },
    "11904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11906": {
      "op": "DUP4"
    },
    "11907": {
      "op": "DUP6"
    },
    "11908": {
      "op": "ADD"
    },
    "11909": {
      "op": "ADD"
    },
    "11910": {
      "op": "GT"
    },
    "11911": {
      "op": "ISZERO"
    },
    "11912": {
      "op": "PUSH2",
      "value": "0x2E90"
    },
    "11915": {
      "op": "JUMPI"
    },
    "11916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11918": {
      "op": "DUP1"
    },
    "11919": {
      "op": "REVERT"
    },
    "11920": {
      "op": "JUMPDEST"
    },
    "11921": {
      "op": "DUP2"
    },
    "11922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11924": {
      "op": "DUP5"
    },
    "11925": {
      "op": "ADD"
    },
    "11926": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11928": {
      "op": "DUP4"
    },
    "11929": {
      "op": "ADD"
    },
    "11930": {
      "op": "CALLDATACOPY"
    },
    "11931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11933": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11935": {
      "op": "DUP4"
    },
    "11936": {
      "op": "DUP4"
    },
    "11937": {
      "op": "ADD"
    },
    "11938": {
      "op": "ADD"
    },
    "11939": {
      "op": "MSTORE"
    },
    "11940": {
      "op": "DUP1"
    },
    "11941": {
      "op": "SWAP4"
    },
    "11942": {
      "op": "POP"
    },
    "11943": {
      "op": "POP"
    },
    "11944": {
      "op": "POP"
    },
    "11945": {
      "op": "POP"
    },
    "11946": {
      "op": "SWAP3"
    },
    "11947": {
      "op": "SWAP6"
    },
    "11948": {
      "op": "SWAP2"
    },
    "11949": {
      "op": "SWAP5"
    },
    "11950": {
      "op": "POP"
    },
    "11951": {
      "op": "SWAP3"
    },
    "11952": {
      "op": "POP"
    },
    "11953": {
      "jump": "o",
      "op": "JUMP"
    },
    "11954": {
      "op": "JUMPDEST"
    },
    "11955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11957": {
      "op": "DUP1"
    },
    "11958": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11960": {
      "op": "DUP4"
    },
    "11961": {
      "op": "DUP6"
    },
    "11962": {
      "op": "SUB"
    },
    "11963": {
      "op": "SLT"
    },
    "11964": {
      "op": "ISZERO"
    },
    "11965": {
      "op": "PUSH2",
      "value": "0x2EC5"
    },
    "11968": {
      "op": "JUMPI"
    },
    "11969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11971": {
      "op": "DUP1"
    },
    "11972": {
      "op": "REVERT"
    },
    "11973": {
      "op": "JUMPDEST"
    },
    "11974": {
      "op": "DUP3"
    },
    "11975": {
      "op": "CALLDATALOAD"
    },
    "11976": {
      "op": "PUSH2",
      "value": "0x2ED0"
    },
    "11979": {
      "op": "DUP2"
    },
    "11980": {
      "op": "PUSH2",
      "value": "0x2BC1"
    },
    "11983": {
      "jump": "i",
      "op": "JUMP"
    },
    "11984": {
      "op": "JUMPDEST"
    },
    "11985": {
      "op": "SWAP2"
    },
    "11986": {
      "op": "POP"
    },
    "11987": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11989": {
      "op": "DUP4"
    },
    "11990": {
      "op": "ADD"
    },
    "11991": {
      "op": "CALLDATALOAD"
    },
    "11992": {
      "op": "PUSH2",
      "value": "0x2EE0"
    },
    "11995": {
      "op": "DUP2"
    },
    "11996": {
      "op": "PUSH2",
      "value": "0x2BC1"
    },
    "11999": {
      "jump": "i",
      "op": "JUMP"
    },
    "12000": {
      "op": "JUMPDEST"
    },
    "12001": {
      "op": "DUP1"
    },
    "12002": {
      "op": "SWAP2"
    },
    "12003": {
      "op": "POP"
    },
    "12004": {
      "op": "POP"
    },
    "12005": {
      "op": "SWAP3"
    },
    "12006": {
      "op": "POP"
    },
    "12007": {
      "op": "SWAP3"
    },
    "12008": {
      "op": "SWAP1"
    },
    "12009": {
      "op": "POP"
    },
    "12010": {
      "jump": "o",
      "op": "JUMP"
    },
    "12011": {
      "op": "JUMPDEST"
    },
    "12012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12016": {
      "op": "DUP1"
    },
    "12017": {
      "op": "DUP4"
    },
    "12018": {
      "op": "DUP6"
    },
    "12019": {
      "op": "SUB"
    },
    "12020": {
      "op": "SLT"
    },
    "12021": {
      "op": "ISZERO"
    },
    "12022": {
      "op": "PUSH2",
      "value": "0x2EFE"
    },
    "12025": {
      "op": "JUMPI"
    },
    "12026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12028": {
      "op": "DUP1"
    },
    "12029": {
      "op": "REVERT"
    },
    "12030": {
      "op": "JUMPDEST"
    },
    "12031": {
      "op": "DUP3"
    },
    "12032": {
      "op": "CALLDATALOAD"
    },
    "12033": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12042": {
      "op": "DUP1"
    },
    "12043": {
      "op": "DUP3"
    },
    "12044": {
      "op": "GT"
    },
    "12045": {
      "op": "ISZERO"
    },
    "12046": {
      "op": "PUSH2",
      "value": "0x2F16"
    },
    "12049": {
      "op": "JUMPI"
    },
    "12050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12052": {
      "op": "DUP1"
    },
    "12053": {
      "op": "REVERT"
    },
    "12054": {
      "op": "JUMPDEST"
    },
    "12055": {
      "op": "DUP2"
    },
    "12056": {
      "op": "DUP6"
    },
    "12057": {
      "op": "ADD"
    },
    "12058": {
      "op": "SWAP2"
    },
    "12059": {
      "op": "POP"
    },
    "12060": {
      "op": "DUP6"
    },
    "12061": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12063": {
      "op": "DUP4"
    },
    "12064": {
      "op": "ADD"
    },
    "12065": {
      "op": "SLT"
    },
    "12066": {
      "op": "PUSH2",
      "value": "0x2F2A"
    },
    "12069": {
      "op": "JUMPI"
    },
    "12070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12072": {
      "op": "DUP1"
    },
    "12073": {
      "op": "REVERT"
    },
    "12074": {
      "op": "JUMPDEST"
    },
    "12075": {
      "op": "DUP2"
    },
    "12076": {
      "op": "CALLDATALOAD"
    },
    "12077": {
      "op": "DUP2"
    },
    "12078": {
      "op": "DUP2"
    },
    "12079": {
      "op": "GT"
    },
    "12080": {
      "op": "ISZERO"
    },
    "12081": {
      "op": "PUSH2",
      "value": "0x2F3C"
    },
    "12084": {
      "op": "JUMPI"
    },
    "12085": {
      "op": "PUSH2",
      "value": "0x2F3C"
    },
    "12088": {
      "op": "PUSH2",
      "value": "0x2D94"
    },
    "12091": {
      "jump": "i",
      "op": "JUMP"
    },
    "12092": {
      "op": "JUMPDEST"
    },
    "12093": {
      "op": "DUP1"
    },
    "12094": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12096": {
      "op": "SHL"
    },
    "12097": {
      "op": "SWAP2"
    },
    "12098": {
      "op": "POP"
    },
    "12099": {
      "op": "PUSH2",
      "value": "0x2F4D"
    },
    "12102": {
      "op": "DUP5"
    },
    "12103": {
      "op": "DUP4"
    },
    "12104": {
      "op": "ADD"
    },
    "12105": {
      "op": "PUSH2",
      "value": "0x2DAA"
    },
    "12108": {
      "jump": "i",
      "op": "JUMP"
    },
    "12109": {
      "op": "JUMPDEST"
    },
    "12110": {
      "op": "DUP2"
    },
    "12111": {
      "op": "DUP2"
    },
    "12112": {
      "op": "MSTORE"
    },
    "12113": {
      "op": "SWAP2"
    },
    "12114": {
      "op": "DUP4"
    },
    "12115": {
      "op": "ADD"
    },
    "12116": {
      "op": "DUP5"
    },
    "12117": {
      "op": "ADD"
    },
    "12118": {
      "op": "SWAP2"
    },
    "12119": {
      "op": "DUP5"
    },
    "12120": {
      "op": "DUP2"
    },
    "12121": {
      "op": "ADD"
    },
    "12122": {
      "op": "SWAP1"
    },
    "12123": {
      "op": "DUP9"
    },
    "12124": {
      "op": "DUP5"
    },
    "12125": {
      "op": "GT"
    },
    "12126": {
      "op": "ISZERO"
    },
    "12127": {
      "op": "PUSH2",
      "value": "0x2F67"
    },
    "12130": {
      "op": "JUMPI"
    },
    "12131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12133": {
      "op": "DUP1"
    },
    "12134": {
      "op": "REVERT"
    },
    "12135": {
      "op": "JUMPDEST"
    },
    "12136": {
      "op": "SWAP4"
    },
    "12137": {
      "op": "DUP6"
    },
    "12138": {
      "op": "ADD"
    },
    "12139": {
      "op": "SWAP4"
    },
    "12140": {
      "op": "JUMPDEST"
    },
    "12141": {
      "op": "DUP4"
    },
    "12142": {
      "op": "DUP6"
    },
    "12143": {
      "op": "LT"
    },
    "12144": {
      "op": "ISZERO"
    },
    "12145": {
      "op": "PUSH2",
      "value": "0x2F91"
    },
    "12148": {
      "op": "JUMPI"
    },
    "12149": {
      "op": "DUP5"
    },
    "12150": {
      "op": "CALLDATALOAD"
    },
    "12151": {
      "op": "SWAP3"
    },
    "12152": {
      "op": "POP"
    },
    "12153": {
      "op": "PUSH2",
      "value": "0x2F81"
    },
    "12156": {
      "op": "DUP4"
    },
    "12157": {
      "op": "PUSH2",
      "value": "0x2BC1"
    },
    "12160": {
      "jump": "i",
      "op": "JUMP"
    },
    "12161": {
      "op": "JUMPDEST"
    },
    "12162": {
      "op": "DUP3"
    },
    "12163": {
      "op": "DUP3"
    },
    "12164": {
      "op": "MSTORE"
    },
    "12165": {
      "op": "SWAP4"
    },
    "12166": {
      "op": "DUP6"
    },
    "12167": {
      "op": "ADD"
    },
    "12168": {
      "op": "SWAP4"
    },
    "12169": {
      "op": "SWAP1"
    },
    "12170": {
      "op": "DUP6"
    },
    "12171": {
      "op": "ADD"
    },
    "12172": {
      "op": "SWAP1"
    },
    "12173": {
      "op": "PUSH2",
      "value": "0x2F6C"
    },
    "12176": {
      "op": "JUMP"
    },
    "12177": {
      "op": "JUMPDEST"
    },
    "12178": {
      "op": "SWAP9"
    },
    "12179": {
      "op": "SWAP8"
    },
    "12180": {
      "op": "POP"
    },
    "12181": {
      "op": "POP"
    },
    "12182": {
      "op": "POP"
    },
    "12183": {
      "op": "POP"
    },
    "12184": {
      "op": "POP"
    },
    "12185": {
      "op": "POP"
    },
    "12186": {
      "op": "POP"
    },
    "12187": {
      "op": "POP"
    },
    "12188": {
      "jump": "o",
      "op": "JUMP"
    },
    "12189": {
      "op": "JUMPDEST"
    },
    "12190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12192": {
      "op": "DUP2"
    },
    "12193": {
      "op": "DUP2"
    },
    "12194": {
      "op": "SHR"
    },
    "12195": {
      "op": "SWAP1"
    },
    "12196": {
      "op": "DUP3"
    },
    "12197": {
      "op": "AND"
    },
    "12198": {
      "op": "DUP1"
    },
    "12199": {
      "op": "PUSH2",
      "value": "0x2FB1"
    },
    "12202": {
      "op": "JUMPI"
    },
    "12203": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "12205": {
      "op": "DUP3"
    },
    "12206": {
      "op": "AND"
    },
    "12207": {
      "op": "SWAP2"
    },
    "12208": {
      "op": "POP"
    },
    "12209": {
      "op": "JUMPDEST"
    },
    "12210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12212": {
      "op": "DUP3"
    },
    "12213": {
      "op": "LT"
    },
    "12214": {
      "op": "DUP2"
    },
    "12215": {
      "op": "EQ"
    },
    "12216": {
      "op": "ISZERO"
    },
    "12217": {
      "op": "PUSH2",
      "value": "0x26BE"
    },
    "12220": {
      "op": "JUMPI"
    },
    "12221": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12226": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12228": {
      "op": "SHL"
    },
    "12229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12231": {
      "op": "MSTORE"
    },
    "12232": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "12234": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12236": {
      "op": "MSTORE"
    },
    "12237": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12241": {
      "op": "REVERT"
    },
    "12242": {
      "op": "JUMPDEST"
    },
    "12243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12245": {
      "op": "DUP1"
    },
    "12246": {
      "op": "DUP3"
    },
    "12247": {
      "op": "MSTORE"
    },
    "12248": {
      "op": "DUP2"
    },
    "12249": {
      "op": "DUP2"
    },
    "12250": {
      "op": "ADD"
    },
    "12251": {
      "op": "MSTORE"
    },
    "12252": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "12285": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12287": {
      "op": "DUP3"
    },
    "12288": {
      "op": "ADD"
    },
    "12289": {
      "op": "MSTORE"
    },
    "12290": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12292": {
      "op": "ADD"
    },
    "12293": {
      "op": "SWAP1"
    },
    "12294": {
      "jump": "o",
      "op": "JUMP"
    },
    "12295": {
      "op": "JUMPDEST"
    },
    "12296": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12298": {
      "op": "DUP1"
    },
    "12299": {
      "op": "DUP3"
    },
    "12300": {
      "op": "MSTORE"
    },
    "12301": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "12303": {
      "op": "SWAP1"
    },
    "12304": {
      "op": "DUP3"
    },
    "12305": {
      "op": "ADD"
    },
    "12306": {
      "op": "MSTORE"
    },
    "12307": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "12340": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12342": {
      "op": "DUP3"
    },
    "12343": {
      "op": "ADD"
    },
    "12344": {
      "op": "MSTORE"
    },
    "12345": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "12363": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "12365": {
      "op": "SHL"
    },
    "12366": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12368": {
      "op": "DUP3"
    },
    "12369": {
      "op": "ADD"
    },
    "12370": {
      "op": "MSTORE"
    },
    "12371": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12373": {
      "op": "ADD"
    },
    "12374": {
      "op": "SWAP1"
    },
    "12375": {
      "jump": "o",
      "op": "JUMP"
    },
    "12376": {
      "op": "JUMPDEST"
    },
    "12377": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12382": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12384": {
      "op": "SHL"
    },
    "12385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12387": {
      "op": "MSTORE"
    },
    "12388": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "12390": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12392": {
      "op": "MSTORE"
    },
    "12393": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12397": {
      "op": "REVERT"
    },
    "12398": {
      "op": "JUMPDEST"
    },
    "12399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12401": {
      "op": "DUP2"
    },
    "12402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12404": {
      "op": "NOT"
    },
    "12405": {
      "op": "DIV"
    },
    "12406": {
      "op": "DUP4"
    },
    "12407": {
      "op": "GT"
    },
    "12408": {
      "op": "DUP3"
    },
    "12409": {
      "op": "ISZERO"
    },
    "12410": {
      "op": "ISZERO"
    },
    "12411": {
      "op": "AND"
    },
    "12412": {
      "op": "ISZERO"
    },
    "12413": {
      "op": "PUSH2",
      "value": "0x3088"
    },
    "12416": {
      "op": "JUMPI"
    },
    "12417": {
      "op": "PUSH2",
      "value": "0x3088"
    },
    "12420": {
      "op": "PUSH2",
      "value": "0x3058"
    },
    "12423": {
      "jump": "i",
      "op": "JUMP"
    },
    "12424": {
      "op": "JUMPDEST"
    },
    "12425": {
      "op": "POP"
    },
    "12426": {
      "op": "MUL"
    },
    "12427": {
      "op": "SWAP1"
    },
    "12428": {
      "jump": "o",
      "op": "JUMP"
    },
    "12429": {
      "op": "JUMPDEST"
    },
    "12430": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12435": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12437": {
      "op": "SHL"
    },
    "12438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12440": {
      "op": "MSTORE"
    },
    "12441": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "12443": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12445": {
      "op": "MSTORE"
    },
    "12446": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12450": {
      "op": "REVERT"
    },
    "12451": {
      "op": "JUMPDEST"
    },
    "12452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12454": {
      "op": "DUP3"
    },
    "12455": {
      "op": "PUSH2",
      "value": "0x30B2"
    },
    "12458": {
      "op": "JUMPI"
    },
    "12459": {
      "op": "PUSH2",
      "value": "0x30B2"
    },
    "12462": {
      "op": "PUSH2",
      "value": "0x308D"
    },
    "12465": {
      "jump": "i",
      "op": "JUMP"
    },
    "12466": {
      "op": "JUMPDEST"
    },
    "12467": {
      "op": "POP"
    },
    "12468": {
      "op": "DIV"
    },
    "12469": {
      "op": "SWAP1"
    },
    "12470": {
      "jump": "o",
      "op": "JUMP"
    },
    "12471": {
      "op": "JUMPDEST"
    },
    "12472": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12477": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12479": {
      "op": "SHL"
    },
    "12480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12482": {
      "op": "MSTORE"
    },
    "12483": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "12485": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12487": {
      "op": "MSTORE"
    },
    "12488": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12492": {
      "op": "REVERT"
    },
    "12493": {
      "op": "JUMPDEST"
    },
    "12494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12496": {
      "op": "DUP3"
    },
    "12497": {
      "op": "NOT"
    },
    "12498": {
      "op": "DUP3"
    },
    "12499": {
      "op": "GT"
    },
    "12500": {
      "op": "ISZERO"
    },
    "12501": {
      "op": "PUSH2",
      "value": "0x30E0"
    },
    "12504": {
      "op": "JUMPI"
    },
    "12505": {
      "op": "PUSH2",
      "value": "0x30E0"
    },
    "12508": {
      "op": "PUSH2",
      "value": "0x3058"
    },
    "12511": {
      "jump": "i",
      "op": "JUMP"
    },
    "12512": {
      "op": "JUMPDEST"
    },
    "12513": {
      "op": "POP"
    },
    "12514": {
      "op": "ADD"
    },
    "12515": {
      "op": "SWAP1"
    },
    "12516": {
      "jump": "o",
      "op": "JUMP"
    },
    "12517": {
      "op": "JUMPDEST"
    },
    "12518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12520": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12523": {
      "op": "DUP1"
    },
    "12524": {
      "op": "DUP4"
    },
    "12525": {
      "op": "AND"
    },
    "12526": {
      "op": "DUP2"
    },
    "12527": {
      "op": "DUP2"
    },
    "12528": {
      "op": "EQ"
    },
    "12529": {
      "op": "ISZERO"
    },
    "12530": {
      "op": "PUSH2",
      "value": "0x30FD"
    },
    "12533": {
      "op": "JUMPI"
    },
    "12534": {
      "op": "PUSH2",
      "value": "0x30FD"
    },
    "12537": {
      "op": "PUSH2",
      "value": "0x3058"
    },
    "12540": {
      "jump": "i",
      "op": "JUMP"
    },
    "12541": {
      "op": "JUMPDEST"
    },
    "12542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12544": {
      "op": "ADD"
    },
    "12545": {
      "op": "SWAP4"
    },
    "12546": {
      "op": "SWAP3"
    },
    "12547": {
      "op": "POP"
    },
    "12548": {
      "op": "POP"
    },
    "12549": {
      "op": "POP"
    },
    "12550": {
      "jump": "o",
      "op": "JUMP"
    },
    "12551": {
      "op": "JUMPDEST"
    },
    "12552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12556": {
      "op": "DUP3"
    },
    "12557": {
      "op": "DUP5"
    },
    "12558": {
      "op": "SUB"
    },
    "12559": {
      "op": "SLT"
    },
    "12560": {
      "op": "ISZERO"
    },
    "12561": {
      "op": "PUSH2",
      "value": "0x3119"
    },
    "12564": {
      "op": "JUMPI"
    },
    "12565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12567": {
      "op": "DUP1"
    },
    "12568": {
      "op": "REVERT"
    },
    "12569": {
      "op": "JUMPDEST"
    },
    "12570": {
      "op": "POP"
    },
    "12571": {
      "op": "MLOAD"
    },
    "12572": {
      "op": "SWAP2"
    },
    "12573": {
      "op": "SWAP1"
    },
    "12574": {
      "op": "POP"
    },
    "12575": {
      "jump": "o",
      "op": "JUMP"
    },
    "12576": {
      "op": "JUMPDEST"
    },
    "12577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12581": {
      "op": "NOT"
    },
    "12582": {
      "op": "DUP3"
    },
    "12583": {
      "op": "EQ"
    },
    "12584": {
      "op": "ISZERO"
    },
    "12585": {
      "op": "PUSH2",
      "value": "0x3134"
    },
    "12588": {
      "op": "JUMPI"
    },
    "12589": {
      "op": "PUSH2",
      "value": "0x3134"
    },
    "12592": {
      "op": "PUSH2",
      "value": "0x3058"
    },
    "12595": {
      "jump": "i",
      "op": "JUMP"
    },
    "12596": {
      "op": "JUMPDEST"
    },
    "12597": {
      "op": "POP"
    },
    "12598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12600": {
      "op": "ADD"
    },
    "12601": {
      "op": "SWAP1"
    },
    "12602": {
      "jump": "o",
      "op": "JUMP"
    },
    "12603": {
      "op": "JUMPDEST"
    },
    "12604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12610": {
      "op": "SHL"
    },
    "12611": {
      "op": "SUB"
    },
    "12612": {
      "op": "DUP4"
    },
    "12613": {
      "op": "AND"
    },
    "12614": {
      "op": "DUP2"
    },
    "12615": {
      "op": "MSTORE"
    },
    "12616": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12620": {
      "op": "DUP1"
    },
    "12621": {
      "op": "DUP4"
    },
    "12622": {
      "op": "ADD"
    },
    "12623": {
      "op": "DUP3"
    },
    "12624": {
      "op": "SWAP1"
    },
    "12625": {
      "op": "MSTORE"
    },
    "12626": {
      "op": "DUP4"
    },
    "12627": {
      "op": "MLOAD"
    },
    "12628": {
      "op": "SWAP2"
    },
    "12629": {
      "op": "DUP4"
    },
    "12630": {
      "op": "ADD"
    },
    "12631": {
      "op": "DUP3"
    },
    "12632": {
      "op": "SWAP1"
    },
    "12633": {
      "op": "MSTORE"
    },
    "12634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12636": {
      "op": "SWAP2"
    },
    "12637": {
      "op": "DUP5"
    },
    "12638": {
      "op": "DUP3"
    },
    "12639": {
      "op": "ADD"
    },
    "12640": {
      "op": "SWAP2"
    },
    "12641": {
      "op": "SWAP1"
    },
    "12642": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12644": {
      "op": "DUP6"
    },
    "12645": {
      "op": "ADD"
    },
    "12646": {
      "op": "SWAP1"
    },
    "12647": {
      "op": "DUP5"
    },
    "12648": {
      "op": "JUMPDEST"
    },
    "12649": {
      "op": "DUP2"
    },
    "12650": {
      "op": "DUP2"
    },
    "12651": {
      "op": "LT"
    },
    "12652": {
      "op": "ISZERO"
    },
    "12653": {
      "op": "PUSH2",
      "value": "0x3188"
    },
    "12656": {
      "op": "JUMPI"
    },
    "12657": {
      "op": "DUP5"
    },
    "12658": {
      "op": "MLOAD"
    },
    "12659": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12662": {
      "op": "AND"
    },
    "12663": {
      "op": "DUP4"
    },
    "12664": {
      "op": "MSTORE"
    },
    "12665": {
      "op": "SWAP4"
    },
    "12666": {
      "op": "DUP4"
    },
    "12667": {
      "op": "ADD"
    },
    "12668": {
      "op": "SWAP4"
    },
    "12669": {
      "op": "SWAP2"
    },
    "12670": {
      "op": "DUP4"
    },
    "12671": {
      "op": "ADD"
    },
    "12672": {
      "op": "SWAP2"
    },
    "12673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12675": {
      "op": "ADD"
    },
    "12676": {
      "op": "PUSH2",
      "value": "0x3168"
    },
    "12679": {
      "op": "JUMP"
    },
    "12680": {
      "op": "JUMPDEST"
    },
    "12681": {
      "op": "POP"
    },
    "12682": {
      "op": "SWAP1"
    },
    "12683": {
      "op": "SWAP8"
    },
    "12684": {
      "op": "SWAP7"
    },
    "12685": {
      "op": "POP"
    },
    "12686": {
      "op": "POP"
    },
    "12687": {
      "op": "POP"
    },
    "12688": {
      "op": "POP"
    },
    "12689": {
      "op": "POP"
    },
    "12690": {
      "op": "POP"
    },
    "12691": {
      "op": "POP"
    },
    "12692": {
      "jump": "o",
      "op": "JUMP"
    },
    "12693": {
      "op": "JUMPDEST"
    },
    "12694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12698": {
      "op": "DUP3"
    },
    "12699": {
      "op": "DUP5"
    },
    "12700": {
      "op": "SUB"
    },
    "12701": {
      "op": "SLT"
    },
    "12702": {
      "op": "ISZERO"
    },
    "12703": {
      "op": "PUSH2",
      "value": "0x31A7"
    },
    "12706": {
      "op": "JUMPI"
    },
    "12707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12709": {
      "op": "DUP1"
    },
    "12710": {
      "op": "REVERT"
    },
    "12711": {
      "op": "JUMPDEST"
    },
    "12712": {
      "op": "DUP2"
    },
    "12713": {
      "op": "MLOAD"
    },
    "12714": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12723": {
      "op": "DUP2"
    },
    "12724": {
      "op": "GT"
    },
    "12725": {
      "op": "ISZERO"
    },
    "12726": {
      "op": "PUSH2",
      "value": "0x31BE"
    },
    "12729": {
      "op": "JUMPI"
    },
    "12730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12732": {
      "op": "DUP1"
    },
    "12733": {
      "op": "REVERT"
    },
    "12734": {
      "op": "JUMPDEST"
    },
    "12735": {
      "op": "DUP3"
    },
    "12736": {
      "op": "ADD"
    },
    "12737": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12739": {
      "op": "DUP2"
    },
    "12740": {
      "op": "ADD"
    },
    "12741": {
      "op": "DUP5"
    },
    "12742": {
      "op": "SGT"
    },
    "12743": {
      "op": "PUSH2",
      "value": "0x31CF"
    },
    "12746": {
      "op": "JUMPI"
    },
    "12747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12749": {
      "op": "DUP1"
    },
    "12750": {
      "op": "REVERT"
    },
    "12751": {
      "op": "JUMPDEST"
    },
    "12752": {
      "op": "DUP1"
    },
    "12753": {
      "op": "MLOAD"
    },
    "12754": {
      "op": "PUSH2",
      "value": "0x31DD"
    },
    "12757": {
      "op": "PUSH2",
      "value": "0x2E76"
    },
    "12760": {
      "op": "DUP3"
    },
    "12761": {
      "op": "PUSH2",
      "value": "0x2DDB"
    },
    "12764": {
      "jump": "i",
      "op": "JUMP"
    },
    "12765": {
      "op": "JUMPDEST"
    },
    "12766": {
      "op": "DUP2"
    },
    "12767": {
      "op": "DUP2"
    },
    "12768": {
      "op": "MSTORE"
    },
    "12769": {
      "op": "DUP6"
    },
    "12770": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12772": {
      "op": "DUP4"
    },
    "12773": {
      "op": "DUP6"
    },
    "12774": {
      "op": "ADD"
    },
    "12775": {
      "op": "ADD"
    },
    "12776": {
      "op": "GT"
    },
    "12777": {
      "op": "ISZERO"
    },
    "12778": {
      "op": "PUSH2",
      "value": "0x31F2"
    },
    "12781": {
      "op": "JUMPI"
    },
    "12782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12784": {
      "op": "DUP1"
    },
    "12785": {
      "op": "REVERT"
    },
    "12786": {
      "op": "JUMPDEST"
    },
    "12787": {
      "op": "PUSH2",
      "value": "0x3203"
    },
    "12790": {
      "op": "DUP3"
    },
    "12791": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12793": {
      "op": "DUP4"
    },
    "12794": {
      "op": "ADD"
    },
    "12795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12797": {
      "op": "DUP7"
    },
    "12798": {
      "op": "ADD"
    },
    "12799": {
      "op": "PUSH2",
      "value": "0x2B49"
    },
    "12802": {
      "jump": "i",
      "op": "JUMP"
    },
    "12803": {
      "op": "JUMPDEST"
    },
    "12804": {
      "op": "SWAP6"
    },
    "12805": {
      "op": "SWAP5"
    },
    "12806": {
      "op": "POP"
    },
    "12807": {
      "op": "POP"
    },
    "12808": {
      "op": "POP"
    },
    "12809": {
      "op": "POP"
    },
    "12810": {
      "op": "POP"
    },
    "12811": {
      "jump": "o",
      "op": "JUMP"
    },
    "12812": {
      "op": "JUMPDEST"
    },
    "12813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12815": {
      "op": "DUP3"
    },
    "12816": {
      "op": "DUP3"
    },
    "12817": {
      "op": "LT"
    },
    "12818": {
      "op": "ISZERO"
    },
    "12819": {
      "op": "PUSH2",
      "value": "0x321E"
    },
    "12822": {
      "op": "JUMPI"
    },
    "12823": {
      "op": "PUSH2",
      "value": "0x321E"
    },
    "12826": {
      "op": "PUSH2",
      "value": "0x3058"
    },
    "12829": {
      "jump": "i",
      "op": "JUMP"
    },
    "12830": {
      "op": "JUMPDEST"
    },
    "12831": {
      "op": "POP"
    },
    "12832": {
      "op": "SUB"
    },
    "12833": {
      "op": "SWAP1"
    },
    "12834": {
      "jump": "o",
      "op": "JUMP"
    },
    "12835": {
      "op": "JUMPDEST"
    },
    "12836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12838": {
      "op": "DUP3"
    },
    "12839": {
      "op": "PUSH2",
      "value": "0x3232"
    },
    "12842": {
      "op": "JUMPI"
    },
    "12843": {
      "op": "PUSH2",
      "value": "0x3232"
    },
    "12846": {
      "op": "PUSH2",
      "value": "0x308D"
    },
    "12849": {
      "jump": "i",
      "op": "JUMP"
    },
    "12850": {
      "op": "JUMPDEST"
    },
    "12851": {
      "op": "POP"
    },
    "12852": {
      "op": "MOD"
    },
    "12853": {
      "op": "SWAP1"
    },
    "12854": {
      "jump": "o",
      "op": "JUMP"
    },
    "12855": {
      "op": "JUMPDEST"
    },
    "12856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12860": {
      "op": "DUP3"
    },
    "12861": {
      "op": "DUP5"
    },
    "12862": {
      "op": "SUB"
    },
    "12863": {
      "op": "SLT"
    },
    "12864": {
      "op": "ISZERO"
    },
    "12865": {
      "op": "PUSH2",
      "value": "0x3249"
    },
    "12868": {
      "op": "JUMPI"
    },
    "12869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12871": {
      "op": "DUP1"
    },
    "12872": {
      "op": "REVERT"
    },
    "12873": {
      "op": "JUMPDEST"
    },
    "12874": {
      "op": "DUP2"
    },
    "12875": {
      "op": "MLOAD"
    },
    "12876": {
      "op": "PUSH2",
      "value": "0x2391"
    },
    "12879": {
      "op": "DUP2"
    },
    "12880": {
      "op": "PUSH2",
      "value": "0x2BC1"
    },
    "12883": {
      "jump": "i",
      "op": "JUMP"
    },
    "12884": {
      "op": "JUMPDEST"
    },
    "12885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12887": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12889": {
      "op": "DUP3"
    },
    "12890": {
      "op": "AND"
    },
    "12891": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12893": {
      "op": "DUP5"
    },
    "12894": {
      "op": "AND"
    },
    "12895": {
      "op": "DUP1"
    },
    "12896": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12898": {
      "op": "SUB"
    },
    "12899": {
      "op": "DUP3"
    },
    "12900": {
      "op": "GT"
    },
    "12901": {
      "op": "ISZERO"
    },
    "12902": {
      "op": "PUSH2",
      "value": "0x3271"
    },
    "12905": {
      "op": "JUMPI"
    },
    "12906": {
      "op": "PUSH2",
      "value": "0x3271"
    },
    "12909": {
      "op": "PUSH2",
      "value": "0x3058"
    },
    "12912": {
      "jump": "i",
      "op": "JUMP"
    },
    "12913": {
      "op": "JUMPDEST"
    },
    "12914": {
      "op": "ADD"
    },
    "12915": {
      "op": "SWAP4"
    },
    "12916": {
      "op": "SWAP3"
    },
    "12917": {
      "op": "POP"
    },
    "12918": {
      "op": "POP"
    },
    "12919": {
      "op": "POP"
    },
    "12920": {
      "jump": "o",
      "op": "JUMP"
    },
    "12921": {
      "op": "JUMPDEST"
    },
    "12922": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12927": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12929": {
      "op": "SHL"
    },
    "12930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12932": {
      "op": "MSTORE"
    },
    "12933": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "12935": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12937": {
      "op": "MSTORE"
    },
    "12938": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12942": {
      "op": "REVERT"
    },
    "12943": {
      "op": "JUMPDEST"
    },
    "12944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12946": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12948": {
      "op": "DUP3"
    },
    "12949": {
      "op": "DUP5"
    },
    "12950": {
      "op": "SUB"
    },
    "12951": {
      "op": "SLT"
    },
    "12952": {
      "op": "ISZERO"
    },
    "12953": {
      "op": "PUSH2",
      "value": "0x32A1"
    },
    "12956": {
      "op": "JUMPI"
    },
    "12957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12959": {
      "op": "DUP1"
    },
    "12960": {
      "op": "REVERT"
    },
    "12961": {
      "op": "JUMPDEST"
    },
    "12962": {
      "op": "DUP2"
    },
    "12963": {
      "op": "MLOAD"
    },
    "12964": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12966": {
      "op": "DUP2"
    },
    "12967": {
      "op": "AND"
    },
    "12968": {
      "op": "DUP2"
    },
    "12969": {
      "op": "EQ"
    },
    "12970": {
      "op": "PUSH2",
      "value": "0x2391"
    },
    "12973": {
      "op": "JUMPI"
    },
    "12974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12976": {
      "op": "DUP1"
    },
    "12977": {
      "op": "REVERT"
    }
  },
  "sha1": "e4a8c45b2b01e37839f379f5110f0044cd2152e6",
  "source": "// SPDX-License-Identifier: MIT LICENSE\n\npragma solidity ^0.8.0;\n\nimport \"./Ownable.sol\";\nimport \"./Pauseable.sol\";\nimport \"./ERC721Enumerable.sol\";\nimport \"./IPoliceAndThief.sol\";\nimport \"./IBank.sol\";\nimport \"./ITraits.sol\";\nimport \"./ILOOT.sol\";\nimport \"./Pauseable.sol\";\nimport \"./ISeed.sol\";\n\ncontract PoliceAndThief is\n    IPoliceAndThief,\n    ERC721Enumerable,\n    Ownable,\n    Pauseable\n{\n    // mint price\n    uint256 public MINT_PRICE = 1.7 ether;\n    uint256 public MAX_MINT = 30;\n    // max number of tokens that can be minted - 50000 in production\n    uint256 public immutable MAX_TOKENS;\n    // number of tokens that can be claimed for free - 20% of MAX_TOKENS\n    uint256 public PAID_TOKENS;\n    // number of tokens have been minted so far\n    uint16 public minted;\n\n    // mapping from tokenId to a struct containing the token's traits\n    mapping(uint256 => ThiefPolice) public tokenTraits;\n    // mapping from hashed(tokenTrait) to the tokenId it's associated with\n    // used to ensure there are no duplicates\n    mapping(uint256 => uint256) public existingCombinations;\n\n    // list of probabilities for each trait type\n    // 0 - 9 are associated with Thief, 10 - 18 are associated with Polices\n    uint8[18] public rarities;\n    // 0 - 9 are associated with Thief, 10 - 18 are associated with Polices\n\n    // reference to the Bank for choosing random Police thieves\n    IBank public bank;\n    // reference to $LOOT for burning on mint\n    ILOOT public loot;\n    // reference to Traits\n    ITraits public traits;\n\n    ISeed public randomSource;\n\n    bool private _reentrant = false;\n\n    mapping(address => bool) public inWhitelist;\n\n    bool public onlyWhitelist = true;\n    bool public stakingActive = false;\n\n    uint256 public whitelistLimit = 3000;\n    uint256 public mintedWithWhitelist = 0;\n\n    modifier nonReentrant() {\n        require(!_reentrant, \"No reentrancy\");\n        _reentrant = true;\n        _;\n        _reentrant = false;\n    }\n\n    /**\n     * instantiates contract and rarity tables\n     */\n    constructor(\n        ILOOT _loot,\n        ITraits _traits,\n        uint256 _maxTokens\n    ) ERC721(\"Police Game\", \"WGAME\") {\n        loot = _loot;\n        traits = _traits;\n\n        MAX_TOKENS = _maxTokens;\n        PAID_TOKENS = _maxTokens / 5;\n    }\n\n    function setRandomSource(ISeed _seed) external onlyOwner {\n        randomSource = _seed;\n    }\n\n    /***EXTERNAL */\n\n    /**\n     * mint a token - 90% Thief, 10% Polices\n     * The first 20% are free to claim, the remaining cost $LOOT\n     */\n    function mint(uint256 amount, bool stake)\n        external\n        payable\n        nonReentrant\n        whenNotPaused\n    {\n        require(!stake || stakingActive, \"Staking not activated\");\n\n        if (onlyWhitelist) {\n            require(inWhitelist[msg.sender], \"Not whitelisted\");\n        }\n\n        require(tx.origin == _msgSender(), \"Only EOA\");\n        require(minted + amount <= MAX_TOKENS, \"All tokens minted\");\n        require(amount > 0 && amount <= MAX_MINT, \"Invalid mint amount\");\n\n        if (minted < PAID_TOKENS) {\n            require(\n                minted + amount <= PAID_TOKENS,\n                \"All tokens on-sale already sold\"\n            );\n            require(amount * MINT_PRICE == msg.value, \"Invalid payment amount\");\n        } else {\n            require(msg.value == 0);\n        }\n\n        uint256 totalLootCost = 0;\n        uint16[] memory tokenIds = new uint16[](amount);\n        address[] memory owners = new address[](amount);\n        uint256 seed;\n        uint256 firstMinted = minted;\n\n        for (uint256 i = 0; i < amount; i++) {\n            minted++;\n            seed = random(minted);\n            randomSource.update(minted ^ seed);\n            generate(minted, seed);\n            address recipient = selectRecipient(seed);\n            totalLootCost += mintCost(minted);\n            if (!stake || recipient != _msgSender()) {\n                owners[i] = recipient;\n            } else {\n                tokenIds[i] = minted;\n                owners[i] = address(bank);\n            }\n\n            if (onlyWhitelist) {\n                mintedWithWhitelist += 1;\n            }\n        }\n\n        if (totalLootCost > 0) loot.burn(_msgSender(), totalLootCost);\n\n        for (uint256 i = 0; i < owners.length; i++) {\n            uint256 id = firstMinted + i + 1;\n            if (!stake || owners[i] != _msgSender()) {\n                _safeMint(owners[i], id);\n            }\n        }\n        if (stake) bank.addManyToBankAndPack(_msgSender(), tokenIds);\n    }\n\n    /**\n     * the first 20% are paid in AVAX\n     * the next 20% are 20000 $LOOT\n     * the next 40% are 40000 $LOOT\n     * the final 20% are 80000 $LOOT\n     * @param tokenId the ID to check the cost of to mint\n     * @return the cost of the given token ID\n     */\n    function mintCost(uint256 tokenId) public view returns (uint256) {\n        if (tokenId <= PAID_TOKENS) return 0;\n        if (tokenId <= (MAX_TOKENS * 2) / 5) return 20000 ether;\n        if (tokenId <= (MAX_TOKENS * 4) / 5) return 40000 ether;\n        return 60000 ether;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override nonReentrant {\n        // Hardcode the Bank's approval so that users don't have to waste gas approving\n        if (_msgSender() != address(bank))\n            require(\n                _isApprovedOrOwner(_msgSender(), tokenId),\n                \"ERC721: transfer caller is not owner nor approved\"\n            );\n        _transfer(from, to, tokenId);\n    }\n\n    /***INTERNAL */\n\n    /**\n     * generates traits for a specific token, checking to make sure it's unique\n     * @param tokenId the id of the token to generate traits for\n     * @param seed a pseudorandom 256 bit number to derive traits from\n     * @return t - a struct of traits for the given token ID\n     */\n    function generate(uint256 tokenId, uint256 seed)\n        internal\n        returns (ThiefPolice memory t)\n    {\n        t = selectTraits(seed);\n        if (existingCombinations[structToHash(t)] == 0) {\n            tokenTraits[tokenId] = t;\n            existingCombinations[structToHash(t)] = tokenId;\n            return t;\n        }\n        return generate(tokenId, random(seed));\n    }\n\n    /**\n     * uses A.J. Walker's Alias algorithm for O(1) rarity table lookup\n     * ensuring O(1) instead of O(n) reduces mint cost by more than 50%\n     * probability & alias tables are generated off-chain beforehand\n     * @param seed portion of the 256 bit seed to remove trait correlation\n     * @param traitType the trait type to select a trait for\n     * @return the ID of the randomly selected trait\n     */\n    function selectTrait(uint16 seed, uint8 traitType)\n        internal\n        view\n        returns (uint8)\n    {\n        return traits.selectTrait(seed, traitType);\n    }\n\n    /**\n     * the first 20% (ETH purchases) go to the minter\n     * the remaining 80% have a 10% chance to be given to a random staked police\n     * @param seed a random value to select a recipient from\n     * @return the address of the recipient (either the minter or the Police thief's owner)\n     */\n    function selectRecipient(uint256 seed) internal view returns (address) {\n        if (minted <= PAID_TOKENS || ((seed >> 245) % 10) != 0)\n            return _msgSender();\n        // top 10 bits haven't been used\n        address thief = bank.randomPoliceOwner(seed >> 144);\n        // 144 bits reserved for trait selection\n        if (thief == address(0x0)) return _msgSender();\n        return thief;\n    }\n\n    /**\n     * selects the species and all of its traits based on the seed value\n     * @param seed a pseudorandom 256 bit number to derive traits from\n     * @return t -  a struct of randomly selected traits\n     */\n    function selectTraits(uint256 seed)\n        internal\n        view\n        returns (ThiefPolice memory t)\n    {\n        t.isThief = (seed & 0xFFFF) % 10 != 0;\n        uint8 shift = t.isThief ? 0 : 10;\n\n        seed >>= 16;\n        t.uniform = selectTrait(uint16(seed & 0xFFFF), 0 + shift);\n\n        seed >>= 16;\n        t.hair = selectTrait(uint16(seed & 0xFFFF), 1 + shift);\n\n        seed >>= 16;\n        t.facialHair = selectTrait(uint16(seed & 0xFFFF), 2 + shift);\n\n        seed >>= 16;\n        t.eyes = selectTrait(uint16(seed & 0xFFFF), 3 + shift);\n\n        seed >>= 16;\n        t.accessory = selectTrait(uint16(seed & 0xFFFF), 4 + shift);\n\n        seed >>= 16;\n        t.headgear = selectTrait(uint16(seed & 0xFFFF), 5 + shift);\n\n        seed >>= 16;\n        if (!t.isThief) {\n            t.neckGear = selectTrait(uint16(seed & 0xFFFF), 6 + shift);\n            t.alphaIndex = selectTrait(uint16(seed & 0xFFFF), 7 + shift);\n        }\n    }\n\n    /**\n     * converts a struct to a 256 bit hash to check for uniqueness\n     * @param s the struct to pack into a hash\n     * @return the 256 bit hash of the struct\n     */\n    function structToHash(ThiefPolice memory s)\n        internal\n        pure\n        returns (uint256)\n    {\n        return\n            uint256(\n                keccak256(\n                    abi.encodePacked(\n                        s.isThief,\n                        s.uniform,\n                        s.hair,\n                        s.facialHair,\n                        s.eyes,\n                        s.headgear,\n                        s.accessory,\n                        s.neckGear,\n                        s.alphaIndex\n                    )\n                )\n            );\n    }\n\n    /**\n     * generates a pseudorandom number\n     * @param seed a value ensure different outcomes for different sources in the same block\n     * @return a pseudorandom value\n     */\n    function random(uint256 seed) internal view returns (uint256) {\n        return\n            uint256(\n                keccak256(\n                    abi.encodePacked(\n                        tx.origin,\n                        blockhash(block.number - 1),\n                        block.timestamp,\n                        seed\n                    )\n                )\n            ) ^ randomSource.seed();\n    }\n\n    /***READ */\n\n    function getTokenTraits(uint256 tokenId)\n        external\n        view\n        override\n        returns (ThiefPolice memory)\n    {\n        return tokenTraits[tokenId];\n    }\n\n    function getPaidTokens() external view override returns (uint256) {\n        return PAID_TOKENS;\n    }\n\n    function isStakingActive() external view override returns (bool) {\n        return stakingActive;\n    }\n\n    /***ADMIN */\n\n    /**\n     * called after deployment so that the contract can get random police thieves\n     * @param _bank the address of the Bank\n     */\n    function setBank(address _bank) external onlyOwner {\n        bank = IBank(_bank);\n    }\n\n    /**\n     * allows owner to withdraw funds from minting\n     */\n    function withdraw() external onlyOwner {\n        payable(owner()).transfer(address(this).balance);\n    }\n\n    /**\n     * updates the number of tokens for sale\n     */\n    function setPaidTokens(uint256 _paidTokens) external onlyOwner {\n        PAID_TOKENS = _paidTokens;\n    }\n\n    /**\n     * enables owner to pause / unpause minting\n     */\n    function setPaused(bool _paused) external onlyOwner {\n        if (_paused) _pause();\n        else _unpause();\n    }\n\n    function setWhitelist(address[] memory addrs) external onlyOwner {\n        for (uint256 i = 0; i < addrs.length; i++) {\n            inWhitelist[addrs[i]] = true;\n        }\n    }\n\n    /***RENDER */\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        override\n        returns (string memory)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721Metadata: URI query for nonexistent token\"\n        );\n        return traits.tokenURI(tokenId);\n    }\n\n    function changePrice(uint256 _price) public onlyOwner {\n        MINT_PRICE = _price;\n    }\n}\n",
  "sourceMap": "298:11586:22:-:0;;;447:9;419:37;;488:2;462:28;;1571:31;;;-1:-1:-1;;;;1571:31:22;;;1659:32;;;-1:-1:-1;;1697:33:22;1571:31;1697:33;;;1769:4;1737:36;;-1:-1:-1;1779:38:22;;2037:250;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1251:113:5;;;;;;;;;;;-1:-1:-1;;;1251:113:5;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1251:113:5;;;;1317:13;;1251:113;;;1317:13;;-1:-1:-1;;1317:13:5;:::i;:::-;-1:-1:-1;1340:17:5;;;;:7;;:17;;;;;:::i;:::-;;1251:113;;882:23:20;892:12;:10;;;:12;;:::i;:::-;882:9;:23::i;:::-;917:7:21;:14;;-1:-1:-1;;;;917:14:21;-1:-1:-1;;;917:14:21;;;2170:4:22::1;:12:::0;;-1:-1:-1;;;;;2170:12:22;;::::1;-1:-1:-1::0;;;;;;2170:12:22;;::::1;;::::0;;;917:7:21;2192:16:22;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;2219:23:::1;::::0;;;2266:14:::1;2279:1;2232:10:::0;2266:14:::1;:::i;:::-;2252:11;:28:::0;-1:-1:-1;298:11586:22;;-1:-1:-1;;298:11586:22;587:96:2;666:10;;587:96::o;1656:169:20:-;1730:6;;;-1:-1:-1;;;;;1746:17:20;;;-1:-1:-1;;;;;;1746:17:20;;;;;;;1778:40;;1730:6;;;1746:17;1730:6;;1778:40;;1711:16;;1778:40;1701:124;1656:169;:::o;298:11586:22:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;298:11586:22;;;-1:-1:-1;298:11586:22;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:138:24;-1:-1:-1;;;;;96:31:24;;86:42;;76:70;;142:1;139;132:12;76:70;14:138;:::o;157:490::-;275:6;283;291;344:2;332:9;323:7;319:23;315:32;312:52;;;360:1;357;350:12;312:52;392:9;386:16;411:38;443:5;411:38;:::i;:::-;518:2;503:18;;497:25;468:5;;-1:-1:-1;531:40:24;497:25;531:40;:::i;:::-;590:7;580:17;;;637:2;626:9;622:18;616:25;606:35;;157:490;;;;;:::o;652:217::-;692:1;718;708:132;;762:10;757:3;753:20;750:1;743:31;797:4;794:1;787:15;825:4;822:1;815:15;708:132;-1:-1:-1;854:9:24;;652:217::o;874:380::-;953:1;949:12;;;;996;;;1017:61;;1071:4;1063:6;1059:17;1049:27;;1017:61;1124:2;1116:6;1113:14;1093:18;1090:38;1087:161;;;1170:10;1165:3;1161:20;1158:1;1151:31;1205:4;1202:1;1195:15;1233:4;1230:1;1223:15;1087:161;;874:380;;;:::o;:::-;298:11586:22;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/PoliceAndThief.sol",
  "type": "contract"
}