{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/IERC20Metadata.sol",
    "2": "contracts/Context.sol",
    "4": "contracts/ERC20.sol",
    "9": "contracts/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/ERC20.sol",
    "exportedSymbols": {
      "Context": [
        3101
      ],
      "ERC20": [
        2989
      ],
      "IERC20": [
        3619
      ],
      "IERC20Metadata": [
        3644
      ]
    },
    "id": 2990,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2446,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:4"
      },
      {
        "absolutePath": "contracts/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 2447,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2990,
        "sourceUnit": 3620,
        "src": "58:22:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/IERC20Metadata.sol",
        "file": "./IERC20Metadata.sol",
        "id": 2448,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2990,
        "sourceUnit": 3645,
        "src": "81:30:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Context.sol",
        "file": "./Context.sol",
        "id": 2449,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2990,
        "sourceUnit": 3102,
        "src": "112:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2451,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3101,
              "src": "1328:7:4"
            },
            "id": 2452,
            "nodeType": "InheritanceSpecifier",
            "src": "1328:7:4"
          },
          {
            "baseName": {
              "id": 2453,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3619,
              "src": "1337:6:4"
            },
            "id": 2454,
            "nodeType": "InheritanceSpecifier",
            "src": "1337:6:4"
          },
          {
            "baseName": {
              "id": 2455,
              "name": "IERC20Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3644,
              "src": "1345:14:4"
            },
            "id": 2456,
            "nodeType": "InheritanceSpecifier",
            "src": "1345:14:4"
          }
        ],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2450,
          "nodeType": "StructuredDocumentation",
          "src": "137:1172:4",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 2989,
        "linearizedBaseContracts": [
          2989,
          3644,
          3619,
          3101
        ],
        "name": "ERC20",
        "nameLocation": "1319:5:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2460,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1402:9:4",
            "nodeType": "VariableDeclaration",
            "scope": 2989,
            "src": "1366:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2459,
              "keyType": {
                "id": 2457,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1374:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1366:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2458,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1385:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2466,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "1474:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 2989,
            "src": "1418:67:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 2465,
              "keyType": {
                "id": 2461,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1426:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1418:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 2464,
                "keyType": {
                  "id": 2462,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1445:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1437:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 2463,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1456:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2468,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1508:12:4",
            "nodeType": "VariableDeclaration",
            "scope": 2989,
            "src": "1492:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2467,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1492:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2470,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1542:5:4",
            "nodeType": "VariableDeclaration",
            "scope": 2989,
            "src": "1527:20:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2469,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1527:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2472,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1568:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 2989,
            "src": "1553:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2471,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1553:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2488,
              "nodeType": "Block",
              "src": "1941:57:4",
              "statements": [
                {
                  "expression": {
                    "id": 2482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2480,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2470,
                      "src": "1951:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2481,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2475,
                      "src": "1959:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1951:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2483,
                  "nodeType": "ExpressionStatement",
                  "src": "1951:13:4"
                },
                {
                  "expression": {
                    "id": 2486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2484,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2472,
                      "src": "1974:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2485,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2477,
                      "src": "1984:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1974:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2487,
                  "nodeType": "ExpressionStatement",
                  "src": "1974:17:4"
                }
              ]
            },
            "documentation": {
              "id": 2473,
              "nodeType": "StructuredDocumentation",
              "src": "1582:298:4",
              "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
            },
            "id": 2489,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2475,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1911:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2489,
                  "src": "1897:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2474,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1897:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2477,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1932:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2489,
                  "src": "1918:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2476,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1918:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1896:44:4"
            },
            "returnParameters": {
              "id": 2479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1941:0:4"
            },
            "scope": 2989,
            "src": "1885:113:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3631
            ],
            "body": {
              "id": 2498,
              "nodeType": "Block",
              "src": "2132:29:4",
              "statements": [
                {
                  "expression": {
                    "id": 2496,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2470,
                    "src": "2149:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2495,
                  "id": 2497,
                  "nodeType": "Return",
                  "src": "2142:12:4"
                }
              ]
            },
            "documentation": {
              "id": 2490,
              "nodeType": "StructuredDocumentation",
              "src": "2004:54:4",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 2499,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2072:4:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2492,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2099:8:4"
            },
            "parameters": {
              "id": 2491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2076:2:4"
            },
            "returnParameters": {
              "id": 2495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2494,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2499,
                  "src": "2117:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2493,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2117:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2116:15:4"
            },
            "scope": 2989,
            "src": "2063:98:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3637
            ],
            "body": {
              "id": 2508,
              "nodeType": "Block",
              "src": "2345:31:4",
              "statements": [
                {
                  "expression": {
                    "id": 2506,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2472,
                    "src": "2362:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2505,
                  "id": 2507,
                  "nodeType": "Return",
                  "src": "2355:14:4"
                }
              ]
            },
            "documentation": {
              "id": 2500,
              "nodeType": "StructuredDocumentation",
              "src": "2167:102:4",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 2509,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2283:6:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2502,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2312:8:4"
            },
            "parameters": {
              "id": 2501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2289:2:4"
            },
            "returnParameters": {
              "id": 2505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2504,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2509,
                  "src": "2330:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2503,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2330:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2329:15:4"
            },
            "scope": 2989,
            "src": "2274:102:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3643
            ],
            "body": {
              "id": 2518,
              "nodeType": "Block",
              "src": "3065:26:4",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 2516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3082:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 2515,
                  "id": 2517,
                  "nodeType": "Return",
                  "src": "3075:9:4"
                }
              ]
            },
            "documentation": {
              "id": 2510,
              "nodeType": "StructuredDocumentation",
              "src": "2382:613:4",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 2519,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3009:8:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2512,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3040:8:4"
            },
            "parameters": {
              "id": 2511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3017:2:4"
            },
            "returnParameters": {
              "id": 2515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2514,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2519,
                  "src": "3058:5:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2513,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3058:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3057:7:4"
            },
            "scope": 2989,
            "src": "3000:91:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3550
            ],
            "body": {
              "id": 2528,
              "nodeType": "Block",
              "src": "3221:36:4",
              "statements": [
                {
                  "expression": {
                    "id": 2526,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2468,
                    "src": "3238:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2525,
                  "id": 2527,
                  "nodeType": "Return",
                  "src": "3231:19:4"
                }
              ]
            },
            "documentation": {
              "id": 2520,
              "nodeType": "StructuredDocumentation",
              "src": "3097:49:4",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 2529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3160:11:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2522,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3194:8:4"
            },
            "parameters": {
              "id": 2521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3171:2:4"
            },
            "returnParameters": {
              "id": 2525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2524,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2529,
                  "src": "3212:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3212:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3211:9:4"
            },
            "scope": 2989,
            "src": "3151:106:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3558
            ],
            "body": {
              "id": 2542,
              "nodeType": "Block",
              "src": "3398:42:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2538,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2460,
                      "src": "3415:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2540,
                    "indexExpression": {
                      "id": 2539,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2532,
                      "src": "3425:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3415:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2537,
                  "id": 2541,
                  "nodeType": "Return",
                  "src": "3408:25:4"
                }
              ]
            },
            "documentation": {
              "id": 2530,
              "nodeType": "StructuredDocumentation",
              "src": "3263:47:4",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 2543,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3324:9:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2534,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3371:8:4"
            },
            "parameters": {
              "id": 2533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2532,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3342:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2543,
                  "src": "3334:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3334:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3333:17:4"
            },
            "returnParameters": {
              "id": 2537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2536,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2543,
                  "src": "3389:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3389:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3388:9:4"
            },
            "scope": 2989,
            "src": "3315:125:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3568
            ],
            "body": {
              "id": 2563,
              "nodeType": "Block",
              "src": "3735:80:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2555,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3091,
                          "src": "3755:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3755:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2557,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2546,
                        "src": "3769:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2558,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2548,
                        "src": "3780:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2554,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2794,
                      "src": "3745:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3745:42:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2560,
                  "nodeType": "ExpressionStatement",
                  "src": "3745:42:4"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3804:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2553,
                  "id": 2562,
                  "nodeType": "Return",
                  "src": "3797:11:4"
                }
              ]
            },
            "documentation": {
              "id": 2544,
              "nodeType": "StructuredDocumentation",
              "src": "3446:192:4",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 2564,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3652:8:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2550,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3711:8:4"
            },
            "parameters": {
              "id": 2549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2546,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3669:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2564,
                  "src": "3661:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3661:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2548,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3688:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2564,
                  "src": "3680:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3680:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3660:35:4"
            },
            "returnParameters": {
              "id": 2553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2552,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2564,
                  "src": "3729:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2551,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3729:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3728:6:4"
            },
            "scope": 2989,
            "src": "3643:172:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3578
            ],
            "body": {
              "id": 2581,
              "nodeType": "Block",
              "src": "3971:51:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2575,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2466,
                        "src": "3988:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 2577,
                      "indexExpression": {
                        "id": 2576,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2567,
                        "src": "4000:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3988:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2579,
                    "indexExpression": {
                      "id": 2578,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2569,
                      "src": "4007:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3988:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2574,
                  "id": 2580,
                  "nodeType": "Return",
                  "src": "3981:34:4"
                }
              ]
            },
            "documentation": {
              "id": 2565,
              "nodeType": "StructuredDocumentation",
              "src": "3821:47:4",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 2582,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "3882:9:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2571,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3944:8:4"
            },
            "parameters": {
              "id": 2570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2567,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3900:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2582,
                  "src": "3892:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3892:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2569,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "3915:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2582,
                  "src": "3907:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3907:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3891:32:4"
            },
            "returnParameters": {
              "id": 2574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2573,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2582,
                  "src": "3962:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3962:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3961:9:4"
            },
            "scope": 2989,
            "src": "3873:149:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3588
            ],
            "body": {
              "id": 2602,
              "nodeType": "Block",
              "src": "4249:77:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2594,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3091,
                          "src": "4268:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4268:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2596,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2585,
                        "src": "4282:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2597,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2587,
                        "src": "4291:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2593,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2966,
                      "src": "4259:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4259:39:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2599,
                  "nodeType": "ExpressionStatement",
                  "src": "4259:39:4"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4315:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2592,
                  "id": 2601,
                  "nodeType": "Return",
                  "src": "4308:11:4"
                }
              ]
            },
            "documentation": {
              "id": 2583,
              "nodeType": "StructuredDocumentation",
              "src": "4028:127:4",
              "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 2603,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4169:7:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2589,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4225:8:4"
            },
            "parameters": {
              "id": 2588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2585,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4185:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2603,
                  "src": "4177:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4177:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2587,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4202:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2603,
                  "src": "4194:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4194:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4176:33:4"
            },
            "returnParameters": {
              "id": 2592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2591,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2603,
                  "src": "4243:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2590,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4243:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4242:6:4"
            },
            "scope": 2989,
            "src": "4160:166:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3600
            ],
            "body": {
              "id": 2650,
              "nodeType": "Block",
              "src": "4935:324:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2617,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2606,
                        "src": "4955:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2618,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2608,
                        "src": "4963:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2619,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2610,
                        "src": "4974:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2616,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2794,
                      "src": "4945:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4945:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2621,
                  "nodeType": "ExpressionStatement",
                  "src": "4945:36:4"
                },
                {
                  "assignments": [
                    2623
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2623,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "5000:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2650,
                      "src": "4992:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2622,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4992:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2630,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2624,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2466,
                        "src": "5019:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 2626,
                      "indexExpression": {
                        "id": 2625,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2606,
                        "src": "5031:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5019:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2629,
                    "indexExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2627,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3091,
                        "src": "5039:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 2628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5039:12:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5019:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4992:60:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2632,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2623,
                          "src": "5070:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2633,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2610,
                          "src": "5090:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5070:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 2635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5098:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        },
                        "value": "ERC20: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 2631,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5062:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5062:79:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2637,
                  "nodeType": "ExpressionStatement",
                  "src": "5062:79:4"
                },
                {
                  "id": 2647,
                  "nodeType": "UncheckedBlock",
                  "src": "5147:84:4",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2639,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2606,
                            "src": "5176:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2640,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3091,
                              "src": "5184:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5184:12:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2642,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2623,
                              "src": "5198:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2643,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2610,
                              "src": "5217:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5198:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2638,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2966,
                          "src": "5167:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 2645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5167:57:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2646,
                      "nodeType": "ExpressionStatement",
                      "src": "5167:57:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5248:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2615,
                  "id": 2649,
                  "nodeType": "Return",
                  "src": "5241:11:4"
                }
              ]
            },
            "documentation": {
              "id": 2604,
              "nodeType": "StructuredDocumentation",
              "src": "4332:456:4",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 2651,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4802:12:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2612,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4911:8:4"
            },
            "parameters": {
              "id": 2611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2606,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4832:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2651,
                  "src": "4824:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4824:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2608,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4856:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2651,
                  "src": "4848:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4848:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2610,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4883:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2651,
                  "src": "4875:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4875:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4814:81:4"
            },
            "returnParameters": {
              "id": 2615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2614,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2651,
                  "src": "4929:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2613,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4929:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4928:6:4"
            },
            "scope": 2989,
            "src": "4793:466:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2677,
              "nodeType": "Block",
              "src": "5748:118:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2662,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3091,
                          "src": "5767:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5767:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2664,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2654,
                        "src": "5781:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2665,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2466,
                              "src": "5790:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 2668,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2666,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3091,
                                "src": "5802:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5802:12:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5790:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2670,
                          "indexExpression": {
                            "id": 2669,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2654,
                            "src": "5816:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5790:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 2671,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2656,
                          "src": "5827:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5790:47:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2661,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2966,
                      "src": "5758:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5758:80:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2674,
                  "nodeType": "ExpressionStatement",
                  "src": "5758:80:4"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5855:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2660,
                  "id": 2676,
                  "nodeType": "Return",
                  "src": "5848:11:4"
                }
              ]
            },
            "documentation": {
              "id": 2652,
              "nodeType": "StructuredDocumentation",
              "src": "5265:384:4",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 2678,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "5663:17:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2654,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5689:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2678,
                  "src": "5681:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5681:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2656,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "5706:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2678,
                  "src": "5698:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2655,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5698:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5680:37:4"
            },
            "returnParameters": {
              "id": 2660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2659,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2678,
                  "src": "5742:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2658,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5742:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5741:6:4"
            },
            "scope": 2989,
            "src": "5654:212:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2716,
              "nodeType": "Block",
              "src": "6452:294:4",
              "statements": [
                {
                  "assignments": [
                    2689
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2689,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "6470:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2716,
                      "src": "6462:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2688,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6462:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2696,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2690,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2466,
                        "src": "6489:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 2693,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2691,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3091,
                          "src": "6501:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6501:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6489:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2695,
                    "indexExpression": {
                      "id": 2694,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2681,
                      "src": "6515:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6489:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6462:61:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2698,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2689,
                          "src": "6541:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2699,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2683,
                          "src": "6561:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6541:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 2701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6578:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 2697,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6533:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6533:85:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2703,
                  "nodeType": "ExpressionStatement",
                  "src": "6533:85:4"
                },
                {
                  "id": 2713,
                  "nodeType": "UncheckedBlock",
                  "src": "6624:94:4",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2705,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3091,
                              "src": "6653:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6653:12:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2707,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2681,
                            "src": "6667:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2708,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2689,
                              "src": "6676:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2709,
                              "name": "subtractedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2683,
                              "src": "6695:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6676:34:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2704,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2966,
                          "src": "6644:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 2711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6644:67:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2712,
                      "nodeType": "ExpressionStatement",
                      "src": "6644:67:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6735:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2687,
                  "id": 2715,
                  "nodeType": "Return",
                  "src": "6728:11:4"
                }
              ]
            },
            "documentation": {
              "id": 2679,
              "nodeType": "StructuredDocumentation",
              "src": "5872:476:4",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 2717,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "6362:17:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2681,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6388:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2717,
                  "src": "6380:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6380:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2683,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "6405:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2717,
                  "src": "6397:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6397:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6379:42:4"
            },
            "returnParameters": {
              "id": 2687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2686,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2717,
                  "src": "6446:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2685,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6446:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6445:6:4"
            },
            "scope": 2989,
            "src": "6353:393:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2793,
              "nodeType": "Block",
              "src": "7337:584:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2728,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2720,
                          "src": "7355:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7373:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7365:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2729,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7365:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7365:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7355:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 2734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7377:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 2727,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7347:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7347:70:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2736,
                  "nodeType": "ExpressionStatement",
                  "src": "7347:70:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2738,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2722,
                          "src": "7435:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7456:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7448:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2739,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7448:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7448:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7435:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 2744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7460:37:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 2737,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7427:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7427:71:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2746,
                  "nodeType": "ExpressionStatement",
                  "src": "7427:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2748,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2720,
                        "src": "7530:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2749,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2722,
                        "src": "7538:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2750,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2724,
                        "src": "7549:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2747,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2977,
                      "src": "7509:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7509:47:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2752,
                  "nodeType": "ExpressionStatement",
                  "src": "7509:47:4"
                },
                {
                  "assignments": [
                    2754
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2754,
                      "mutability": "mutable",
                      "name": "senderBalance",
                      "nameLocation": "7575:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2793,
                      "src": "7567:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2753,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7567:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2758,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2755,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2460,
                      "src": "7591:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2757,
                    "indexExpression": {
                      "id": 2756,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2720,
                      "src": "7601:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7591:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7567:41:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2760,
                          "name": "senderBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2754,
                          "src": "7626:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2761,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2724,
                          "src": "7643:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7626:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 2763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7651:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 2759,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7618:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7618:74:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2765,
                  "nodeType": "ExpressionStatement",
                  "src": "7618:74:4"
                },
                {
                  "id": 2774,
                  "nodeType": "UncheckedBlock",
                  "src": "7698:69:4",
                  "statements": [
                    {
                      "expression": {
                        "id": 2772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 2766,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2460,
                            "src": "7718:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2768,
                          "indexExpression": {
                            "id": 2767,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2720,
                            "src": "7728:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7718:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2769,
                            "name": "senderBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2754,
                            "src": "7738:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2770,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2724,
                            "src": "7754:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7738:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7718:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2773,
                      "nodeType": "ExpressionStatement",
                      "src": "7718:42:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 2779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2775,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2460,
                        "src": "7776:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2777,
                      "indexExpression": {
                        "id": 2776,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2722,
                        "src": "7786:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7776:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2778,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2724,
                      "src": "7800:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7776:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2780,
                  "nodeType": "ExpressionStatement",
                  "src": "7776:30:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2782,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2720,
                        "src": "7831:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2783,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2722,
                        "src": "7839:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2784,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2724,
                        "src": "7850:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2781,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3609,
                      "src": "7822:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7822:35:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2786,
                  "nodeType": "EmitStatement",
                  "src": "7817:40:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2788,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2720,
                        "src": "7888:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2789,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2722,
                        "src": "7896:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2790,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2724,
                        "src": "7907:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2787,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2988,
                      "src": "7868:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7868:46:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2792,
                  "nodeType": "ExpressionStatement",
                  "src": "7868:46:4"
                }
              ]
            },
            "documentation": {
              "id": 2718,
              "nodeType": "StructuredDocumentation",
              "src": "6752:463:4",
              "text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 2794,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "7229:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2720,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7256:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2794,
                  "src": "7248:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2719,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7248:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2722,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "7280:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2794,
                  "src": "7272:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7272:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2724,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7307:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2794,
                  "src": "7299:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2723,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7299:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7238:81:4"
            },
            "returnParameters": {
              "id": 2726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7337:0:4"
            },
            "scope": 2989,
            "src": "7220:701:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2848,
              "nodeType": "Block",
              "src": "8262:324:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2802,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2796,
                          "src": "8280:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8299:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8291:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2803,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8291:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8291:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8280:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 2808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8303:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 2801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8272:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8272:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2810,
                  "nodeType": "ExpressionStatement",
                  "src": "8272:65:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8377:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8369:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2812,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8369:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8369:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2816,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2796,
                        "src": "8381:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2817,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2798,
                        "src": "8390:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2811,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2977,
                      "src": "8348:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8348:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2819,
                  "nodeType": "ExpressionStatement",
                  "src": "8348:49:4"
                },
                {
                  "expression": {
                    "id": 2822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2820,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2468,
                      "src": "8408:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2821,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2798,
                      "src": "8424:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8408:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2823,
                  "nodeType": "ExpressionStatement",
                  "src": "8408:22:4"
                },
                {
                  "expression": {
                    "id": 2828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2824,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2460,
                        "src": "8440:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2826,
                      "indexExpression": {
                        "id": 2825,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2796,
                        "src": "8450:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8440:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2827,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2798,
                      "src": "8462:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8440:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2829,
                  "nodeType": "ExpressionStatement",
                  "src": "8440:28:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8500:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8492:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2831,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8492:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8492:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2835,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2796,
                        "src": "8504:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2836,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2798,
                        "src": "8513:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2830,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3609,
                      "src": "8483:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8483:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2838,
                  "nodeType": "EmitStatement",
                  "src": "8478:42:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8559:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8551:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2840,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8551:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8551:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2844,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2796,
                        "src": "8563:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2845,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2798,
                        "src": "8572:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2839,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2988,
                      "src": "8531:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8531:48:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2847,
                  "nodeType": "ExpressionStatement",
                  "src": "8531:48:4"
                }
              ]
            },
            "id": 2849,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8206:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2796,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8220:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2849,
                  "src": "8212:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8212:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2798,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8237:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2849,
                  "src": "8229:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8229:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8211:33:4"
            },
            "returnParameters": {
              "id": 2800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8262:0:4"
            },
            "scope": 2989,
            "src": "8197:389:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2920,
              "nodeType": "Block",
              "src": "8971:499:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2858,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2852,
                          "src": "8989:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9008:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9000:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2859,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9000:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9000:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8989:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 2864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9012:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 2857,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8981:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8981:67:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2866,
                  "nodeType": "ExpressionStatement",
                  "src": "8981:67:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2868,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2852,
                        "src": "9080:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9097:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9089:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2869,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9089:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9089:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2873,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2854,
                        "src": "9101:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2867,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2977,
                      "src": "9059:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9059:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2875,
                  "nodeType": "ExpressionStatement",
                  "src": "9059:49:4"
                },
                {
                  "assignments": [
                    2877
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2877,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "9127:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2920,
                      "src": "9119:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2876,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9119:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2881,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2878,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2460,
                      "src": "9144:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2880,
                    "indexExpression": {
                      "id": 2879,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2852,
                      "src": "9154:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9144:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9119:43:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2883,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2877,
                          "src": "9180:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2884,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2854,
                          "src": "9198:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9180:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 2886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9206:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 2882,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9172:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9172:71:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2888,
                  "nodeType": "ExpressionStatement",
                  "src": "9172:71:4"
                },
                {
                  "id": 2897,
                  "nodeType": "UncheckedBlock",
                  "src": "9249:71:4",
                  "statements": [
                    {
                      "expression": {
                        "id": 2895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 2889,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2460,
                            "src": "9269:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2891,
                          "indexExpression": {
                            "id": 2890,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2852,
                            "src": "9279:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9269:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2892,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2877,
                            "src": "9290:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2893,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2854,
                            "src": "9307:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9290:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9269:44:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2896,
                      "nodeType": "ExpressionStatement",
                      "src": "9269:44:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 2900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2898,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2468,
                      "src": "9329:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2899,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2854,
                      "src": "9345:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9329:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2901,
                  "nodeType": "ExpressionStatement",
                  "src": "9329:22:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2903,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2852,
                        "src": "9376:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9393:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9385:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2904,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9385:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9385:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2908,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2854,
                        "src": "9397:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2902,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3609,
                      "src": "9367:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9367:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2910,
                  "nodeType": "EmitStatement",
                  "src": "9362:42:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2912,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2852,
                        "src": "9435:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2915,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9452:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9444:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2913,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9444:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9444:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2917,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2854,
                        "src": "9456:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2911,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2988,
                      "src": "9415:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9415:48:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2919,
                  "nodeType": "ExpressionStatement",
                  "src": "9415:48:4"
                }
              ]
            },
            "documentation": {
              "id": 2850,
              "nodeType": "StructuredDocumentation",
              "src": "8592:309:4",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 2921,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "8915:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2852,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8929:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2921,
                  "src": "8921:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8921:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2854,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8946:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2921,
                  "src": "8938:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2853,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8938:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8920:33:4"
            },
            "returnParameters": {
              "id": 2856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8971:0:4"
            },
            "scope": 2989,
            "src": "8906:564:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2965,
              "nodeType": "Block",
              "src": "10006:257:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2932,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2924,
                          "src": "10024:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10041:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10033:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2933,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10033:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10033:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10024:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 2938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10045:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 2931,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10016:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10016:68:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2940,
                  "nodeType": "ExpressionStatement",
                  "src": "10016:68:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2942,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2926,
                          "src": "10102:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2945,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10121:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10113:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2943,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10113:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10113:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10102:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 2948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10125:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 2941,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10094:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10094:68:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2950,
                  "nodeType": "ExpressionStatement",
                  "src": "10094:68:4"
                },
                {
                  "expression": {
                    "id": 2957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2951,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2466,
                          "src": "10173:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 2954,
                        "indexExpression": {
                          "id": 2952,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2924,
                          "src": "10185:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10173:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2955,
                      "indexExpression": {
                        "id": 2953,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2926,
                        "src": "10192:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10173:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2956,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2928,
                      "src": "10203:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10173:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2958,
                  "nodeType": "ExpressionStatement",
                  "src": "10173:36:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2960,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2924,
                        "src": "10233:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2961,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2926,
                        "src": "10240:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2962,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2928,
                        "src": "10249:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2959,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3618,
                      "src": "10224:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10224:32:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2964,
                  "nodeType": "EmitStatement",
                  "src": "10219:37:4"
                }
              ]
            },
            "documentation": {
              "id": 2922,
              "nodeType": "StructuredDocumentation",
              "src": "9476:412:4",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 2966,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "9902:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2924,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "9928:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2966,
                  "src": "9920:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9920:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2926,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "9951:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2966,
                  "src": "9943:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2925,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9943:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2928,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9976:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2966,
                  "src": "9968:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9968:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9910:78:4"
            },
            "returnParameters": {
              "id": 2930,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10006:0:4"
            },
            "scope": 2989,
            "src": "9893:370:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2976,
              "nodeType": "Block",
              "src": "10966:2:4",
              "statements": []
            },
            "documentation": {
              "id": 2967,
              "nodeType": "StructuredDocumentation",
              "src": "10269:573:4",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 2977,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "10856:20:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2969,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10894:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2977,
                  "src": "10886:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10886:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2971,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10916:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2977,
                  "src": "10908:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10908:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2973,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10936:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2977,
                  "src": "10928:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10928:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10876:72:4"
            },
            "returnParameters": {
              "id": 2975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10966:0:4"
            },
            "scope": 2989,
            "src": "10847:121:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2987,
              "nodeType": "Block",
              "src": "11674:2:4",
              "statements": []
            },
            "documentation": {
              "id": 2978,
              "nodeType": "StructuredDocumentation",
              "src": "10974:577:4",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 2988,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "11565:19:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2980,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11602:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2988,
                  "src": "11594:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11594:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2982,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11624:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2988,
                  "src": "11616:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2981,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11616:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2984,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11644:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2988,
                  "src": "11636:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2983,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11636:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11584:72:4"
            },
            "returnParameters": {
              "id": 2986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11674:0:4"
            },
            "scope": 2989,
            "src": "11556:120:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 2990,
        "src": "1310:10368:4",
        "usedErrors": []
      }
    ],
    "src": "33:11645:4"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000b5638038062000b568339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b6108c480620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610701565b60405180910390f35b6100df6100da366004610772565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461079c565b61026e565b604051601281526020016100c3565b6100df610131366004610772565b61031d565b6100f36101443660046107d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df610175366004610772565b610368565b6100df610188366004610772565b610401565b6100f361019b3660046107fa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061082d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061082d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610868565b61040e565b6060600480546101d59061082d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a7908490610868565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072e57858101830151858201604001528201610712565b81811115610740576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461076d57600080fd5b919050565b6000806040838503121561078557600080fd5b61078e83610756565b946020939093013593505050565b6000806000606084860312156107b157600080fd5b6107ba84610756565b92506107c860208501610756565b9150604084013590509250925092565b6000602082840312156107ea57600080fd5b6107f382610756565b9392505050565b6000806040838503121561080d57600080fd5b61081683610756565b915061082460208401610756565b90509250929050565b600181811c9082168061084157607f821691505b6020821081141561086257634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561088957634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220cabaf0eb7858adcfa3694c3d43d134affbef4c0b2eec1a9291a5d9c74132aa5c64736f6c634300080b0033",
  "bytecodeSha1": "5c27d7156fdbfe889902cc167df697405a50ad20",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "10": {},
      "2": {},
      "4": {
        "ERC20._approve": {
          "30": [
            10024,
            10043,
            true
          ],
          "31": [
            10102,
            10123,
            true
          ]
        },
        "ERC20._transfer": {
          "32": [
            7355,
            7375,
            true
          ],
          "33": [
            7435,
            7458,
            true
          ],
          "34": [
            7626,
            7649,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "29": [
            6541,
            6576,
            true
          ]
        },
        "ERC20.transferFrom": {
          "28": [
            5070,
            5096,
            true
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "10": {},
      "2": {
        "Context._msgSender": {
          "6": [
            659,
            676
          ]
        }
      },
      "4": {
        "ERC20._approve": {
          "18": [
            10016,
            10084
          ],
          "19": [
            10094,
            10162
          ],
          "20": [
            10173,
            10209
          ],
          "21": [
            10219,
            10256
          ]
        },
        "ERC20._transfer": {
          "22": [
            7347,
            7417
          ],
          "23": [
            7427,
            7498
          ],
          "24": [
            7618,
            7692
          ],
          "25": [
            7718,
            7760
          ],
          "26": [
            7776,
            7806
          ],
          "27": [
            7817,
            7857
          ]
        },
        "ERC20.allowance": {
          "3": [
            3981,
            4015
          ]
        },
        "ERC20.approve": {
          "5": [
            4259,
            4298
          ],
          "7": [
            4308,
            4319
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            3408,
            3433
          ]
        },
        "ERC20.decimals": {
          "1": [
            3075,
            3084
          ]
        },
        "ERC20.decreaseAllowance": {
          "14": [
            6533,
            6618
          ],
          "15": [
            6644,
            6711
          ],
          "16": [
            6728,
            6739
          ]
        },
        "ERC20.increaseAllowance": {
          "12": [
            5758,
            5838
          ]
        },
        "ERC20.name": {
          "4": [
            2142,
            2154
          ]
        },
        "ERC20.symbol": {
          "13": [
            2355,
            2369
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3231,
            3250
          ]
        },
        "ERC20.transfer": {
          "17": [
            3745,
            3787
          ]
        },
        "ERC20.transferFrom": {
          "8": [
            4945,
            4981
          ],
          "9": [
            5062,
            5141
          ],
          "10": [
            5167,
            5224
          ],
          "11": [
            5241,
            5252
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "Context",
    "IERC20",
    "IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610701565b60405180910390f35b6100df6100da366004610772565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461079c565b61026e565b604051601281526020016100c3565b6100df610131366004610772565b61031d565b6100f36101443660046107d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df610175366004610772565b610368565b6100df610188366004610772565b610401565b6100f361019b3660046107fa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061082d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061082d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610868565b61040e565b6060600480546101d59061082d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a7908490610868565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072e57858101830151858201604001528201610712565b81811115610740576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461076d57600080fd5b919050565b6000806040838503121561078557600080fd5b61078e83610756565b946020939093013593505050565b6000806000606084860312156107b157600080fd5b6107ba84610756565b92506107c860208501610756565b9150604084013590509250925092565b6000602082840312156107ea57600080fd5b6107f382610756565b9392505050565b6000806040838503121561080d57600080fd5b61081683610756565b915061082460208401610756565b90509250929050565b600181811c9082168061084157607f821691505b6020821081141561086257634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561088957634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220cabaf0eb7858adcfa3694c3d43d134affbef4c0b2eec1a9291a5d9c74132aa5c64736f6c634300080b0033",
  "deployedSourceMap": "1310:10368:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2063:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4160:166;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:24;;1211:22;1193:41;;1181:2;1166:18;4160:166:4;1053:187:24;3151:106:4;3238:12;;3151:106;;;1391:25:24;;;1379:2;1364:18;3151:106:4;1245:177:24;4793:466:4;;;;;;:::i;:::-;;:::i;3000:91::-;;;3082:2;1902:36:24;;1890:2;1875:18;3000:91:4;1760:184:24;5654:212:4;;;;;;:::i;:::-;;:::i;3315:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3415:18:4;3389:7;3415:18;;;;;;;;;;;;3315:125;2274:102;;;:::i;6353:393::-;;;;;;:::i;:::-;;:::i;3643:172::-;;;;;;:::i;:::-;;:::i;3873:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3988:18:4;;;3962:7;3988:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3873:149;2063:98;2117:13;2149:5;2142:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2063:98;:::o;4160:166::-;4243:4;4259:39;666:10:2;4282:7:4;4291:6;4259:8;:39::i;:::-;-1:-1:-1;4315:4:4;4160:166;;;;:::o;4793:466::-;4929:4;4945:36;4955:6;4963:9;4974:6;4945:9;:36::i;:::-;-1:-1:-1;;;;;5019:19:4;;4992:24;5019:19;;;:11;:19;;;;;;;;666:10:2;5019:33:4;;;;;;;;5070:26;;;;5062:79;;;;-1:-1:-1;;;5062:79:4;;2992:2:24;5062:79:4;;;2974:21:24;3031:2;3011:18;;;3004:30;3070:34;3050:18;;;3043:62;-1:-1:-1;;;3121:18:24;;;3114:38;3169:19;;5062:79:4;;;;;;;;;5167:57;5176:6;666:10:2;5217:6:4;5198:16;:25;5167:8;:57::i;:::-;-1:-1:-1;5248:4:4;;4793:466;-1:-1:-1;;;;4793:466:4:o;5654:212::-;666:10:2;5742:4:4;5790:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5790:34:4;;;;;;;;;;5742:4;;5758:80;;5781:7;;5790:47;;5827:10;;5790:47;:::i;:::-;5758:8;:80::i;2274:102::-;2330:13;2362:7;2355:14;;;;;:::i;6353:393::-;666:10:2;6446:4:4;6489:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6489:34:4;;;;;;;;;;6541:35;;;;6533:85;;;;-1:-1:-1;;;6533:85:4;;3631:2:24;6533:85:4;;;3613:21:24;3670:2;3650:18;;;3643:30;3709:34;3689:18;;;3682:62;-1:-1:-1;;;3760:18:24;;;3753:35;3805:19;;6533:85:4;3429:401:24;6533:85:4;6644:67;666:10:2;6667:7:4;6695:15;6676:16;:34;6644:8;:67::i;:::-;-1:-1:-1;6735:4:4;;6353:393;-1:-1:-1;;;6353:393:4:o;3643:172::-;3729:4;3745:42;666:10:2;3769:9:4;3780:6;3745:9;:42::i;9893:370::-;-1:-1:-1;;;;;10024:19:4;;10016:68;;;;-1:-1:-1;;;10016:68:4;;4037:2:24;10016:68:4;;;4019:21:24;4076:2;4056:18;;;4049:30;4115:34;4095:18;;;4088:62;-1:-1:-1;;;4166:18:24;;;4159:34;4210:19;;10016:68:4;3835:400:24;10016:68:4;-1:-1:-1;;;;;10102:21:4;;10094:68;;;;-1:-1:-1;;;10094:68:4;;4442:2:24;10094:68:4;;;4424:21:24;4481:2;4461:18;;;4454:30;4520:34;4500:18;;;4493:62;-1:-1:-1;;;4571:18:24;;;4564:32;4613:19;;10094:68:4;4240:398:24;10094:68:4;-1:-1:-1;;;;;10173:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10224:32;;1391:25:24;;;10224:32:4;;1364:18:24;10224:32:4;;;;;;;9893:370;;;:::o;7220:701::-;-1:-1:-1;;;;;7355:20:4;;7347:70;;;;-1:-1:-1;;;7347:70:4;;4845:2:24;7347:70:4;;;4827:21:24;4884:2;4864:18;;;4857:30;4923:34;4903:18;;;4896:62;-1:-1:-1;;;4974:18:24;;;4967:35;5019:19;;7347:70:4;4643:401:24;7347:70:4;-1:-1:-1;;;;;7435:23:4;;7427:71;;;;-1:-1:-1;;;7427:71:4;;5251:2:24;7427:71:4;;;5233:21:24;5290:2;5270:18;;;5263:30;5329:34;5309:18;;;5302:62;-1:-1:-1;;;5380:18:24;;;5373:33;5423:19;;7427:71:4;5049:399:24;7427:71:4;-1:-1:-1;;;;;7591:17:4;;7567:21;7591:17;;;;;;;;;;;7626:23;;;;7618:74;;;;-1:-1:-1;;;7618:74:4;;5655:2:24;7618:74:4;;;5637:21:24;5694:2;5674:18;;;5667:30;5733:34;5713:18;;;5706:62;-1:-1:-1;;;5784:18:24;;;5777:36;5830:19;;7618:74:4;5453:402:24;7618:74:4;-1:-1:-1;;;;;7718:17:4;;;:9;:17;;;;;;;;;;;7738:22;;;7718:42;;7776:20;;;;;;;;:30;;7754:6;;7718:9;7776:30;;7754:6;;7776:30;:::i;:::-;;;;;;;;7839:9;-1:-1:-1;;;;;7822:35:4;7831:6;-1:-1:-1;;;;;7822:35:4;;7850:6;7822:35;;;;1391:25:24;;1379:2;1364:18;;1245:177;7822:35:4;;;;;;;;7337:584;7220:701;;;:::o;14:597:24:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:24;574:15;-1:-1:-1;;570:29:24;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:24:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:24;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:24:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:24:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;3199:225::-;3239:3;3270:1;3266:6;3263:1;3260:13;3257:136;;;3315:10;3310:3;3306:20;3303:1;3296:31;3350:4;3347:1;3340:15;3378:4;3375:1;3368:15;3257:136;-1:-1:-1;3409:9:24;;3199:225::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1310,
    11678
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x868 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x712 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78E DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7BA DUP5 PUSH2 0x756 JUMP JUMPDEST SWAP3 POP PUSH2 0x7C8 PUSH1 0x20 DUP6 ADD PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F3 DUP3 PUSH2 0x756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x816 DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH2 0x824 PUSH1 0x20 DUP5 ADD PUSH2 0x756 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x841 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x862 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x889 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xBA CREATE 0xEB PUSH25 0x58ADCFA3694C3D43D134AFFBEF4C0B2EEC1A9291A5D9C74132 0xAA 0x5C PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x39509351"
    },
    "49": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "EQ",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x123"
    },
    "53": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x136"
    },
    "64": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15F"
    },
    "75": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x167"
    },
    "86": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17A"
    },
    "97": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "DUP1",
      "path": "4"
    },
    "99": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "EQ",
      "path": "4"
    },
    "105": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18D"
    },
    "108": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "109": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "DUP1",
      "path": "4"
    },
    "112": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "REVERT",
      "path": "4"
    },
    "113": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "114": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "DUP1",
      "path": "4"
    },
    "115": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "EQ",
      "path": "4"
    },
    "121": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "DUP1",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "EQ",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCC"
    },
    "135": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "DUP1",
      "path": "4"
    },
    "137": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "EQ",
      "path": "4"
    },
    "143": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEF"
    },
    "146": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "147": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "DUP1",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "EQ",
      "path": "4"
    },
    "154": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x101"
    },
    "157": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "158": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "DUP1",
      "path": "4"
    },
    "159": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "EQ",
      "path": "4"
    },
    "165": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x114"
    },
    "168": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "169": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "170": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "DUP1",
      "path": "4"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1310,
        11678
      ],
      "op": "REVERT",
      "path": "4"
    },
    "174": {
      "fn": "ERC20.name",
      "offset": [
        2063,
        2161
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "175": {
      "fn": "ERC20.name",
      "offset": [
        2063,
        2161
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB6"
    },
    "178": {
      "fn": "ERC20.name",
      "offset": [
        2063,
        2161
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C6"
    },
    "181": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2063,
        2161
      ],
      "op": "JUMP",
      "path": "4"
    },
    "182": {
      "fn": "ERC20.name",
      "offset": [
        2063,
        2161
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "183": {
      "fn": "ERC20.name",
      "offset": [
        2063,
        2161
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "185": {
      "fn": "ERC20.name",
      "offset": [
        2063,
        2161
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "186": {
      "fn": "ERC20.name",
      "offset": [
        2063,
        2161
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC3"
    },
    "189": {
      "fn": "ERC20.name",
      "offset": [
        2063,
        2161
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "190": {
      "fn": "ERC20.name",
      "offset": [
        2063,
        2161
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "191": {
      "fn": "ERC20.name",
      "offset": [
        2063,
        2161
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x701"
    },
    "194": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2063,
        2161
      ],
      "op": "JUMP",
      "path": "4"
    },
    "195": {
      "fn": "ERC20.name",
      "offset": [
        2063,
        2161
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "196": {
      "fn": "ERC20.name",
      "offset": [
        2063,
        2161
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "198": {
      "fn": "ERC20.name",
      "offset": [
        2063,
        2161
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "199": {
      "fn": "ERC20.name",
      "offset": [
        2063,
        2161
      ],
      "op": "DUP1",
      "path": "4"
    },
    "200": {
      "fn": "ERC20.name",
      "offset": [
        2063,
        2161
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "201": {
      "fn": "ERC20.name",
      "offset": [
        2063,
        2161
      ],
      "op": "SUB",
      "path": "4"
    },
    "202": {
      "fn": "ERC20.name",
      "offset": [
        2063,
        2161
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "203": {
      "fn": "ERC20.name",
      "offset": [
        2063,
        2161
      ],
      "op": "RETURN",
      "path": "4"
    },
    "204": {
      "fn": "ERC20.approve",
      "offset": [
        4160,
        4326
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "205": {
      "fn": "ERC20.approve",
      "offset": [
        4160,
        4326
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDF"
    },
    "208": {
      "fn": "ERC20.approve",
      "offset": [
        4160,
        4326
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDA"
    },
    "211": {
      "fn": "ERC20.approve",
      "offset": [
        4160,
        4326
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "212": {
      "fn": "ERC20.approve",
      "offset": [
        4160,
        4326
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "214": {
      "fn": "ERC20.approve",
      "offset": [
        4160,
        4326
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x772"
    },
    "217": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4160,
        4326
      ],
      "op": "JUMP",
      "path": "4"
    },
    "218": {
      "fn": "ERC20.approve",
      "offset": [
        4160,
        4326
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "219": {
      "fn": "ERC20.approve",
      "offset": [
        4160,
        4326
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x258"
    },
    "222": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4160,
        4326
      ],
      "op": "JUMP",
      "path": "4"
    },
    "223": {
      "fn": "ERC20.approve",
      "offset": [
        4160,
        4326
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "224": {
      "fn": "ERC20.approve",
      "offset": [
        4160,
        4326
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "226": {
      "fn": "ERC20.approve",
      "offset": [
        4160,
        4326
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "227": {
      "op": "SWAP1"
    },
    "228": {
      "op": "ISZERO"
    },
    "229": {
      "op": "ISZERO"
    },
    "230": {
      "op": "DUP2"
    },
    "231": {
      "op": "MSTORE"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "234": {
      "op": "ADD"
    },
    "235": {
      "fn": "ERC20.approve",
      "offset": [
        4160,
        4326
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC3"
    },
    "238": {
      "op": "JUMP"
    },
    "239": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3151,
        3257
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "240": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3238,
        3250
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 0,
      "value": "0x2"
    },
    "242": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3238,
        3250
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "243": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3151,
        3257
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "244": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3151,
        3257
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3151,
        3257
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "247": {
      "op": "SWAP1"
    },
    "248": {
      "op": "DUP2"
    },
    "249": {
      "op": "MSTORE"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "252": {
      "op": "ADD"
    },
    "253": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3151,
        3257
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC3"
    },
    "256": {
      "op": "JUMP"
    },
    "257": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4793,
        5259
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "258": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4793,
        5259
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDF"
    },
    "261": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4793,
        5259
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10F"
    },
    "264": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4793,
        5259
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "265": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4793,
        5259
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "267": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4793,
        5259
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x79C"
    },
    "270": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4793,
        5259
      ],
      "op": "JUMP",
      "path": "4"
    },
    "271": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4793,
        5259
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4793,
        5259
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x26E"
    },
    "275": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4793,
        5259
      ],
      "op": "JUMP",
      "path": "4"
    },
    "276": {
      "fn": "ERC20.decimals",
      "offset": [
        3000,
        3091
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "277": {
      "fn": "ERC20.decimals",
      "offset": [
        3000,
        3091
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "279": {
      "fn": "ERC20.decimals",
      "offset": [
        3000,
        3091
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "280": {
      "fn": "ERC20.decimals",
      "offset": [
        3082,
        3084
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 1,
      "value": "0x12"
    },
    "282": {
      "op": "DUP2"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "286": {
      "op": "ADD"
    },
    "287": {
      "fn": "ERC20.decimals",
      "offset": [
        3000,
        3091
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC3"
    },
    "290": {
      "op": "JUMP"
    },
    "291": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5654,
        5866
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "292": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5654,
        5866
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDF"
    },
    "295": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5654,
        5866
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x131"
    },
    "298": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5654,
        5866
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "299": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5654,
        5866
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "301": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5654,
        5866
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x772"
    },
    "304": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5654,
        5866
      ],
      "op": "JUMP",
      "path": "4"
    },
    "305": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5654,
        5866
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "306": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5654,
        5866
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x31D"
    },
    "309": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5654,
        5866
      ],
      "op": "JUMP",
      "path": "4"
    },
    "310": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3315,
        3440
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "311": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3315,
        3440
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF3"
    },
    "314": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3315,
        3440
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x144"
    },
    "317": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3315,
        3440
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "318": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3315,
        3440
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "320": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3315,
        3440
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7D8"
    },
    "323": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3315,
        3440
      ],
      "op": "JUMP",
      "path": "4"
    },
    "324": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3315,
        3440
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "331": {
      "op": "SHL"
    },
    "332": {
      "op": "SUB"
    },
    "333": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3415,
        3433
      ],
      "op": "AND",
      "path": "4",
      "statement": 2
    },
    "334": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3389,
        3396
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "336": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3415,
        3433
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "337": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3415,
        3433
      ],
      "op": "DUP2",
      "path": "4"
    },
    "338": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3415,
        3433
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "339": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3415,
        3433
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "341": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3415,
        3433
      ],
      "op": "DUP2",
      "path": "4"
    },
    "342": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3415,
        3433
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "343": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3415,
        3433
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "344": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3415,
        3433
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "346": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3415,
        3433
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "347": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3415,
        3433
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "348": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3415,
        3433
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "349": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3415,
        3433
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "350": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3315,
        3440
      ],
      "op": "JUMP",
      "path": "4"
    },
    "351": {
      "fn": "ERC20.symbol",
      "offset": [
        2274,
        2376
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "352": {
      "fn": "ERC20.symbol",
      "offset": [
        2274,
        2376
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB6"
    },
    "355": {
      "fn": "ERC20.symbol",
      "offset": [
        2274,
        2376
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x359"
    },
    "358": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2274,
        2376
      ],
      "op": "JUMP",
      "path": "4"
    },
    "359": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6353,
        6746
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "360": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6353,
        6746
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDF"
    },
    "363": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6353,
        6746
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x175"
    },
    "366": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6353,
        6746
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "367": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6353,
        6746
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "369": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6353,
        6746
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x772"
    },
    "372": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6353,
        6746
      ],
      "op": "JUMP",
      "path": "4"
    },
    "373": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6353,
        6746
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "374": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6353,
        6746
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x368"
    },
    "377": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6353,
        6746
      ],
      "op": "JUMP",
      "path": "4"
    },
    "378": {
      "fn": "ERC20.transfer",
      "offset": [
        3643,
        3815
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "379": {
      "fn": "ERC20.transfer",
      "offset": [
        3643,
        3815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDF"
    },
    "382": {
      "fn": "ERC20.transfer",
      "offset": [
        3643,
        3815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x188"
    },
    "385": {
      "fn": "ERC20.transfer",
      "offset": [
        3643,
        3815
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "386": {
      "fn": "ERC20.transfer",
      "offset": [
        3643,
        3815
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "388": {
      "fn": "ERC20.transfer",
      "offset": [
        3643,
        3815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x772"
    },
    "391": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3643,
        3815
      ],
      "op": "JUMP",
      "path": "4"
    },
    "392": {
      "fn": "ERC20.transfer",
      "offset": [
        3643,
        3815
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "393": {
      "fn": "ERC20.transfer",
      "offset": [
        3643,
        3815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x401"
    },
    "396": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3643,
        3815
      ],
      "op": "JUMP",
      "path": "4"
    },
    "397": {
      "fn": "ERC20.allowance",
      "offset": [
        3873,
        4022
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "398": {
      "fn": "ERC20.allowance",
      "offset": [
        3873,
        4022
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF3"
    },
    "401": {
      "fn": "ERC20.allowance",
      "offset": [
        3873,
        4022
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x19B"
    },
    "404": {
      "fn": "ERC20.allowance",
      "offset": [
        3873,
        4022
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "405": {
      "fn": "ERC20.allowance",
      "offset": [
        3873,
        4022
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "407": {
      "fn": "ERC20.allowance",
      "offset": [
        3873,
        4022
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7FA"
    },
    "410": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3873,
        4022
      ],
      "op": "JUMP",
      "path": "4"
    },
    "411": {
      "fn": "ERC20.allowance",
      "offset": [
        3873,
        4022
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "418": {
      "op": "SHL"
    },
    "419": {
      "op": "SUB"
    },
    "420": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4006
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 3
    },
    "421": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4006
      ],
      "op": "DUP3",
      "path": "4"
    },
    "422": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4006
      ],
      "op": "AND",
      "path": "4"
    },
    "423": {
      "fn": "ERC20.allowance",
      "offset": [
        3962,
        3969
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "425": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4006
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "426": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4006
      ],
      "op": "DUP2",
      "path": "4"
    },
    "427": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4006
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "428": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        3999
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "430": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4006
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "432": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4006
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "433": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4006
      ],
      "op": "DUP2",
      "path": "4"
    },
    "434": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4006
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "435": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4006
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "437": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4006
      ],
      "op": "DUP1",
      "path": "4"
    },
    "438": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4006
      ],
      "op": "DUP4",
      "path": "4"
    },
    "439": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4006
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "440": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4015
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "441": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4015
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "442": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4015
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "443": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4015
      ],
      "op": "AND",
      "path": "4"
    },
    "444": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4015
      ],
      "op": "DUP3",
      "path": "4"
    },
    "445": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4015
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "446": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4015
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "447": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4015
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "448": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4015
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "449": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4015
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "450": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4015
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "451": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4015
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "452": {
      "fn": "ERC20.allowance",
      "offset": [
        3988,
        4015
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "453": {
      "fn": "ERC20.allowance",
      "offset": [
        3873,
        4022
      ],
      "op": "JUMP",
      "path": "4"
    },
    "454": {
      "fn": "ERC20.name",
      "offset": [
        2063,
        2161
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "455": {
      "fn": "ERC20.name",
      "offset": [
        2117,
        2130
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "457": {
      "fn": "ERC20.name",
      "offset": [
        2149,
        2154
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 4,
      "value": "0x3"
    },
    "459": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP1",
      "path": "4"
    },
    "460": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "461": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D5"
    },
    "464": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "465": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x82D"
    },
    "468": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2142,
        2154
      ],
      "op": "JUMP",
      "path": "4"
    },
    "469": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "470": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP1",
      "path": "4"
    },
    "471": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "473": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "ADD",
      "path": "4"
    },
    "474": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "476": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP1",
      "path": "4"
    },
    "477": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DIV",
      "path": "4"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "MUL",
      "path": "4"
    },
    "480": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "ADD",
      "path": "4"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "486": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "487": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP2",
      "path": "4"
    },
    "488": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "ADD",
      "path": "4"
    },
    "489": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "491": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "492": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP1",
      "path": "4"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "494": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "495": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "496": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP2",
      "path": "4"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP2",
      "path": "4"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "ADD",
      "path": "4"
    },
    "502": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP3",
      "path": "4"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP1",
      "path": "4"
    },
    "504": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "505": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x201"
    },
    "508": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x82D"
    },
    "512": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2142,
        2154
      ],
      "op": "JUMP",
      "path": "4"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "514": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP1",
      "path": "4"
    },
    "515": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x24E"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "520": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP1",
      "path": "4"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "LT",
      "path": "4"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x223"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "531": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP1",
      "path": "4"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP4",
      "path": "4"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "534": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DIV",
      "path": "4"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "MUL",
      "path": "4"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP4",
      "path": "4"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "541": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "ADD",
      "path": "4"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x24E"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "JUMP",
      "path": "4"
    },
    "547": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP3",
      "path": "4"
    },
    "549": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "ADD",
      "path": "4"
    },
    "550": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "561": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP2",
      "path": "4"
    },
    "563": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "564": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP2",
      "path": "4"
    },
    "565": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "569": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "ADD",
      "path": "4"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "ADD",
      "path": "4"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP1",
      "path": "4"
    },
    "575": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP4",
      "path": "4"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "GT",
      "path": "4"
    },
    "577": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x231"
    },
    "580": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "581": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP3",
      "path": "4"
    },
    "582": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "583": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SUB",
      "path": "4"
    },
    "584": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "586": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "AND",
      "path": "4"
    },
    "587": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "DUP3",
      "path": "4"
    },
    "588": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "ADD",
      "path": "4"
    },
    "589": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "590": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "591": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "POP",
      "path": "4"
    },
    "592": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "POP",
      "path": "4"
    },
    "593": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "POP",
      "path": "4"
    },
    "594": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "POP",
      "path": "4"
    },
    "595": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "POP",
      "path": "4"
    },
    "596": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "597": {
      "fn": "ERC20.name",
      "offset": [
        2142,
        2154
      ],
      "op": "POP",
      "path": "4"
    },
    "598": {
      "fn": "ERC20.name",
      "offset": [
        2063,
        2161
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "599": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2063,
        2161
      ],
      "op": "JUMP",
      "path": "4"
    },
    "600": {
      "fn": "ERC20.approve",
      "offset": [
        4160,
        4326
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "601": {
      "fn": "ERC20.approve",
      "offset": [
        4243,
        4247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "603": {
      "fn": "ERC20.approve",
      "offset": [
        4259,
        4298
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 5,
      "value": "0x265"
    },
    "606": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 6
    },
    "607": {
      "fn": "ERC20.approve",
      "offset": [
        4282,
        4289
      ],
      "op": "DUP5",
      "path": "4"
    },
    "608": {
      "fn": "ERC20.approve",
      "offset": [
        4291,
        4297
      ],
      "op": "DUP5",
      "path": "4"
    },
    "609": {
      "fn": "ERC20.approve",
      "offset": [
        4259,
        4267
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x40E"
    },
    "612": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4259,
        4298
      ],
      "op": "JUMP",
      "path": "4"
    },
    "613": {
      "fn": "ERC20.approve",
      "offset": [
        4259,
        4298
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "614": {
      "op": "POP"
    },
    "615": {
      "fn": "ERC20.approve",
      "offset": [
        4315,
        4319
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 7,
      "value": "0x1"
    },
    "617": {
      "fn": "ERC20.approve",
      "offset": [
        4160,
        4326
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "618": {
      "fn": "ERC20.approve",
      "offset": [
        4160,
        4326
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "619": {
      "fn": "ERC20.approve",
      "offset": [
        4160,
        4326
      ],
      "op": "POP",
      "path": "4"
    },
    "620": {
      "fn": "ERC20.approve",
      "offset": [
        4160,
        4326
      ],
      "op": "POP",
      "path": "4"
    },
    "621": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4160,
        4326
      ],
      "op": "JUMP",
      "path": "4"
    },
    "622": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4793,
        5259
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "623": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4929,
        4933
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "625": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4945,
        4981
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 8,
      "value": "0x27B"
    },
    "628": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4955,
        4961
      ],
      "op": "DUP5",
      "path": "4"
    },
    "629": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        4972
      ],
      "op": "DUP5",
      "path": "4"
    },
    "630": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4974,
        4980
      ],
      "op": "DUP5",
      "path": "4"
    },
    "631": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4945,
        4954
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x532"
    },
    "634": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4945,
        4981
      ],
      "op": "JUMP",
      "path": "4"
    },
    "635": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4945,
        4981
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "642": {
      "op": "SHL"
    },
    "643": {
      "op": "SUB"
    },
    "644": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5038
      ],
      "op": "DUP5",
      "path": "4"
    },
    "645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5038
      ],
      "op": "AND",
      "path": "4"
    },
    "646": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4992,
        5016
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "648": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5038
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "649": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5038
      ],
      "op": "DUP2",
      "path": "4"
    },
    "650": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5038
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "651": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5030
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "653": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5038
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "655": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5038
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "656": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5038
      ],
      "op": "DUP2",
      "path": "4"
    },
    "657": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5038
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "658": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5038
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "660": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5038
      ],
      "op": "DUP1",
      "path": "4"
    },
    "661": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5038
      ],
      "op": "DUP4",
      "path": "4"
    },
    "662": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5038
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "663": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "664": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5052
      ],
      "op": "DUP5",
      "path": "4"
    },
    "665": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5052
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "666": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5052
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "667": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5052
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "668": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5052
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "669": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5052
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "670": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5052
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "671": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5019,
        5052
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "672": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5070,
        5096
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 9
    },
    "673": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5070,
        5096
      ],
      "op": "DUP2",
      "path": "4"
    },
    "674": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5070,
        5096
      ],
      "op": "LT",
      "path": "4"
    },
    "675": {
      "branch": 28,
      "fn": "ERC20.transferFrom",
      "offset": [
        5070,
        5096
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "676": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5141
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x305"
    },
    "679": {
      "branch": 28,
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5141
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "680": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5141
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "682": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5141
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "683": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "687": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "689": {
      "op": "SHL"
    },
    "690": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5141
      ],
      "op": "DUP2",
      "path": "4"
    },
    "691": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5141
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "692": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "694": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5141
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "696": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5141
      ],
      "op": "DUP3",
      "path": "4"
    },
    "697": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5141
      ],
      "op": "ADD",
      "path": "4"
    },
    "698": {
      "op": "MSTORE"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "701": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "703": {
      "op": "DUP3"
    },
    "704": {
      "op": "ADD"
    },
    "705": {
      "op": "MSTORE"
    },
    "706": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "741": {
      "op": "DUP3"
    },
    "742": {
      "op": "ADD"
    },
    "743": {
      "op": "MSTORE"
    },
    "744": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "753": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "755": {
      "op": "SHL"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "758": {
      "op": "DUP3"
    },
    "759": {
      "op": "ADD"
    },
    "760": {
      "op": "MSTORE"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "763": {
      "op": "ADD"
    },
    "764": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5141
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "765": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5141
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "767": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5141
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "768": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5141
      ],
      "op": "DUP1",
      "path": "4"
    },
    "769": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5141
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "770": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5141
      ],
      "op": "SUB",
      "path": "4"
    },
    "771": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5141
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "772": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5141
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "773": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5141
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "774": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5167,
        5224
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 10,
      "value": "0x312"
    },
    "777": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5176,
        5182
      ],
      "op": "DUP6",
      "path": "4"
    },
    "778": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "779": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5217,
        5223
      ],
      "op": "DUP6",
      "path": "4"
    },
    "780": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5198,
        5214
      ],
      "op": "DUP5",
      "path": "4"
    },
    "781": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5198,
        5223
      ],
      "op": "SUB",
      "path": "4"
    },
    "782": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5167,
        5175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x40E"
    },
    "785": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5167,
        5224
      ],
      "op": "JUMP",
      "path": "4"
    },
    "786": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5167,
        5224
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "787": {
      "op": "POP"
    },
    "788": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5248,
        5252
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 11,
      "value": "0x1"
    },
    "790": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5248,
        5252
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "791": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4793,
        5259
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "792": {
      "op": "POP"
    },
    "793": {
      "op": "POP"
    },
    "794": {
      "op": "POP"
    },
    "795": {
      "op": "POP"
    },
    "796": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4793,
        5259
      ],
      "op": "JUMP",
      "path": "4"
    },
    "797": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5654,
        5866
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "798": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "799": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5742,
        5746
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "801": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5815
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 12
    },
    "802": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5815
      ],
      "op": "DUP2",
      "path": "4"
    },
    "803": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5815
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "804": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5801
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "806": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5815
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "808": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5815
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "809": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5815
      ],
      "op": "DUP2",
      "path": "4"
    },
    "810": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5815
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "811": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5815
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "813": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "814": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5815
      ],
      "op": "DUP4",
      "path": "4"
    },
    "815": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5815
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "822": {
      "op": "SHL"
    },
    "823": {
      "op": "SUB"
    },
    "824": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5824
      ],
      "op": "DUP8",
      "path": "4"
    },
    "825": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5824
      ],
      "op": "AND",
      "path": "4"
    },
    "826": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5824
      ],
      "op": "DUP5",
      "path": "4"
    },
    "827": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5824
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "828": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5824
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "829": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5824
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "830": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5824
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "831": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5824
      ],
      "op": "DUP2",
      "path": "4"
    },
    "832": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5824
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "833": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5824
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "834": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5742,
        5746
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "835": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5742,
        5746
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "836": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5758,
        5838
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x265"
    },
    "839": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5758,
        5838
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "840": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5781,
        5788
      ],
      "op": "DUP6",
      "path": "4"
    },
    "841": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5781,
        5788
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "842": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5837
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x354"
    },
    "845": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5837
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "846": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5827,
        5837
      ],
      "op": "DUP7",
      "path": "4"
    },
    "847": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5827,
        5837
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "848": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5837
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x868"
    },
    "851": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5790,
        5837
      ],
      "op": "JUMP",
      "path": "4"
    },
    "852": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5790,
        5837
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "853": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5758,
        5766
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x40E"
    },
    "856": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5758,
        5838
      ],
      "op": "JUMP",
      "path": "4"
    },
    "857": {
      "fn": "ERC20.symbol",
      "offset": [
        2274,
        2376
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "858": {
      "fn": "ERC20.symbol",
      "offset": [
        2330,
        2343
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "860": {
      "fn": "ERC20.symbol",
      "offset": [
        2362,
        2369
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 13,
      "value": "0x4"
    },
    "862": {
      "fn": "ERC20.symbol",
      "offset": [
        2355,
        2369
      ],
      "op": "DUP1",
      "path": "4"
    },
    "863": {
      "fn": "ERC20.symbol",
      "offset": [
        2355,
        2369
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "864": {
      "fn": "ERC20.symbol",
      "offset": [
        2355,
        2369
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D5"
    },
    "867": {
      "fn": "ERC20.symbol",
      "offset": [
        2355,
        2369
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "868": {
      "fn": "ERC20.symbol",
      "offset": [
        2355,
        2369
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x82D"
    },
    "871": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2355,
        2369
      ],
      "op": "JUMP",
      "path": "4"
    },
    "872": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6353,
        6746
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "873": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "874": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6446,
        6450
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "876": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6514
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "877": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6514
      ],
      "op": "DUP2",
      "path": "4"
    },
    "878": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6514
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "879": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6500
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "881": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6514
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "883": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6514
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "884": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6514
      ],
      "op": "DUP2",
      "path": "4"
    },
    "885": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6514
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "886": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6514
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "888": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6514
      ],
      "op": "DUP1",
      "path": "4"
    },
    "889": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6514
      ],
      "op": "DUP4",
      "path": "4"
    },
    "890": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6514
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "895": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "897": {
      "op": "SHL"
    },
    "898": {
      "op": "SUB"
    },
    "899": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6523
      ],
      "op": "DUP7",
      "path": "4"
    },
    "900": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6523
      ],
      "op": "AND",
      "path": "4"
    },
    "901": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6523
      ],
      "op": "DUP5",
      "path": "4"
    },
    "902": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6523
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "903": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6523
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "904": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6523
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "905": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6523
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "906": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6523
      ],
      "op": "DUP2",
      "path": "4"
    },
    "907": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6523
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "908": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6489,
        6523
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "909": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6541,
        6576
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 14
    },
    "910": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6541,
        6576
      ],
      "op": "DUP2",
      "path": "4"
    },
    "911": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6541,
        6576
      ],
      "op": "LT",
      "path": "4"
    },
    "912": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6541,
        6576
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "913": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6533,
        6618
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3EA"
    },
    "916": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6533,
        6618
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "917": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6533,
        6618
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "919": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6533,
        6618
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "920": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "924": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "926": {
      "op": "SHL"
    },
    "927": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6533,
        6618
      ],
      "op": "DUP2",
      "path": "4"
    },
    "928": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6533,
        6618
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "931": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6533,
        6618
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "933": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6533,
        6618
      ],
      "op": "DUP3",
      "path": "4"
    },
    "934": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6533,
        6618
      ],
      "op": "ADD",
      "path": "4"
    },
    "935": {
      "op": "MSTORE"
    },
    "936": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "940": {
      "op": "DUP3"
    },
    "941": {
      "op": "ADD"
    },
    "942": {
      "op": "MSTORE"
    },
    "943": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "978": {
      "op": "DUP3"
    },
    "979": {
      "op": "ADD"
    },
    "980": {
      "op": "MSTORE"
    },
    "981": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "987": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "989": {
      "op": "SHL"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "992": {
      "op": "DUP3"
    },
    "993": {
      "op": "ADD"
    },
    "994": {
      "op": "MSTORE"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "997": {
      "op": "ADD"
    },
    "998": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6533,
        6618
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2FC"
    },
    "1001": {
      "op": "JUMP"
    },
    "1002": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6533,
        6618
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1003": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6644,
        6711
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 15,
      "value": "0x3F7"
    },
    "1006": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1007": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6667,
        6674
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1008": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6695,
        6710
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1009": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6676,
        6692
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1010": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6676,
        6710
      ],
      "op": "SUB",
      "path": "4"
    },
    "1011": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6644,
        6652
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x40E"
    },
    "1014": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6644,
        6711
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1015": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6644,
        6711
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1016": {
      "op": "POP"
    },
    "1017": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6735,
        6739
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 16,
      "value": "0x1"
    },
    "1019": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6735,
        6739
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1020": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6353,
        6746
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1021": {
      "op": "POP"
    },
    "1022": {
      "op": "POP"
    },
    "1023": {
      "op": "POP"
    },
    "1024": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6353,
        6746
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1025": {
      "fn": "ERC20.transfer",
      "offset": [
        3643,
        3815
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1026": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3733
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1028": {
      "fn": "ERC20.transfer",
      "offset": [
        3745,
        3787
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 17,
      "value": "0x265"
    },
    "1031": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1032": {
      "fn": "ERC20.transfer",
      "offset": [
        3769,
        3778
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1033": {
      "fn": "ERC20.transfer",
      "offset": [
        3780,
        3786
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1034": {
      "fn": "ERC20.transfer",
      "offset": [
        3745,
        3754
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x532"
    },
    "1037": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3745,
        3787
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1038": {
      "fn": "ERC20._approve",
      "offset": [
        9893,
        10263
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1045": {
      "op": "SHL"
    },
    "1046": {
      "op": "SUB"
    },
    "1047": {
      "fn": "ERC20._approve",
      "offset": [
        10024,
        10043
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 18
    },
    "1048": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        10024,
        10043
      ],
      "op": "AND",
      "path": "4"
    },
    "1049": {
      "fn": "ERC20._approve",
      "offset": [
        10016,
        10084
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x470"
    },
    "1052": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        10016,
        10084
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1053": {
      "fn": "ERC20._approve",
      "offset": [
        10016,
        10084
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1055": {
      "fn": "ERC20._approve",
      "offset": [
        10016,
        10084
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1056": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1062": {
      "op": "SHL"
    },
    "1063": {
      "fn": "ERC20._approve",
      "offset": [
        10016,
        10084
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1064": {
      "fn": "ERC20._approve",
      "offset": [
        10016,
        10084
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1067": {
      "fn": "ERC20._approve",
      "offset": [
        10016,
        10084
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1069": {
      "fn": "ERC20._approve",
      "offset": [
        10016,
        10084
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1070": {
      "fn": "ERC20._approve",
      "offset": [
        10016,
        10084
      ],
      "op": "ADD",
      "path": "4"
    },
    "1071": {
      "op": "MSTORE"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1074": {
      "op": "DUP1"
    },
    "1075": {
      "op": "DUP3"
    },
    "1076": {
      "op": "ADD"
    },
    "1077": {
      "op": "MSTORE"
    },
    "1078": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1113": {
      "op": "DUP3"
    },
    "1114": {
      "op": "ADD"
    },
    "1115": {
      "op": "MSTORE"
    },
    "1116": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1123": {
      "op": "SHL"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1126": {
      "op": "DUP3"
    },
    "1127": {
      "op": "ADD"
    },
    "1128": {
      "op": "MSTORE"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1131": {
      "op": "ADD"
    },
    "1132": {
      "fn": "ERC20._approve",
      "offset": [
        10016,
        10084
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2FC"
    },
    "1135": {
      "op": "JUMP"
    },
    "1136": {
      "fn": "ERC20._approve",
      "offset": [
        10016,
        10084
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1143": {
      "op": "SHL"
    },
    "1144": {
      "op": "SUB"
    },
    "1145": {
      "fn": "ERC20._approve",
      "offset": [
        10102,
        10123
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 19
    },
    "1146": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        10102,
        10123
      ],
      "op": "AND",
      "path": "4"
    },
    "1147": {
      "fn": "ERC20._approve",
      "offset": [
        10094,
        10162
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4D1"
    },
    "1150": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        10094,
        10162
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1151": {
      "fn": "ERC20._approve",
      "offset": [
        10094,
        10162
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1153": {
      "fn": "ERC20._approve",
      "offset": [
        10094,
        10162
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1154": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1160": {
      "op": "SHL"
    },
    "1161": {
      "fn": "ERC20._approve",
      "offset": [
        10094,
        10162
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1162": {
      "fn": "ERC20._approve",
      "offset": [
        10094,
        10162
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1165": {
      "fn": "ERC20._approve",
      "offset": [
        10094,
        10162
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1167": {
      "fn": "ERC20._approve",
      "offset": [
        10094,
        10162
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1168": {
      "fn": "ERC20._approve",
      "offset": [
        10094,
        10162
      ],
      "op": "ADD",
      "path": "4"
    },
    "1169": {
      "op": "MSTORE"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1174": {
      "op": "DUP3"
    },
    "1175": {
      "op": "ADD"
    },
    "1176": {
      "op": "MSTORE"
    },
    "1177": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1212": {
      "op": "DUP3"
    },
    "1213": {
      "op": "ADD"
    },
    "1214": {
      "op": "MSTORE"
    },
    "1215": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1220": {
      "op": "SHL"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1223": {
      "op": "DUP3"
    },
    "1224": {
      "op": "ADD"
    },
    "1225": {
      "op": "MSTORE"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1228": {
      "op": "ADD"
    },
    "1229": {
      "fn": "ERC20._approve",
      "offset": [
        10094,
        10162
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2FC"
    },
    "1232": {
      "op": "JUMP"
    },
    "1233": {
      "fn": "ERC20._approve",
      "offset": [
        10094,
        10162
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1240": {
      "op": "SHL"
    },
    "1241": {
      "op": "SUB"
    },
    "1242": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10191
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 20
    },
    "1243": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10191
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1244": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10191
      ],
      "op": "AND",
      "path": "4"
    },
    "1245": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10191
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1247": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10191
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1248": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10191
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1249": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10191
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1250": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10184
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1252": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10191
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1254": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10191
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1255": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10191
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1256": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10191
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1257": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10191
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1259": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10191
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1260": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10191
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1261": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10191
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1262": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10200
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1263": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10200
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1264": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10200
      ],
      "op": "AND",
      "path": "4"
    },
    "1265": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10200
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1266": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10200
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1267": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10200
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1268": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10200
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1269": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10200
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1270": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10200
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1271": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10200
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1272": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10200
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1273": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10200
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1274": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10200
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1275": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10209
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1276": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10209
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1277": {
      "fn": "ERC20._approve",
      "offset": [
        10173,
        10209
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1278": {
      "fn": "ERC20._approve",
      "offset": [
        10224,
        10256
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 21
    },
    "1279": {
      "fn": "ERC20._approve",
      "offset": [
        10224,
        10256
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1280": {
      "op": "DUP5"
    },
    "1281": {
      "op": "DUP2"
    },
    "1282": {
      "op": "MSTORE"
    },
    "1283": {
      "fn": "ERC20._approve",
      "offset": [
        10224,
        10256
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1316": {
      "fn": "ERC20._approve",
      "offset": [
        10224,
        10256
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1317": {
      "op": "ADD"
    },
    "1318": {
      "fn": "ERC20._approve",
      "offset": [
        10224,
        10256
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1320": {
      "fn": "ERC20._approve",
      "offset": [
        10224,
        10256
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1321": {
      "fn": "ERC20._approve",
      "offset": [
        10224,
        10256
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1322": {
      "fn": "ERC20._approve",
      "offset": [
        10224,
        10256
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1323": {
      "fn": "ERC20._approve",
      "offset": [
        10224,
        10256
      ],
      "op": "SUB",
      "path": "4"
    },
    "1324": {
      "fn": "ERC20._approve",
      "offset": [
        10224,
        10256
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1325": {
      "fn": "ERC20._approve",
      "offset": [
        10224,
        10256
      ],
      "op": "LOG3",
      "path": "4"
    },
    "1326": {
      "fn": "ERC20._approve",
      "offset": [
        9893,
        10263
      ],
      "op": "POP",
      "path": "4"
    },
    "1327": {
      "fn": "ERC20._approve",
      "offset": [
        9893,
        10263
      ],
      "op": "POP",
      "path": "4"
    },
    "1328": {
      "fn": "ERC20._approve",
      "offset": [
        9893,
        10263
      ],
      "op": "POP",
      "path": "4"
    },
    "1329": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9893,
        10263
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1330": {
      "fn": "ERC20._transfer",
      "offset": [
        7220,
        7921
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1337": {
      "op": "SHL"
    },
    "1338": {
      "op": "SUB"
    },
    "1339": {
      "fn": "ERC20._transfer",
      "offset": [
        7355,
        7375
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 22
    },
    "1340": {
      "branch": 32,
      "fn": "ERC20._transfer",
      "offset": [
        7355,
        7375
      ],
      "op": "AND",
      "path": "4"
    },
    "1341": {
      "fn": "ERC20._transfer",
      "offset": [
        7347,
        7417
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x596"
    },
    "1344": {
      "branch": 32,
      "fn": "ERC20._transfer",
      "offset": [
        7347,
        7417
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1345": {
      "fn": "ERC20._transfer",
      "offset": [
        7347,
        7417
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1347": {
      "fn": "ERC20._transfer",
      "offset": [
        7347,
        7417
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1348": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1354": {
      "op": "SHL"
    },
    "1355": {
      "fn": "ERC20._transfer",
      "offset": [
        7347,
        7417
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1356": {
      "fn": "ERC20._transfer",
      "offset": [
        7347,
        7417
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1359": {
      "fn": "ERC20._transfer",
      "offset": [
        7347,
        7417
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1361": {
      "fn": "ERC20._transfer",
      "offset": [
        7347,
        7417
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1362": {
      "fn": "ERC20._transfer",
      "offset": [
        7347,
        7417
      ],
      "op": "ADD",
      "path": "4"
    },
    "1363": {
      "op": "MSTORE"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1368": {
      "op": "DUP3"
    },
    "1369": {
      "op": "ADD"
    },
    "1370": {
      "op": "MSTORE"
    },
    "1371": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1406": {
      "op": "DUP3"
    },
    "1407": {
      "op": "ADD"
    },
    "1408": {
      "op": "MSTORE"
    },
    "1409": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1417": {
      "op": "SHL"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1420": {
      "op": "DUP3"
    },
    "1421": {
      "op": "ADD"
    },
    "1422": {
      "op": "MSTORE"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1425": {
      "op": "ADD"
    },
    "1426": {
      "fn": "ERC20._transfer",
      "offset": [
        7347,
        7417
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2FC"
    },
    "1429": {
      "op": "JUMP"
    },
    "1430": {
      "fn": "ERC20._transfer",
      "offset": [
        7347,
        7417
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1437": {
      "op": "SHL"
    },
    "1438": {
      "op": "SUB"
    },
    "1439": {
      "fn": "ERC20._transfer",
      "offset": [
        7435,
        7458
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 23
    },
    "1440": {
      "branch": 33,
      "fn": "ERC20._transfer",
      "offset": [
        7435,
        7458
      ],
      "op": "AND",
      "path": "4"
    },
    "1441": {
      "fn": "ERC20._transfer",
      "offset": [
        7427,
        7498
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5F8"
    },
    "1444": {
      "branch": 33,
      "fn": "ERC20._transfer",
      "offset": [
        7427,
        7498
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1445": {
      "fn": "ERC20._transfer",
      "offset": [
        7427,
        7498
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1447": {
      "fn": "ERC20._transfer",
      "offset": [
        7427,
        7498
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1448": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1454": {
      "op": "SHL"
    },
    "1455": {
      "fn": "ERC20._transfer",
      "offset": [
        7427,
        7498
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1456": {
      "fn": "ERC20._transfer",
      "offset": [
        7427,
        7498
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1459": {
      "fn": "ERC20._transfer",
      "offset": [
        7427,
        7498
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1461": {
      "fn": "ERC20._transfer",
      "offset": [
        7427,
        7498
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1462": {
      "fn": "ERC20._transfer",
      "offset": [
        7427,
        7498
      ],
      "op": "ADD",
      "path": "4"
    },
    "1463": {
      "op": "MSTORE"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1468": {
      "op": "DUP3"
    },
    "1469": {
      "op": "ADD"
    },
    "1470": {
      "op": "MSTORE"
    },
    "1471": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1506": {
      "op": "DUP3"
    },
    "1507": {
      "op": "ADD"
    },
    "1508": {
      "op": "MSTORE"
    },
    "1509": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1515": {
      "op": "SHL"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1518": {
      "op": "DUP3"
    },
    "1519": {
      "op": "ADD"
    },
    "1520": {
      "op": "MSTORE"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1523": {
      "op": "ADD"
    },
    "1524": {
      "fn": "ERC20._transfer",
      "offset": [
        7427,
        7498
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2FC"
    },
    "1527": {
      "op": "JUMP"
    },
    "1528": {
      "fn": "ERC20._transfer",
      "offset": [
        7427,
        7498
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1535": {
      "op": "SHL"
    },
    "1536": {
      "op": "SUB"
    },
    "1537": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7608
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1538": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7608
      ],
      "op": "AND",
      "path": "4"
    },
    "1539": {
      "fn": "ERC20._transfer",
      "offset": [
        7567,
        7588
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1541": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1542": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7608
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1543": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7608
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1544": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1546": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7608
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1547": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1548": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7608
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1549": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1551": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1552": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7608
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1553": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7608
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1554": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7649
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 24
    },
    "1555": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7649
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1556": {
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7649
      ],
      "op": "LT",
      "path": "4"
    },
    "1557": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7626,
        7649
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1558": {
      "fn": "ERC20._transfer",
      "offset": [
        7618,
        7692
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x670"
    },
    "1561": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7618,
        7692
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1562": {
      "fn": "ERC20._transfer",
      "offset": [
        7618,
        7692
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1564": {
      "fn": "ERC20._transfer",
      "offset": [
        7618,
        7692
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1565": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1571": {
      "op": "SHL"
    },
    "1572": {
      "fn": "ERC20._transfer",
      "offset": [
        7618,
        7692
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1573": {
      "fn": "ERC20._transfer",
      "offset": [
        7618,
        7692
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1576": {
      "fn": "ERC20._transfer",
      "offset": [
        7618,
        7692
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1578": {
      "fn": "ERC20._transfer",
      "offset": [
        7618,
        7692
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1579": {
      "fn": "ERC20._transfer",
      "offset": [
        7618,
        7692
      ],
      "op": "ADD",
      "path": "4"
    },
    "1580": {
      "op": "MSTORE"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1585": {
      "op": "DUP3"
    },
    "1586": {
      "op": "ADD"
    },
    "1587": {
      "op": "MSTORE"
    },
    "1588": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1623": {
      "op": "DUP3"
    },
    "1624": {
      "op": "ADD"
    },
    "1625": {
      "op": "MSTORE"
    },
    "1626": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1635": {
      "op": "SHL"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1638": {
      "op": "DUP3"
    },
    "1639": {
      "op": "ADD"
    },
    "1640": {
      "op": "MSTORE"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1643": {
      "op": "ADD"
    },
    "1644": {
      "fn": "ERC20._transfer",
      "offset": [
        7618,
        7692
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2FC"
    },
    "1647": {
      "op": "JUMP"
    },
    "1648": {
      "fn": "ERC20._transfer",
      "offset": [
        7618,
        7692
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1655": {
      "op": "SHL"
    },
    "1656": {
      "op": "SUB"
    },
    "1657": {
      "fn": "ERC20._transfer",
      "offset": [
        7718,
        7735
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 25
    },
    "1658": {
      "fn": "ERC20._transfer",
      "offset": [
        7718,
        7735
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1659": {
      "fn": "ERC20._transfer",
      "offset": [
        7718,
        7735
      ],
      "op": "AND",
      "path": "4"
    },
    "1660": {
      "fn": "ERC20._transfer",
      "offset": [
        7718,
        7727
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1662": {
      "fn": "ERC20._transfer",
      "offset": [
        7718,
        7735
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1663": {
      "fn": "ERC20._transfer",
      "offset": [
        7718,
        7735
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1664": {
      "fn": "ERC20._transfer",
      "offset": [
        7718,
        7735
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1665": {
      "fn": "ERC20._transfer",
      "offset": [
        7718,
        7735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1667": {
      "fn": "ERC20._transfer",
      "offset": [
        7718,
        7735
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1668": {
      "fn": "ERC20._transfer",
      "offset": [
        7718,
        7735
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1669": {
      "fn": "ERC20._transfer",
      "offset": [
        7718,
        7735
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1670": {
      "fn": "ERC20._transfer",
      "offset": [
        7718,
        7735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1672": {
      "fn": "ERC20._transfer",
      "offset": [
        7718,
        7735
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1673": {
      "fn": "ERC20._transfer",
      "offset": [
        7718,
        7735
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1674": {
      "fn": "ERC20._transfer",
      "offset": [
        7718,
        7735
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1675": {
      "fn": "ERC20._transfer",
      "offset": [
        7738,
        7760
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1676": {
      "fn": "ERC20._transfer",
      "offset": [
        7738,
        7760
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1677": {
      "fn": "ERC20._transfer",
      "offset": [
        7738,
        7760
      ],
      "op": "SUB",
      "path": "4"
    },
    "1678": {
      "fn": "ERC20._transfer",
      "offset": [
        7718,
        7760
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1679": {
      "fn": "ERC20._transfer",
      "offset": [
        7718,
        7760
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1680": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7796
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 26
    },
    "1681": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7796
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1682": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7796
      ],
      "op": "AND",
      "path": "4"
    },
    "1683": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7796
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1684": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7796
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1685": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7796
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1686": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7796
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1687": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7796
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1688": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7806
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1689": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7806
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1690": {
      "fn": "ERC20._transfer",
      "offset": [
        7754,
        7760
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1691": {
      "fn": "ERC20._transfer",
      "offset": [
        7754,
        7760
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1692": {
      "fn": "ERC20._transfer",
      "offset": [
        7718,
        7727
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1693": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7806
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6A7"
    },
    "1696": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7806
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1697": {
      "fn": "ERC20._transfer",
      "offset": [
        7754,
        7760
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1698": {
      "fn": "ERC20._transfer",
      "offset": [
        7754,
        7760
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1699": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7806
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x868"
    },
    "1702": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7776,
        7806
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1703": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7806
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1704": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7806
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1705": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7806
      ],
      "op": "POP",
      "path": "4"
    },
    "1706": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7806
      ],
      "op": "POP",
      "path": "4"
    },
    "1707": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7806
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1708": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7806
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1709": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7806
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1710": {
      "fn": "ERC20._transfer",
      "offset": [
        7776,
        7806
      ],
      "op": "POP",
      "path": "4"
    },
    "1711": {
      "fn": "ERC20._transfer",
      "offset": [
        7839,
        7848
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 27
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1718": {
      "op": "SHL"
    },
    "1719": {
      "op": "SUB"
    },
    "1720": {
      "fn": "ERC20._transfer",
      "offset": [
        7822,
        7857
      ],
      "op": "AND",
      "path": "4"
    },
    "1721": {
      "fn": "ERC20._transfer",
      "offset": [
        7831,
        7837
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1728": {
      "op": "SHL"
    },
    "1729": {
      "op": "SUB"
    },
    "1730": {
      "fn": "ERC20._transfer",
      "offset": [
        7822,
        7857
      ],
      "op": "AND",
      "path": "4"
    },
    "1731": {
      "fn": "ERC20._transfer",
      "offset": [
        7822,
        7857
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1764": {
      "fn": "ERC20._transfer",
      "offset": [
        7850,
        7856
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1765": {
      "fn": "ERC20._transfer",
      "offset": [
        7822,
        7857
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1767": {
      "fn": "ERC20._transfer",
      "offset": [
        7822,
        7857
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1768": {
      "fn": "ERC20._transfer",
      "offset": [
        7822,
        7857
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6F3"
    },
    "1771": {
      "fn": "ERC20._transfer",
      "offset": [
        7822,
        7857
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1772": {
      "op": "DUP2"
    },
    "1773": {
      "op": "MSTORE"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1776": {
      "op": "ADD"
    },
    "1777": {
      "op": "SWAP1"
    },
    "1778": {
      "op": "JUMP"
    },
    "1779": {
      "fn": "ERC20._transfer",
      "offset": [
        7822,
        7857
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1780": {
      "fn": "ERC20._transfer",
      "offset": [
        7822,
        7857
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1782": {
      "fn": "ERC20._transfer",
      "offset": [
        7822,
        7857
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1783": {
      "fn": "ERC20._transfer",
      "offset": [
        7822,
        7857
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1784": {
      "fn": "ERC20._transfer",
      "offset": [
        7822,
        7857
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1785": {
      "fn": "ERC20._transfer",
      "offset": [
        7822,
        7857
      ],
      "op": "SUB",
      "path": "4"
    },
    "1786": {
      "fn": "ERC20._transfer",
      "offset": [
        7822,
        7857
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1787": {
      "fn": "ERC20._transfer",
      "offset": [
        7822,
        7857
      ],
      "op": "LOG3",
      "path": "4"
    },
    "1788": {
      "fn": "ERC20._transfer",
      "offset": [
        7337,
        7921
      ],
      "op": "POP",
      "path": "4"
    },
    "1789": {
      "fn": "ERC20._transfer",
      "offset": [
        7220,
        7921
      ],
      "op": "POP",
      "path": "4"
    },
    "1790": {
      "fn": "ERC20._transfer",
      "offset": [
        7220,
        7921
      ],
      "op": "POP",
      "path": "4"
    },
    "1791": {
      "fn": "ERC20._transfer",
      "offset": [
        7220,
        7921
      ],
      "op": "POP",
      "path": "4"
    },
    "1792": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7220,
        7921
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1793": {
      "op": "JUMPDEST"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1798": {
      "op": "DUP1"
    },
    "1799": {
      "op": "DUP4"
    },
    "1800": {
      "op": "MSTORE"
    },
    "1801": {
      "op": "DUP4"
    },
    "1802": {
      "op": "MLOAD"
    },
    "1803": {
      "op": "DUP1"
    },
    "1804": {
      "op": "DUP3"
    },
    "1805": {
      "op": "DUP6"
    },
    "1806": {
      "op": "ADD"
    },
    "1807": {
      "op": "MSTORE"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1810": {
      "op": "JUMPDEST"
    },
    "1811": {
      "op": "DUP2"
    },
    "1812": {
      "op": "DUP2"
    },
    "1813": {
      "op": "LT"
    },
    "1814": {
      "op": "ISZERO"
    },
    "1815": {
      "op": "PUSH2",
      "value": "0x72E"
    },
    "1818": {
      "op": "JUMPI"
    },
    "1819": {
      "op": "DUP6"
    },
    "1820": {
      "op": "DUP2"
    },
    "1821": {
      "op": "ADD"
    },
    "1822": {
      "op": "DUP4"
    },
    "1823": {
      "op": "ADD"
    },
    "1824": {
      "op": "MLOAD"
    },
    "1825": {
      "op": "DUP6"
    },
    "1826": {
      "op": "DUP3"
    },
    "1827": {
      "op": "ADD"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1830": {
      "op": "ADD"
    },
    "1831": {
      "op": "MSTORE"
    },
    "1832": {
      "op": "DUP3"
    },
    "1833": {
      "op": "ADD"
    },
    "1834": {
      "op": "PUSH2",
      "value": "0x712"
    },
    "1837": {
      "op": "JUMP"
    },
    "1838": {
      "op": "JUMPDEST"
    },
    "1839": {
      "op": "DUP2"
    },
    "1840": {
      "op": "DUP2"
    },
    "1841": {
      "op": "GT"
    },
    "1842": {
      "op": "ISZERO"
    },
    "1843": {
      "op": "PUSH2",
      "value": "0x740"
    },
    "1846": {
      "op": "JUMPI"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1851": {
      "op": "DUP4"
    },
    "1852": {
      "op": "DUP8"
    },
    "1853": {
      "op": "ADD"
    },
    "1854": {
      "op": "ADD"
    },
    "1855": {
      "op": "MSTORE"
    },
    "1856": {
      "op": "JUMPDEST"
    },
    "1857": {
      "op": "POP"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1860": {
      "op": "ADD"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1863": {
      "op": "NOT"
    },
    "1864": {
      "op": "AND"
    },
    "1865": {
      "op": "SWAP3"
    },
    "1866": {
      "op": "SWAP1"
    },
    "1867": {
      "op": "SWAP3"
    },
    "1868": {
      "op": "ADD"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1871": {
      "op": "ADD"
    },
    "1872": {
      "op": "SWAP4"
    },
    "1873": {
      "op": "SWAP3"
    },
    "1874": {
      "op": "POP"
    },
    "1875": {
      "op": "POP"
    },
    "1876": {
      "op": "POP"
    },
    "1877": {
      "jump": "o",
      "op": "JUMP"
    },
    "1878": {
      "op": "JUMPDEST"
    },
    "1879": {
      "op": "DUP1"
    },
    "1880": {
      "op": "CALLDATALOAD"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1887": {
      "op": "SHL"
    },
    "1888": {
      "op": "SUB"
    },
    "1889": {
      "op": "DUP2"
    },
    "1890": {
      "op": "AND"
    },
    "1891": {
      "op": "DUP2"
    },
    "1892": {
      "op": "EQ"
    },
    "1893": {
      "op": "PUSH2",
      "value": "0x76D"
    },
    "1896": {
      "op": "JUMPI"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1899": {
      "op": "DUP1"
    },
    "1900": {
      "op": "REVERT"
    },
    "1901": {
      "op": "JUMPDEST"
    },
    "1902": {
      "op": "SWAP2"
    },
    "1903": {
      "op": "SWAP1"
    },
    "1904": {
      "op": "POP"
    },
    "1905": {
      "jump": "o",
      "op": "JUMP"
    },
    "1906": {
      "op": "JUMPDEST"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1909": {
      "op": "DUP1"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1912": {
      "op": "DUP4"
    },
    "1913": {
      "op": "DUP6"
    },
    "1914": {
      "op": "SUB"
    },
    "1915": {
      "op": "SLT"
    },
    "1916": {
      "op": "ISZERO"
    },
    "1917": {
      "op": "PUSH2",
      "value": "0x785"
    },
    "1920": {
      "op": "JUMPI"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1923": {
      "op": "DUP1"
    },
    "1924": {
      "op": "REVERT"
    },
    "1925": {
      "op": "JUMPDEST"
    },
    "1926": {
      "op": "PUSH2",
      "value": "0x78E"
    },
    "1929": {
      "op": "DUP4"
    },
    "1930": {
      "op": "PUSH2",
      "value": "0x756"
    },
    "1933": {
      "jump": "i",
      "op": "JUMP"
    },
    "1934": {
      "op": "JUMPDEST"
    },
    "1935": {
      "op": "SWAP5"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1938": {
      "op": "SWAP4"
    },
    "1939": {
      "op": "SWAP1"
    },
    "1940": {
      "op": "SWAP4"
    },
    "1941": {
      "op": "ADD"
    },
    "1942": {
      "op": "CALLDATALOAD"
    },
    "1943": {
      "op": "SWAP4"
    },
    "1944": {
      "op": "POP"
    },
    "1945": {
      "op": "POP"
    },
    "1946": {
      "op": "POP"
    },
    "1947": {
      "jump": "o",
      "op": "JUMP"
    },
    "1948": {
      "op": "JUMPDEST"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1951": {
      "op": "DUP1"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1956": {
      "op": "DUP5"
    },
    "1957": {
      "op": "DUP7"
    },
    "1958": {
      "op": "SUB"
    },
    "1959": {
      "op": "SLT"
    },
    "1960": {
      "op": "ISZERO"
    },
    "1961": {
      "op": "PUSH2",
      "value": "0x7B1"
    },
    "1964": {
      "op": "JUMPI"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1967": {
      "op": "DUP1"
    },
    "1968": {
      "op": "REVERT"
    },
    "1969": {
      "op": "JUMPDEST"
    },
    "1970": {
      "op": "PUSH2",
      "value": "0x7BA"
    },
    "1973": {
      "op": "DUP5"
    },
    "1974": {
      "op": "PUSH2",
      "value": "0x756"
    },
    "1977": {
      "jump": "i",
      "op": "JUMP"
    },
    "1978": {
      "op": "JUMPDEST"
    },
    "1979": {
      "op": "SWAP3"
    },
    "1980": {
      "op": "POP"
    },
    "1981": {
      "op": "PUSH2",
      "value": "0x7C8"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1986": {
      "op": "DUP6"
    },
    "1987": {
      "op": "ADD"
    },
    "1988": {
      "op": "PUSH2",
      "value": "0x756"
    },
    "1991": {
      "jump": "i",
      "op": "JUMP"
    },
    "1992": {
      "op": "JUMPDEST"
    },
    "1993": {
      "op": "SWAP2"
    },
    "1994": {
      "op": "POP"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1997": {
      "op": "DUP5"
    },
    "1998": {
      "op": "ADD"
    },
    "1999": {
      "op": "CALLDATALOAD"
    },
    "2000": {
      "op": "SWAP1"
    },
    "2001": {
      "op": "POP"
    },
    "2002": {
      "op": "SWAP3"
    },
    "2003": {
      "op": "POP"
    },
    "2004": {
      "op": "SWAP3"
    },
    "2005": {
      "op": "POP"
    },
    "2006": {
      "op": "SWAP3"
    },
    "2007": {
      "jump": "o",
      "op": "JUMP"
    },
    "2008": {
      "op": "JUMPDEST"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2013": {
      "op": "DUP3"
    },
    "2014": {
      "op": "DUP5"
    },
    "2015": {
      "op": "SUB"
    },
    "2016": {
      "op": "SLT"
    },
    "2017": {
      "op": "ISZERO"
    },
    "2018": {
      "op": "PUSH2",
      "value": "0x7EA"
    },
    "2021": {
      "op": "JUMPI"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2024": {
      "op": "DUP1"
    },
    "2025": {
      "op": "REVERT"
    },
    "2026": {
      "op": "JUMPDEST"
    },
    "2027": {
      "op": "PUSH2",
      "value": "0x7F3"
    },
    "2030": {
      "op": "DUP3"
    },
    "2031": {
      "op": "PUSH2",
      "value": "0x756"
    },
    "2034": {
      "jump": "i",
      "op": "JUMP"
    },
    "2035": {
      "op": "JUMPDEST"
    },
    "2036": {
      "op": "SWAP4"
    },
    "2037": {
      "op": "SWAP3"
    },
    "2038": {
      "op": "POP"
    },
    "2039": {
      "op": "POP"
    },
    "2040": {
      "op": "POP"
    },
    "2041": {
      "jump": "o",
      "op": "JUMP"
    },
    "2042": {
      "op": "JUMPDEST"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2045": {
      "op": "DUP1"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2048": {
      "op": "DUP4"
    },
    "2049": {
      "op": "DUP6"
    },
    "2050": {
      "op": "SUB"
    },
    "2051": {
      "op": "SLT"
    },
    "2052": {
      "op": "ISZERO"
    },
    "2053": {
      "op": "PUSH2",
      "value": "0x80D"
    },
    "2056": {
      "op": "JUMPI"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2059": {
      "op": "DUP1"
    },
    "2060": {
      "op": "REVERT"
    },
    "2061": {
      "op": "JUMPDEST"
    },
    "2062": {
      "op": "PUSH2",
      "value": "0x816"
    },
    "2065": {
      "op": "DUP4"
    },
    "2066": {
      "op": "PUSH2",
      "value": "0x756"
    },
    "2069": {
      "jump": "i",
      "op": "JUMP"
    },
    "2070": {
      "op": "JUMPDEST"
    },
    "2071": {
      "op": "SWAP2"
    },
    "2072": {
      "op": "POP"
    },
    "2073": {
      "op": "PUSH2",
      "value": "0x824"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2078": {
      "op": "DUP5"
    },
    "2079": {
      "op": "ADD"
    },
    "2080": {
      "op": "PUSH2",
      "value": "0x756"
    },
    "2083": {
      "jump": "i",
      "op": "JUMP"
    },
    "2084": {
      "op": "JUMPDEST"
    },
    "2085": {
      "op": "SWAP1"
    },
    "2086": {
      "op": "POP"
    },
    "2087": {
      "op": "SWAP3"
    },
    "2088": {
      "op": "POP"
    },
    "2089": {
      "op": "SWAP3"
    },
    "2090": {
      "op": "SWAP1"
    },
    "2091": {
      "op": "POP"
    },
    "2092": {
      "jump": "o",
      "op": "JUMP"
    },
    "2093": {
      "op": "JUMPDEST"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2096": {
      "op": "DUP2"
    },
    "2097": {
      "op": "DUP2"
    },
    "2098": {
      "op": "SHR"
    },
    "2099": {
      "op": "SWAP1"
    },
    "2100": {
      "op": "DUP3"
    },
    "2101": {
      "op": "AND"
    },
    "2102": {
      "op": "DUP1"
    },
    "2103": {
      "op": "PUSH2",
      "value": "0x841"
    },
    "2106": {
      "op": "JUMPI"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2109": {
      "op": "DUP3"
    },
    "2110": {
      "op": "AND"
    },
    "2111": {
      "op": "SWAP2"
    },
    "2112": {
      "op": "POP"
    },
    "2113": {
      "op": "JUMPDEST"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2116": {
      "op": "DUP3"
    },
    "2117": {
      "op": "LT"
    },
    "2118": {
      "op": "DUP2"
    },
    "2119": {
      "op": "EQ"
    },
    "2120": {
      "op": "ISZERO"
    },
    "2121": {
      "op": "PUSH2",
      "value": "0x862"
    },
    "2124": {
      "op": "JUMPI"
    },
    "2125": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2132": {
      "op": "SHL"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2135": {
      "op": "MSTORE"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2140": {
      "op": "MSTORE"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2145": {
      "op": "REVERT"
    },
    "2146": {
      "op": "JUMPDEST"
    },
    "2147": {
      "op": "POP"
    },
    "2148": {
      "op": "SWAP2"
    },
    "2149": {
      "op": "SWAP1"
    },
    "2150": {
      "op": "POP"
    },
    "2151": {
      "jump": "o",
      "op": "JUMP"
    },
    "2152": {
      "op": "JUMPDEST"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2155": {
      "op": "DUP3"
    },
    "2156": {
      "op": "NOT"
    },
    "2157": {
      "op": "DUP3"
    },
    "2158": {
      "op": "GT"
    },
    "2159": {
      "op": "ISZERO"
    },
    "2160": {
      "op": "PUSH2",
      "value": "0x889"
    },
    "2163": {
      "op": "JUMPI"
    },
    "2164": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2171": {
      "op": "SHL"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2174": {
      "op": "MSTORE"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2179": {
      "op": "MSTORE"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2184": {
      "op": "REVERT"
    },
    "2185": {
      "op": "JUMPDEST"
    },
    "2186": {
      "op": "POP"
    },
    "2187": {
      "op": "ADD"
    },
    "2188": {
      "op": "SWAP1"
    },
    "2189": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "07346244840da17e57b144c3ca21499afc8e5ed0",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./IERC20Metadata.sol\";\nimport \"./Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n    unchecked {\n        _approve(sender, _msgSender(), currentAllowance - amount);\n    }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n    unchecked {\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n    }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n    unchecked {\n        _balances[sender] = senderBalance - amount;\n    }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /***@dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n    unchecked {\n        _balances[account] = accountBalance - amount;\n    }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}",
  "sourceMap": "1310:10368:4:-:0;;;1885:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1951:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1974:17:4;;;;:7;;:17;;;;;:::i;:::-;;1885:113;;1310:10368;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1310:10368:4;;;-1:-1:-1;1310:10368:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:24;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:24;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:24;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:24:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:24;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1310:10368:4;;;;;;",
  "sourcePath": "contracts/ERC20.sol",
  "type": "contract"
}