{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Address.sol",
    "1": "contracts/Context.sol",
    "10": "contracts/IERC721.sol",
    "12": "contracts/IERC721Metadata.sol",
    "13": "contracts/IERC721Receiver.sol",
    "2": "contracts/ERC165.sol",
    "22": "contracts/Strings.sol",
    "4": "contracts/ERC721.sol",
    "7": "contracts/IERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        296
      ],
      "Context": [
        318
      ],
      "ERC165": [
        342
      ],
      "ERC721": [
        1689
      ],
      "IERC165": [
        2057
      ],
      "IERC721": [
        2276
      ],
      "IERC721Metadata": [
        2334
      ],
      "IERC721Receiver": [
        2352
      ],
      "Strings": [
        3940
      ]
    },
    "id": 1690,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 889,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:4"
      },
      {
        "absolutePath": "contracts/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 890,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1690,
        "sourceUnit": 2277,
        "src": "58:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 891,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1690,
        "sourceUnit": 2353,
        "src": "82:31:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/IERC721Metadata.sol",
        "file": "./IERC721Metadata.sol",
        "id": 892,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1690,
        "sourceUnit": 2335,
        "src": "114:31:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Address.sol",
        "file": "./Address.sol",
        "id": 893,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1690,
        "sourceUnit": 297,
        "src": "146:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Context.sol",
        "file": "./Context.sol",
        "id": 894,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1690,
        "sourceUnit": 319,
        "src": "170:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Strings.sol",
        "file": "./Strings.sol",
        "id": 895,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1690,
        "sourceUnit": 3941,
        "src": "194:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ERC165.sol",
        "file": "./ERC165.sol",
        "id": 896,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1690,
        "sourceUnit": 343,
        "src": "218:22:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 898,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 318,
              "src": "508:7:4"
            },
            "id": 899,
            "nodeType": "InheritanceSpecifier",
            "src": "508:7:4"
          },
          {
            "baseName": {
              "id": 900,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 342,
              "src": "517:6:4"
            },
            "id": 901,
            "nodeType": "InheritanceSpecifier",
            "src": "517:6:4"
          },
          {
            "baseName": {
              "id": 902,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2276,
              "src": "525:7:4"
            },
            "id": 903,
            "nodeType": "InheritanceSpecifier",
            "src": "525:7:4"
          },
          {
            "baseName": {
              "id": 904,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2334,
              "src": "534:15:4"
            },
            "id": 905,
            "nodeType": "InheritanceSpecifier",
            "src": "534:15:4"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 897,
          "nodeType": "StructuredDocumentation",
          "src": "242:246:4",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 1689,
        "linearizedBaseContracts": [
          1689,
          2334,
          2276,
          342,
          2057,
          318
        ],
        "name": "ERC721",
        "nameLocation": "498:6:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 908,
            "libraryName": {
              "id": 906,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 296,
              "src": "562:7:4"
            },
            "nodeType": "UsingForDirective",
            "src": "556:26:4",
            "typeName": {
              "id": 907,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "574:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 911,
            "libraryName": {
              "id": 909,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3940,
              "src": "593:7:4"
            },
            "nodeType": "UsingForDirective",
            "src": "587:26:4",
            "typeName": {
              "id": 910,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "605:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 913,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "652:5:4",
            "nodeType": "VariableDeclaration",
            "scope": 1689,
            "src": "637:20:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 912,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "637:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 915,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "699:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 1689,
            "src": "684:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 914,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "684:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 919,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "795:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 1689,
            "src": "759:43:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 918,
              "keyType": {
                "id": 916,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "767:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "759:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 917,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "778:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 923,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "889:9:4",
            "nodeType": "VariableDeclaration",
            "scope": 1689,
            "src": "853:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 922,
              "keyType": {
                "id": 920,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "861:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "853:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 921,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "872:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 927,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "990:15:4",
            "nodeType": "VariableDeclaration",
            "scope": 1689,
            "src": "954:51:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 926,
              "keyType": {
                "id": 924,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "962:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "954:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 925,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "973:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 933,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1113:18:4",
            "nodeType": "VariableDeclaration",
            "scope": 1689,
            "src": "1060:71:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 932,
              "keyType": {
                "id": 928,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1068:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1060:44:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 931,
                "keyType": {
                  "id": 929,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1087:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1079:24:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 930,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1098:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 949,
              "nodeType": "Block",
              "src": "1307:57:4",
              "statements": [
                {
                  "expression": {
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 941,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 913,
                      "src": "1317:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 942,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 936,
                      "src": "1325:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1317:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 944,
                  "nodeType": "ExpressionStatement",
                  "src": "1317:13:4"
                },
                {
                  "expression": {
                    "id": 947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 945,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 915,
                      "src": "1340:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 946,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 938,
                      "src": "1350:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1340:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 948,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:17:4"
                }
              ]
            },
            "documentation": {
              "id": 934,
              "nodeType": "StructuredDocumentation",
              "src": "1138:108:4",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 950,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 936,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1277:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 950,
                  "src": "1263:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 935,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 938,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1298:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 950,
                  "src": "1284:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 937,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1262:44:4"
            },
            "returnParameters": {
              "id": 940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1307:0:4"
            },
            "scope": 1689,
            "src": "1251:113:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              341,
              2056
            ],
            "body": {
              "id": 980,
              "nodeType": "Block",
              "src": "1583:192:4",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 961,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 953,
                          "src": "1612:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 963,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2276,
                                "src": "1632:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$2276_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$2276_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 962,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1627:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1627:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$2276",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1627:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1612:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 967,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 953,
                          "src": "1668:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 969,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2334,
                                "src": "1688:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2334_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2334_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 968,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1683:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1683:21:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$2334",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1683:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1668:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1612:104:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 976,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 953,
                          "src": "1756:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 974,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1732:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$1689_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 341,
                        "src": "1732:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1732:36:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1612:156:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 960,
                  "id": 979,
                  "nodeType": "Return",
                  "src": "1593:175:4"
                }
              ]
            },
            "documentation": {
              "id": 951,
              "nodeType": "StructuredDocumentation",
              "src": "1370:56:4",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 981,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1440:17:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 957,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 955,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 342,
                  "src": "1539:6:4"
                },
                {
                  "id": 956,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2057,
                  "src": "1547:7:4"
                }
              ],
              "src": "1530:25:4"
            },
            "parameters": {
              "id": 954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 953,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1465:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 981,
                  "src": "1458:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 952,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1458:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1457:20:4"
            },
            "returnParameters": {
              "id": 960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 959,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 981,
                  "src": "1573:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 958,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1573:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1572:6:4"
            },
            "scope": 1689,
            "src": "1431:344:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2201
            ],
            "body": {
              "id": 1004,
              "nodeType": "Block",
              "src": "1959:158:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 991,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 984,
                          "src": "1990:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2007:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1999:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 992,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1999:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1999:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1990:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2023:44:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 990,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1969:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1969:108:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 999,
                  "nodeType": "ExpressionStatement",
                  "src": "1969:108:4"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1000,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 923,
                      "src": "2094:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1002,
                    "indexExpression": {
                      "id": 1001,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 984,
                      "src": "2104:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2094:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 989,
                  "id": 1003,
                  "nodeType": "Return",
                  "src": "2087:23:4"
                }
              ]
            },
            "documentation": {
              "id": 982,
              "nodeType": "StructuredDocumentation",
              "src": "1781:48:4",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 1005,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1843:9:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 986,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1920:8:4"
            },
            "parameters": {
              "id": 985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 984,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1861:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "1853:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1852:15:4"
            },
            "returnParameters": {
              "id": 989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 988,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "1946:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1946:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1945:9:4"
            },
            "scope": 1689,
            "src": "1834:283:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2209
            ],
            "body": {
              "id": 1032,
              "nodeType": "Block",
              "src": "2299:188:4",
              "statements": [
                {
                  "assignments": [
                    1015
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1015,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2317:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1032,
                      "src": "2309:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1014,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2309:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1019,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1016,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 919,
                      "src": "2325:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 1018,
                    "indexExpression": {
                      "id": 1017,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1008,
                      "src": "2333:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2325:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2309:32:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1021,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1015,
                          "src": "2372:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2389:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2381:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1022,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2381:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2381:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2372:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2405:43:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 1020,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2351:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2351:107:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1029,
                  "nodeType": "ExpressionStatement",
                  "src": "2351:107:4"
                },
                {
                  "expression": {
                    "id": 1030,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1015,
                    "src": "2475:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1013,
                  "id": 1031,
                  "nodeType": "Return",
                  "src": "2468:12:4"
                }
              ]
            },
            "documentation": {
              "id": 1006,
              "nodeType": "StructuredDocumentation",
              "src": "2123:46:4",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 1033,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2183:7:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1010,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2260:8:4"
            },
            "parameters": {
              "id": 1009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1008,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2199:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "2191:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2191:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2190:17:4"
            },
            "returnParameters": {
              "id": 1013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1012,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "2286:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2286:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2285:9:4"
            },
            "scope": 1689,
            "src": "2174:313:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2319
            ],
            "body": {
              "id": 1042,
              "nodeType": "Block",
              "src": "2618:29:4",
              "statements": [
                {
                  "expression": {
                    "id": 1040,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 913,
                    "src": "2635:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1039,
                  "id": 1041,
                  "nodeType": "Return",
                  "src": "2628:12:4"
                }
              ]
            },
            "documentation": {
              "id": 1034,
              "nodeType": "StructuredDocumentation",
              "src": "2493:51:4",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 1043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2558:4:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1036,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2585:8:4"
            },
            "parameters": {
              "id": 1035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2562:2:4"
            },
            "returnParameters": {
              "id": 1039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1038,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1043,
                  "src": "2603:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1037,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2603:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2602:15:4"
            },
            "scope": 1689,
            "src": "2549:98:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2325
            ],
            "body": {
              "id": 1052,
              "nodeType": "Block",
              "src": "2782:31:4",
              "statements": [
                {
                  "expression": {
                    "id": 1050,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 915,
                    "src": "2799:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1049,
                  "id": 1051,
                  "nodeType": "Return",
                  "src": "2792:14:4"
                }
              ]
            },
            "documentation": {
              "id": 1044,
              "nodeType": "StructuredDocumentation",
              "src": "2653:53:4",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 1053,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2720:6:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1046,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2749:8:4"
            },
            "parameters": {
              "id": 1045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2726:2:4"
            },
            "returnParameters": {
              "id": 1049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1048,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1053,
                  "src": "2767:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1047,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2767:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2766:15:4"
            },
            "scope": 1689,
            "src": "2711:102:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2333
            ],
            "body": {
              "id": 1094,
              "nodeType": "Block",
              "src": "3011:319:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1064,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1056,
                            "src": "3050:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1063,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1342,
                          "src": "3042:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3042:16:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3072:49:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 1062,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3021:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3021:110:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1068,
                  "nodeType": "ExpressionStatement",
                  "src": "3021:110:4"
                },
                {
                  "assignments": [
                    1070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1070,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "3156:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1094,
                      "src": "3142:21:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1069,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3142:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1073,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1071,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1104,
                      "src": "3166:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3166:10:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3142:34:4"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1076,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1070,
                              "src": "3211:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3205:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 1074,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3205:5:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3205:14:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 1078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3205:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3229:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3205:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 1091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3321:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 1092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3205:118:4",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1085,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1070,
                              "src": "3273:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1086,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1056,
                                  "src": "3282:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1087,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3822,
                                "src": "3282:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 1088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3282:18:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 1083,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3256:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3256:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3256:45:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 1082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3249:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 1081,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3249:6:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3249:53:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1061,
                  "id": 1093,
                  "nodeType": "Return",
                  "src": "3186:137:4"
                }
              ]
            },
            "documentation": {
              "id": 1054,
              "nodeType": "StructuredDocumentation",
              "src": "2819:55:4",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 1095,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2888:8:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1058,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2966:8:4"
            },
            "parameters": {
              "id": 1057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1056,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2905:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1095,
                  "src": "2897:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1055,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2897:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2896:17:4"
            },
            "returnParameters": {
              "id": 1061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1060,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1095,
                  "src": "2992:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1059,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2992:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2991:15:4"
            },
            "scope": 1689,
            "src": "2879:451:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1103,
              "nodeType": "Block",
              "src": "3637:26:4",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 1101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3654:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 1100,
                  "id": 1102,
                  "nodeType": "Return",
                  "src": "3647:9:4"
                }
              ]
            },
            "documentation": {
              "id": 1096,
              "nodeType": "StructuredDocumentation",
              "src": "3336:230:4",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
            },
            "id": 1104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3580:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3588:2:4"
            },
            "returnParameters": {
              "id": 1100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1099,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1104,
                  "src": "3622:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1098,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3622:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3621:15:4"
            },
            "scope": 1689,
            "src": "3571:92:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2237
            ],
            "body": {
              "id": 1146,
              "nodeType": "Block",
              "src": "3790:331:4",
              "statements": [
                {
                  "assignments": [
                    1114
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1114,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3808:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1146,
                      "src": "3800:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1113,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3800:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1119,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1117,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1109,
                        "src": "3831:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1115,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1689,
                        "src": "3816:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1689_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 1116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1033,
                      "src": "3816:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3816:23:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3800:39:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1121,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1107,
                          "src": "3857:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1122,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "3863:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3857:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 1124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3870:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 1120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3849:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3849:57:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1126,
                  "nodeType": "ExpressionStatement",
                  "src": "3849:57:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1128,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 308,
                              "src": "3938:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3938:12:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1130,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1114,
                            "src": "3954:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3938:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1133,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1114,
                              "src": "3980:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1134,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 308,
                                "src": "3987:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3987:12:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1132,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1220,
                            "src": "3963:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 1136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3963:37:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3938:62:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 1138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4014:58:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 1127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3917:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3917:165:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1140,
                  "nodeType": "ExpressionStatement",
                  "src": "3917:165:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1142,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "4102:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1143,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1109,
                        "src": "4106:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1141,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1615,
                      "src": "4093:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4093:21:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1145,
                  "nodeType": "ExpressionStatement",
                  "src": "4093:21:4"
                }
              ]
            },
            "documentation": {
              "id": 1105,
              "nodeType": "StructuredDocumentation",
              "src": "3669:46:4",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 1147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3729:7:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1111,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3781:8:4"
            },
            "parameters": {
              "id": 1110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1107,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3745:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1147,
                  "src": "3737:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3737:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1109,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3757:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1147,
                  "src": "3749:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3749:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3736:29:4"
            },
            "returnParameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3790:0:4"
            },
            "scope": 1689,
            "src": "3720:401:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2245
            ],
            "body": {
              "id": 1167,
              "nodeType": "Block",
              "src": "4311:166:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1158,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1150,
                            "src": "4350:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1157,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1342,
                          "src": "4342:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4342:16:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4372:46:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 1156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4321:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4321:107:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1162,
                  "nodeType": "ExpressionStatement",
                  "src": "4321:107:4"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1163,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 927,
                      "src": "4446:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 1165,
                    "indexExpression": {
                      "id": 1164,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1150,
                      "src": "4462:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4446:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1155,
                  "id": 1166,
                  "nodeType": "Return",
                  "src": "4439:31:4"
                }
              ]
            },
            "documentation": {
              "id": 1148,
              "nodeType": "StructuredDocumentation",
              "src": "4127:50:4",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 1168,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "4191:11:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1152,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4272:8:4"
            },
            "parameters": {
              "id": 1151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1150,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4211:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1168,
                  "src": "4203:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4203:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4202:17:4"
            },
            "returnParameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1154,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1168,
                  "src": "4298:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4298:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4297:9:4"
            },
            "scope": 1689,
            "src": "4182:295:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2253
            ],
            "body": {
              "id": 1201,
              "nodeType": "Block",
              "src": "4656:206:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1178,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1171,
                          "src": "4674:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1179,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 308,
                            "src": "4686:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4686:12:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4674:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 1182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4700:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 1177,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4666:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4666:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1184,
                  "nodeType": "ExpressionStatement",
                  "src": "4666:62:4"
                },
                {
                  "expression": {
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1185,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 933,
                          "src": "4739:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 1189,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1186,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 308,
                            "src": "4758:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4758:12:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4739:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1190,
                      "indexExpression": {
                        "id": 1188,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "4772:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4739:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1191,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1173,
                      "src": "4784:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4739:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1193,
                  "nodeType": "ExpressionStatement",
                  "src": "4739:53:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1195,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 308,
                          "src": "4822:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4822:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1197,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "4836:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1198,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "4846:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1194,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2193,
                      "src": "4807:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 1199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4807:48:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1200,
                  "nodeType": "EmitStatement",
                  "src": "4802:53:4"
                }
              ]
            },
            "documentation": {
              "id": 1169,
              "nodeType": "StructuredDocumentation",
              "src": "4483:56:4",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 1202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4553:17:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1175,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4643:8:4"
            },
            "parameters": {
              "id": 1174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1171,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4579:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1202,
                  "src": "4571:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4571:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1173,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4594:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1202,
                  "src": "4589:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1172,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4589:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4570:33:4"
            },
            "returnParameters": {
              "id": 1176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4656:0:4"
            },
            "scope": 1689,
            "src": "4544:318:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2263
            ],
            "body": {
              "id": 1219,
              "nodeType": "Block",
              "src": "5075:59:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1213,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 933,
                        "src": "5092:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 1215,
                      "indexExpression": {
                        "id": 1214,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1205,
                        "src": "5111:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5092:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1217,
                    "indexExpression": {
                      "id": 1216,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1207,
                      "src": "5118:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5092:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1212,
                  "id": 1218,
                  "nodeType": "Return",
                  "src": "5085:42:4"
                }
              ]
            },
            "documentation": {
              "id": 1203,
              "nodeType": "StructuredDocumentation",
              "src": "4868:55:4",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 1220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4937:16:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1209,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5039:8:4"
            },
            "parameters": {
              "id": 1208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1205,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4962:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1220,
                  "src": "4954:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4954:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1207,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4977:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1220,
                  "src": "4969:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4969:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4953:33:4"
            },
            "returnParameters": {
              "id": 1212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1211,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1220,
                  "src": "5065:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1210,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5065:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5064:6:4"
            },
            "scope": 1689,
            "src": "4928:206:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2229
            ],
            "body": {
              "id": 1246,
              "nodeType": "Block",
              "src": "5315:245:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1233,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 308,
                              "src": "5417:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5417:12:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1235,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1227,
                            "src": "5431:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1232,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1383,
                          "src": "5398:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 1236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5398:41:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 1237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5453:51:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 1231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5377:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5377:137:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "5377:137:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1241,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1223,
                        "src": "5535:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1242,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "5541:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1243,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1227,
                        "src": "5545:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1240,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1591,
                      "src": "5525:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5525:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1245,
                  "nodeType": "ExpressionStatement",
                  "src": "5525:28:4"
                }
              ]
            },
            "documentation": {
              "id": 1221,
              "nodeType": "StructuredDocumentation",
              "src": "5140:51:4",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 1247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "5205:12:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1229,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5306:8:4"
            },
            "parameters": {
              "id": 1228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1223,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5235:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1247,
                  "src": "5227:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5227:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1225,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5257:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1247,
                  "src": "5249:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5249:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1227,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5277:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1247,
                  "src": "5269:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5269:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5217:73:4"
            },
            "returnParameters": {
              "id": 1230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5315:0:4"
            },
            "scope": 1689,
            "src": "5196:364:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2219
            ],
            "body": {
              "id": 1265,
              "nodeType": "Block",
              "src": "5749:56:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1259,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "5776:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1260,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1252,
                        "src": "5782:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1261,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1254,
                        "src": "5786:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 1262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5795:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 1258,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1266,
                        1295
                      ],
                      "referencedDeclaration": 1295,
                      "src": "5759:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5759:39:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1264,
                  "nodeType": "ExpressionStatement",
                  "src": "5759:39:4"
                }
              ]
            },
            "documentation": {
              "id": 1248,
              "nodeType": "StructuredDocumentation",
              "src": "5566:55:4",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 1266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5635:16:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1256,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5740:8:4"
            },
            "parameters": {
              "id": 1255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1250,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5669:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1266,
                  "src": "5661:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5661:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1252,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5691:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1266,
                  "src": "5683:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5683:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1254,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5711:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1266,
                  "src": "5703:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5703:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5651:73:4"
            },
            "returnParameters": {
              "id": 1257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5749:0:4"
            },
            "scope": 1689,
            "src": "5626:179:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2275
            ],
            "body": {
              "id": 1294,
              "nodeType": "Block",
              "src": "6022:195:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1281,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 308,
                              "src": "6072:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6072:12:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1283,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1273,
                            "src": "6086:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1280,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1383,
                          "src": "6053:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 1284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6053:41:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 1285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6108:51:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 1279,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6032:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6032:137:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1287,
                  "nodeType": "ExpressionStatement",
                  "src": "6032:137:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1289,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1269,
                        "src": "6192:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1290,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1271,
                        "src": "6198:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1291,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1273,
                        "src": "6202:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1288,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1247,
                      "src": "6179:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6179:31:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1293,
                  "nodeType": "ExpressionStatement",
                  "src": "6179:31:4"
                }
              ]
            },
            "documentation": {
              "id": 1267,
              "nodeType": "StructuredDocumentation",
              "src": "5811:55:4",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 1295,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5880:16:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1277,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6013:8:4"
            },
            "parameters": {
              "id": 1276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1269,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5914:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1295,
                  "src": "5906:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5906:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1271,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5936:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1295,
                  "src": "5928:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5928:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1273,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5956:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1295,
                  "src": "5948:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5948:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1275,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5986:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1295,
                  "src": "5973:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1274,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5973:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5896:101:4"
            },
            "returnParameters": {
              "id": 1278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6022:0:4"
            },
            "scope": 1689,
            "src": "5871:346:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1323,
              "nodeType": "Block",
              "src": "7220:200:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1308,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "7240:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1309,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1300,
                        "src": "7246:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1310,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "7250:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1307,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1591,
                      "src": "7230:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7230:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1312,
                  "nodeType": "ExpressionStatement",
                  "src": "7230:28:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1315,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1298,
                            "src": "7312:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1316,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1300,
                            "src": "7318:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1317,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1302,
                            "src": "7322:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1318,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1304,
                            "src": "7331:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1314,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1677,
                          "src": "7289:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 1319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7289:48:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 1320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7351:52:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 1313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7268:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7268:145:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1322,
                  "nodeType": "ExpressionStatement",
                  "src": "7268:145:4"
                }
              ]
            },
            "documentation": {
              "id": 1296,
              "nodeType": "StructuredDocumentation",
              "src": "6223:851:4",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 1324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "7088:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1298,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7119:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "7111:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7111:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1300,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7141:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "7133:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7133:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1302,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7161:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "7153:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7153:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1304,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "7191:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "7178:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1303,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7178:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7101:101:4"
            },
            "returnParameters": {
              "id": 1306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7220:0:4"
            },
            "scope": 1689,
            "src": "7079:341:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1341,
              "nodeType": "Block",
              "src": "7794:54:4",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1332,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 919,
                        "src": "7811:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1334,
                      "indexExpression": {
                        "id": 1333,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1327,
                        "src": "7819:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7811:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7839:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7831:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1335,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7831:7:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7831:10:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7811:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1331,
                  "id": 1340,
                  "nodeType": "Return",
                  "src": "7804:37:4"
                }
              ]
            },
            "documentation": {
              "id": 1325,
              "nodeType": "StructuredDocumentation",
              "src": "7426:292:4",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 1342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "7732:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1327,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7748:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1342,
                  "src": "7740:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7740:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7739:17:4"
            },
            "returnParameters": {
              "id": 1331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1330,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1342,
                  "src": "7788:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1329,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7788:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7787:6:4"
            },
            "scope": 1689,
            "src": "7723:125:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1382,
              "nodeType": "Block",
              "src": "8141:303:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1354,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1347,
                            "src": "8180:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1353,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1342,
                          "src": "8172:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8172:16:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8202:46:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 1352,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8151:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8151:107:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1358,
                  "nodeType": "ExpressionStatement",
                  "src": "8151:107:4"
                },
                {
                  "assignments": [
                    1360
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1360,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "8276:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1382,
                      "src": "8268:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1359,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8268:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1365,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1363,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1347,
                        "src": "8299:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1361,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1689,
                        "src": "8284:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1689_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 1362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1033,
                      "src": "8284:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8284:23:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8268:39:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1366,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1345,
                              "src": "8325:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1367,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1360,
                              "src": "8336:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8325:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 1370,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1347,
                                  "src": "8369:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1369,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1168,
                                "src": "8357:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 1371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8357:20:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1372,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1345,
                              "src": "8381:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8357:31:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8325:63:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1376,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1360,
                              "src": "8421:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1377,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1345,
                              "src": "8428:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1375,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1220,
                            "src": "8404:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 1378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8404:32:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8325:111:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1380,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8324:113:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1351,
                  "id": 1381,
                  "nodeType": "Return",
                  "src": "8317:120:4"
                }
              ]
            },
            "documentation": {
              "id": 1343,
              "nodeType": "StructuredDocumentation",
              "src": "7854:147:4",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 1383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "8015:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1345,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8042:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1383,
                  "src": "8034:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1344,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8034:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1347,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8059:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1383,
                  "src": "8051:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8051:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8033:34:4"
            },
            "returnParameters": {
              "id": 1351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1350,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1383,
                  "src": "8131:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1349,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8131:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8130:6:4"
            },
            "scope": 1689,
            "src": "8006:438:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1397,
              "nodeType": "Block",
              "src": "8839:43:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1392,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1386,
                        "src": "8859:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1393,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1388,
                        "src": "8863:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 1394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8872:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 1391,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1398,
                        1414
                      ],
                      "referencedDeclaration": 1414,
                      "src": "8849:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 1395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8849:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1396,
                  "nodeType": "ExpressionStatement",
                  "src": "8849:26:4"
                }
              ]
            },
            "documentation": {
              "id": 1384,
              "nodeType": "StructuredDocumentation",
              "src": "8450:319:4",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 1398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8783:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1386,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8801:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1398,
                  "src": "8793:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1385,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8793:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1388,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8813:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1398,
                  "src": "8805:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8805:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8792:29:4"
            },
            "returnParameters": {
              "id": 1390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8839:0:4"
            },
            "scope": 1689,
            "src": "8774:108:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1413,
              "nodeType": "Block",
              "src": "9218:35:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1409,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1401,
                        "src": "9234:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1410,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1403,
                        "src": "9238:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1408,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1471,
                      "src": "9228:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9228:18:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1412,
                  "nodeType": "ExpressionStatement",
                  "src": "9228:18:4"
                }
              ]
            },
            "documentation": {
              "id": 1399,
              "nodeType": "StructuredDocumentation",
              "src": "8888:210:4",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 1414,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "9112:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1401,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9139:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1414,
                  "src": "9131:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9131:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1403,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9159:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1414,
                  "src": "9151:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9151:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1405,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "9189:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1414,
                  "src": "9176:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1404,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9176:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9121:79:4"
            },
            "returnParameters": {
              "id": 1407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9218:0:4"
            },
            "scope": 1689,
            "src": "9103:150:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1470,
              "nodeType": "Block",
              "src": "9636:311:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1423,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1417,
                          "src": "9654:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9668:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9660:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1424,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9660:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9660:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9654:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 1429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9672:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 1422,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9646:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9646:61:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1431,
                  "nodeType": "ExpressionStatement",
                  "src": "9646:61:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9725:17:4",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 1434,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1419,
                              "src": "9734:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1433,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1342,
                            "src": "9726:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 1435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9726:16:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 1437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9744:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 1432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9717:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9717:58:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1439,
                  "nodeType": "ExpressionStatement",
                  "src": "9717:58:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9815:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9807:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1441,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9807:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9807:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1445,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1417,
                        "src": "9819:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1446,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1419,
                        "src": "9823:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1440,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1688,
                      "src": "9786:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9786:45:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1448,
                  "nodeType": "ExpressionStatement",
                  "src": "9786:45:4"
                },
                {
                  "expression": {
                    "id": 1453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1449,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 923,
                        "src": "9842:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1451,
                      "indexExpression": {
                        "id": 1450,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1417,
                        "src": "9852:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9842:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9859:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9842:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1454,
                  "nodeType": "ExpressionStatement",
                  "src": "9842:18:4"
                },
                {
                  "expression": {
                    "id": 1459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1455,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 919,
                        "src": "9870:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1457,
                      "indexExpression": {
                        "id": 1456,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1419,
                        "src": "9878:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9870:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1458,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1417,
                      "src": "9889:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9870:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1460,
                  "nodeType": "ExpressionStatement",
                  "src": "9870:21:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9924:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9916:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1462,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9916:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9916:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1466,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1417,
                        "src": "9928:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1467,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1419,
                        "src": "9932:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1461,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2175,
                      "src": "9907:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9907:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1469,
                  "nodeType": "EmitStatement",
                  "src": "9902:38:4"
                }
              ]
            },
            "documentation": {
              "id": 1415,
              "nodeType": "StructuredDocumentation",
              "src": "9259:311:4",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 1471,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "9584:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1417,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9598:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1471,
                  "src": "9590:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1416,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9590:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1419,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9610:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1471,
                  "src": "9602:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9602:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9589:29:4"
            },
            "returnParameters": {
              "id": 1421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9636:0:4"
            },
            "scope": 1689,
            "src": "9575:372:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1521,
              "nodeType": "Block",
              "src": "10213:299:4",
              "statements": [
                {
                  "assignments": [
                    1478
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1478,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "10231:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1521,
                      "src": "10223:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1477,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10223:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1483,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1481,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1474,
                        "src": "10254:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1479,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1689,
                        "src": "10239:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1689_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 1480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1033,
                      "src": "10239:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10239:23:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10223:39:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1485,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1478,
                        "src": "10294:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10309:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10301:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1486,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10301:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10301:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1490,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1474,
                        "src": "10313:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1484,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1688,
                      "src": "10273:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10273:48:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1492,
                  "nodeType": "ExpressionStatement",
                  "src": "10273:48:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10376:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10368:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1494,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10368:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10368:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1498,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1474,
                        "src": "10380:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1493,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1615,
                      "src": "10359:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10359:29:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1500,
                  "nodeType": "ExpressionStatement",
                  "src": "10359:29:4"
                },
                {
                  "expression": {
                    "id": 1505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1501,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 923,
                        "src": "10399:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1503,
                      "indexExpression": {
                        "id": 1502,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1478,
                        "src": "10409:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10399:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10419:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10399:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1506,
                  "nodeType": "ExpressionStatement",
                  "src": "10399:21:4"
                },
                {
                  "expression": {
                    "id": 1510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10430:23:4",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1507,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 919,
                        "src": "10437:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1509,
                      "indexExpression": {
                        "id": 1508,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1474,
                        "src": "10445:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10437:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1511,
                  "nodeType": "ExpressionStatement",
                  "src": "10430:23:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1513,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1478,
                        "src": "10478:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10493:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10485:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1514,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10485:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10485:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1518,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1474,
                        "src": "10497:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1512,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2175,
                      "src": "10469:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10469:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1520,
                  "nodeType": "EmitStatement",
                  "src": "10464:41:4"
                }
              ]
            },
            "documentation": {
              "id": 1472,
              "nodeType": "StructuredDocumentation",
              "src": "9953:206:4",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 1522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "10173:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1474,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10187:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1522,
                  "src": "10179:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10179:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10178:17:4"
            },
            "returnParameters": {
              "id": 1476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10213:0:4"
            },
            "scope": 1689,
            "src": "10164:348:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1590,
              "nodeType": "Block",
              "src": "10945:485:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1535,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1529,
                              "src": "10991:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1533,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1689,
                              "src": "10976:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$1689_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 1534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1033,
                            "src": "10976:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10976:23:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1537,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1525,
                          "src": "11003:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10976:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 1539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11021:43:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 1532,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10955:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10955:119:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1541,
                  "nodeType": "ExpressionStatement",
                  "src": "10955:119:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1543,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1527,
                          "src": "11092:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11106:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11098:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1544,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11098:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11098:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11092:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 1549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11110:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 1542,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11084:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11084:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1551,
                  "nodeType": "ExpressionStatement",
                  "src": "11084:65:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1553,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1525,
                        "src": "11181:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1554,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1527,
                        "src": "11187:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1555,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1529,
                        "src": "11191:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1552,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1688,
                      "src": "11160:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11160:39:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1557,
                  "nodeType": "ExpressionStatement",
                  "src": "11160:39:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11278:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11270:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1559,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11270:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11270:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1563,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1529,
                        "src": "11282:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1558,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1615,
                      "src": "11261:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11261:29:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1565,
                  "nodeType": "ExpressionStatement",
                  "src": "11261:29:4"
                },
                {
                  "expression": {
                    "id": 1570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1566,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 923,
                        "src": "11301:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1568,
                      "indexExpression": {
                        "id": 1567,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1525,
                        "src": "11311:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11301:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11320:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "11301:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1571,
                  "nodeType": "ExpressionStatement",
                  "src": "11301:20:4"
                },
                {
                  "expression": {
                    "id": 1576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1572,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 923,
                        "src": "11331:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1574,
                      "indexExpression": {
                        "id": 1573,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1527,
                        "src": "11341:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11331:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11348:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "11331:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1577,
                  "nodeType": "ExpressionStatement",
                  "src": "11331:18:4"
                },
                {
                  "expression": {
                    "id": 1582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1578,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 919,
                        "src": "11359:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1580,
                      "indexExpression": {
                        "id": 1579,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1529,
                        "src": "11367:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11359:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1581,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1527,
                      "src": "11378:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11359:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1583,
                  "nodeType": "ExpressionStatement",
                  "src": "11359:21:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1585,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1525,
                        "src": "11405:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1586,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1527,
                        "src": "11411:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1587,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1529,
                        "src": "11415:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1584,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2175,
                      "src": "11396:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11396:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1589,
                  "nodeType": "EmitStatement",
                  "src": "11391:32:4"
                }
              ]
            },
            "documentation": {
              "id": 1523,
              "nodeType": "StructuredDocumentation",
              "src": "10518:313:4",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 1591,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "10845:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1525,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10872:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1591,
                  "src": "10864:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10864:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1527,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10894:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1591,
                  "src": "10886:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10886:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1529,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10914:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1591,
                  "src": "10906:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1528,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10906:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10854:73:4"
            },
            "returnParameters": {
              "id": 1531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10945:0:4"
            },
            "scope": 1689,
            "src": "10836:594:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1614,
              "nodeType": "Block",
              "src": "11605:107:4",
              "statements": [
                {
                  "expression": {
                    "id": 1603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1599,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 927,
                        "src": "11615:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1601,
                      "indexExpression": {
                        "id": 1600,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "11631:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11615:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1602,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1594,
                      "src": "11642:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11615:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1604,
                  "nodeType": "ExpressionStatement",
                  "src": "11615:29:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1608,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "11683:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1606,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1689,
                            "src": "11668:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$1689_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 1607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1033,
                          "src": "11668:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 1609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11668:23:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1610,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1594,
                        "src": "11693:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1611,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "11697:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1605,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2184,
                      "src": "11659:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11659:46:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1613,
                  "nodeType": "EmitStatement",
                  "src": "11654:51:4"
                }
              ]
            },
            "documentation": {
              "id": 1592,
              "nodeType": "StructuredDocumentation",
              "src": "11436:100:4",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 1615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "11550:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1594,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11567:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1615,
                  "src": "11559:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11559:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1596,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11579:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1615,
                  "src": "11571:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11571:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11558:29:4"
            },
            "returnParameters": {
              "id": 1598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11605:0:4"
            },
            "scope": 1689,
            "src": "11541:171:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1676,
              "nodeType": "Block",
              "src": "12421:794:4",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1629,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1620,
                        "src": "12435:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "12435:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 1631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12435:15:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1674,
                    "nodeType": "Block",
                    "src": "13173:36:4",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13194:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1628,
                        "id": 1673,
                        "nodeType": "Return",
                        "src": "13187:11:4"
                      }
                    ]
                  },
                  "id": 1675,
                  "nodeType": "IfStatement",
                  "src": "12431:778:4",
                  "trueBody": {
                    "id": 1671,
                    "nodeType": "Block",
                    "src": "12452:715:4",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 1651,
                              "nodeType": "Block",
                              "src": "12693:91:4",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 1649,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1645,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1643,
                                      "src": "12718:6:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 1646,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2352,
                                          "src": "12728:15:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$2352_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 1647,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2351,
                                        "src": "12728:32:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 1648,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "12728:41:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "12718:51:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 1628,
                                  "id": 1650,
                                  "nodeType": "Return",
                                  "src": "12711:58:4"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 1652,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 1644,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 1643,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "12685:6:4",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1652,
                                  "src": "12678:13:4",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 1642,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12678:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12677:15:4"
                            },
                            "src": "12669:115:4"
                          },
                          {
                            "block": {
                              "id": 1668,
                              "nodeType": "Block",
                              "src": "12813:344:4",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1659,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1656,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1654,
                                        "src": "12835:6:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 1657,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "12835:13:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 1658,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12852:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "12835:18:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 1666,
                                    "nodeType": "Block",
                                    "src": "13008:135:4",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "13039:86:4",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "13076:2:4",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "13080:6:4"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "13072:3:4"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "13072:15:4"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "13095:6:4"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "13089:5:4"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "13089:13:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "13065:6:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "13065:38:4"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "13065:38:4"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 1654,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "13080:6:4",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 1654,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "13095:6:4",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 1665,
                                        "nodeType": "InlineAssembly",
                                        "src": "13030:95:4"
                                      }
                                    ]
                                  },
                                  "id": 1667,
                                  "nodeType": "IfStatement",
                                  "src": "12831:312:4",
                                  "trueBody": {
                                    "id": 1664,
                                    "nodeType": "Block",
                                    "src": "12855:147:4",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 1661,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12909:52:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 1660,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "12877:6:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 1662,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12877:106:4",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 1663,
                                        "nodeType": "ExpressionStatement",
                                        "src": "12877:106:4"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 1669,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 1655,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 1654,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "12805:6:4",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1669,
                                  "src": "12792:19:4",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1653,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12792:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12791:21:4"
                            },
                            "src": "12785:372:4"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1636,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 308,
                                "src": "12544:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12544:12:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1638,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1618,
                              "src": "12578:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1639,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1622,
                              "src": "12604:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1640,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1624,
                              "src": "12633:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1633,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1620,
                                  "src": "12502:2:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1632,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2352,
                                "src": "12486:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$2352_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 1634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12486:19:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$2352",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 1635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2351,
                            "src": "12486:36:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 1641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12486:170:4",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 1670,
                        "nodeType": "TryStatement",
                        "src": "12466:691:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1616,
              "nodeType": "StructuredDocumentation",
              "src": "11718:542:4",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 1677,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "12274:22:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1618,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12314:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "12306:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12306:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1620,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12336:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "12328:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12328:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1622,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12356:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "12348:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12348:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1624,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "12386:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "12373:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1623,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12373:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12296:101:4"
            },
            "returnParameters": {
              "id": 1628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1627,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "12415:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1626,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12415:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12414:6:4"
            },
            "scope": 1689,
            "src": "12265:950:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1687,
              "nodeType": "Block",
              "src": "13891:2:4",
              "statements": []
            },
            "documentation": {
              "id": 1678,
              "nodeType": "StructuredDocumentation",
              "src": "13221:545:4",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 1688,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "13780:20:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1680,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13818:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1688,
                  "src": "13810:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13810:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1682,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13840:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1688,
                  "src": "13832:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13832:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1684,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13860:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1688,
                  "src": "13852:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1683,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13852:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13800:73:4"
            },
            "returnParameters": {
              "id": 1686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13891:0:4"
            },
            "scope": 1689,
            "src": "13771:122:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1690,
        "src": "489:13406:4",
        "usedErrors": []
      }
    ],
    "src": "33:13863:4"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620012d3380380620012d38339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b61104180620002926000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610bfc565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610c52565b61012461011f366004610c85565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610cba565b6103a6565b005b61014f61015f366004610ce4565b6104bc565b61014f610172366004610ce4565b6104ed565b610124610185366004610c85565b610508565b61019d610198366004610d20565b61057f565b6040519081526020016100f3565b610104610606565b61014f6101c1366004610d3b565b610615565b61014f6101d4366004610d8d565b6106da565b6101046101e7366004610c85565b610711565b6100e76101fa366004610e69565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610e9c565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610e9c565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610508565b9050806001600160a01b0316836001600160a01b0316141561041f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043b575061043b81336101fa565b6104ad5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b783836107f9565b505050565b6104c63382610867565b6104e25760405162461bcd60e51b815260040161038190610ed7565b6104b783838361095e565b6104b7838383604051806020016040528060008152506106da565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610e9c565b6001600160a01b03821633141561066e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106e43383610867565b6107005760405162461bcd60e51b815260040161038190610ed7565b61070b8484846104bc565b50505050565b6000818152600260205260409020546060906001600160a01b03166107905760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006107a760408051602081019091526000815290565b905060008151116107c757604051806020016040528060008152506107f2565b806107d184610afe565b6040516020016107e2929190610f28565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061082e82610508565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166108e05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b60006108eb83610508565b9050806001600160a01b0316846001600160a01b031614806109265750836001600160a01b031661091b8461030c565b6001600160a01b0316145b8061095657506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661097182610508565b6001600160a01b0316146109d95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610381565b6001600160a01b038216610a3b5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b610a466000826107f9565b6001600160a01b0383166000908152600360205260408120805460019290610a6f908490610f6d565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a9d908490610f84565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b606081610b225750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b4c5780610b3681610f9c565b9150610b459050600a83610fcd565b9150610b26565b60008167ffffffffffffffff811115610b6757610b67610d77565b6040519080825280601f01601f191660200182016040528015610b91576020820181803683370190505b5090505b841561095657610ba6600183610f6d565b9150610bb3600a86610fe1565b610bbe906030610f84565b60f81b818381518110610bd357610bd3610ff5565b60200101906001600160f81b031916908160001a905350610bf5600a86610fcd565b9450610b95565b600060208284031215610c0e57600080fd5b81356001600160e01b0319811681146107f257600080fd5b60005b83811015610c41578181015183820152602001610c29565b8381111561070b5750506000910152565b6020815260008251806020840152610c71816040850160208701610c26565b601f01601f19169190910160400192915050565b600060208284031215610c9757600080fd5b5035919050565b80356001600160a01b0381168114610cb557600080fd5b919050565b60008060408385031215610ccd57600080fd5b610cd683610c9e565b946020939093013593505050565b600080600060608486031215610cf957600080fd5b610d0284610c9e565b9250610d1060208501610c9e565b9150604084013590509250925092565b600060208284031215610d3257600080fd5b6107f282610c9e565b60008060408385031215610d4e57600080fd5b610d5783610c9e565b915060208301358015158114610d6c57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610da357600080fd5b610dac85610c9e565b9350610dba60208601610c9e565b925060408501359150606085013567ffffffffffffffff80821115610dde57600080fd5b818701915087601f830112610df257600080fd5b813581811115610e0457610e04610d77565b604051601f8201601f19908116603f01168101908382118183101715610e2c57610e2c610d77565b816040528281528a6020848701011115610e4557600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610e7c57600080fd5b610e8583610c9e565b9150610e9360208401610c9e565b90509250929050565b600181811c90821680610eb057607f821691505b60208210811415610ed157634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351610f3a818460208801610c26565b835190830190610f4e818360208801610c26565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610f7f57610f7f610f57565b500390565b60008219821115610f9757610f97610f57565b500190565b6000600019821415610fb057610fb0610f57565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082610fdc57610fdc610fb7565b500490565b600082610ff057610ff0610fb7565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220ef9c275a47a6a5cb9b66a035c040e1a1288bfe42fd8c4d53c2ba8b60e25380a664736f6c634300080b0033",
  "bytecodeSha1": "3cacc9d87281cebffbda3c0055e599e84480e0c3",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "10": {},
      "12": {},
      "13": {},
      "2": {},
      "22": {
        "Strings.toString": {
          "54": [
            548,
            558,
            false
          ]
        }
      },
      "4": {
        "ERC721._transfer": {
          "52": [
            10976,
            11007,
            true
          ],
          "53": [
            11092,
            11108,
            true
          ]
        },
        "ERC721.approve": {
          "43": [
            3857,
            3868,
            true
          ],
          "44": [
            3938,
            3959,
            true
          ],
          "45": [
            3963,
            4000,
            true
          ]
        },
        "ERC721.balanceOf": {
          "48": [
            1990,
            2009,
            true
          ]
        },
        "ERC721.ownerOf": {
          "47": [
            2372,
            2391,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "50": [
            6053,
            6094,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "49": [
            4674,
            4698,
            true
          ]
        },
        "ERC721.tokenURI": {
          "51": [
            3205,
            3230,
            true
          ]
        },
        "ERC721.transferFrom": {
          "46": [
            5398,
            5439,
            true
          ]
        }
      },
      "7": {}
    },
    "statements": {
      "0": {},
      "1": {
        "Context._msgSender": {
          "8": [
            659,
            676
          ]
        }
      },
      "10": {},
      "12": {},
      "13": {},
      "2": {
        "ERC165.supportsInterface": {
          "2": [
            908,
            955
          ]
        }
      },
      "22": {
        "Strings.toString": {
          "37": [
            574,
            584
          ],
          "38": [
            690,
            698
          ],
          "39": [
            712,
            722
          ],
          "40": [
            824,
            835
          ],
          "41": [
            849,
            905
          ],
          "42": [
            919,
            930
          ]
        }
      },
      "4": {
        "ERC721._approve": {
          "26": [
            11615,
            11644
          ],
          "27": [
            11654,
            11705
          ]
        },
        "ERC721._baseURI": {
          "24": [
            3647,
            3656
          ]
        },
        "ERC721._exists": {
          "4": [
            7804,
            7841
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "28": [
            8151,
            8258
          ],
          "29": [
            8317,
            8437
          ]
        },
        "ERC721._transfer": {
          "30": [
            10955,
            11074
          ],
          "31": [
            11084,
            11149
          ],
          "32": [
            11261,
            11290
          ],
          "33": [
            11301,
            11321
          ],
          "34": [
            11331,
            11349
          ],
          "35": [
            11359,
            11380
          ],
          "36": [
            11391,
            11423
          ]
        },
        "ERC721.approve": {
          "7": [
            3849,
            3906
          ],
          "9": [
            3917,
            4082
          ],
          "10": [
            4093,
            4114
          ]
        },
        "ERC721.balanceOf": {
          "15": [
            1969,
            2077
          ],
          "16": [
            2087,
            2110
          ]
        },
        "ERC721.getApproved": {
          "5": [
            4321,
            4428
          ],
          "6": [
            4439,
            4470
          ]
        },
        "ERC721.isApprovedForAll": {
          "0": [
            5085,
            5127
          ]
        },
        "ERC721.name": {
          "3": [
            2628,
            2640
          ]
        },
        "ERC721.ownerOf": {
          "14": [
            2351,
            2458
          ]
        },
        "ERC721.safeTransferFrom": {
          "13": [
            5759,
            5798
          ],
          "21": [
            6032,
            6169
          ],
          "22": [
            6179,
            6210
          ]
        },
        "ERC721.setApprovalForAll": {
          "18": [
            4666,
            4728
          ],
          "19": [
            4739,
            4792
          ],
          "20": [
            4802,
            4855
          ]
        },
        "ERC721.supportsInterface": {
          "1": [
            1593,
            1768
          ]
        },
        "ERC721.symbol": {
          "17": [
            2792,
            2806
          ]
        },
        "ERC721.tokenURI": {
          "23": [
            3021,
            3131
          ],
          "25": [
            3186,
            3323
          ]
        },
        "ERC721.transferFrom": {
          "11": [
            5377,
            5514
          ],
          "12": [
            5525,
            5553
          ]
        }
      },
      "7": {}
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC165",
    "IERC165",
    "IERC721",
    "IERC721Metadata",
    "IERC721Receiver",
    "Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "489:13406:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1431:344;;;;;;:::i;:::-;;:::i;:::-;;;470:14:23;;463:22;445:41;;433:2;418:18;1431:344:4;;;;;;;;2549:98;;;:::i;:::-;;;;;;;:::i;4182:295::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1497:32:23;;;1479:51;;1467:2;1452:18;4182:295:4;1333:203:23;3720:401:4;;;;;;:::i;:::-;;:::i;:::-;;5196:364;;;;;;:::i;:::-;;:::i;5626:179::-;;;;;;:::i;:::-;;:::i;2174:313::-;;;;;;:::i;:::-;;:::i;1834:283::-;;;;;;:::i;:::-;;:::i;:::-;;;2648:25:23;;;2636:2;2621:18;1834:283:4;2502:177:23;2711:102:4;;;:::i;4544:318::-;;;;;;:::i;:::-;;:::i;5871:346::-;;;;;;:::i;:::-;;:::i;2879:451::-;;;;;;:::i;:::-;;:::i;4928:206::-;;;;;;:::i;:::-;-1:-1:-1;;;;;5092:25:4;;;5065:4;5092:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4928:206;1431:344;1573:4;-1:-1:-1;;;;;;1612:40:4;;-1:-1:-1;;;1612:40:4;;:104;;-1:-1:-1;;;;;;;1668:48:4;;-1:-1:-1;;;1668:48:4;1612:104;:156;;;-1:-1:-1;;;;;;;;;;915:40:2;;;1732:36:4;1593:175;1431:344;-1:-1:-1;;1431:344:4:o;2549:98::-;2603:13;2635:5;2628:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2549:98;:::o;4182:295::-;4298:7;7811:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7811:16:4;4321:107;;;;-1:-1:-1;;;4321:107:4;;5163:2:23;4321:107:4;;;5145:21:23;5202:2;5182:18;;;5175:30;5241:34;5221:18;;;5214:62;-1:-1:-1;;;5292:18:23;;;5285:42;5344:19;;4321:107:4;;;;;;;;;-1:-1:-1;4446:24:4;;;;:15;:24;;;;;;-1:-1:-1;;;;;4446:24:4;;4182:295::o;3720:401::-;3800:13;3816:23;3831:7;3816:14;:23::i;:::-;3800:39;;3863:5;-1:-1:-1;;;;;3857:11:4;:2;-1:-1:-1;;;;;3857:11:4;;;3849:57;;;;-1:-1:-1;;;3849:57:4;;5576:2:23;3849:57:4;;;5558:21:23;5615:2;5595:18;;;5588:30;5654:34;5634:18;;;5627:62;-1:-1:-1;;;5705:18:23;;;5698:31;5746:19;;3849:57:4;5374:397:23;3849:57:4;666:10:1;-1:-1:-1;;;;;3938:21:4;;;;:62;;-1:-1:-1;3963:37:4;3980:5;666:10:1;4928:206:4;:::i;3963:37::-;3917:165;;;;-1:-1:-1;;;3917:165:4;;5978:2:23;3917:165:4;;;5960:21:23;6017:2;5997:18;;;5990:30;6056:34;6036:18;;;6029:62;6127:26;6107:18;;;6100:54;6171:19;;3917:165:4;5776:420:23;3917:165:4;4093:21;4102:2;4106:7;4093:8;:21::i;:::-;3790:331;3720:401;;:::o;5196:364::-;5398:41;666:10:1;5431:7:4;5398:18;:41::i;:::-;5377:137;;;;-1:-1:-1;;;5377:137:4;;;;;;;:::i;:::-;5525:28;5535:4;5541:2;5545:7;5525:9;:28::i;5626:179::-;5759:39;5776:4;5782:2;5786:7;5759:39;;;;;;;;;;;;:16;:39::i;2174:313::-;2286:7;2325:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2325:16:4;2372:19;2351:107;;;;-1:-1:-1;;;2351:107:4;;6821:2:23;2351:107:4;;;6803:21:23;6860:2;6840:18;;;6833:30;6899:34;6879:18;;;6872:62;-1:-1:-1;;;6950:18:23;;;6943:39;6999:19;;2351:107:4;6619:405:23;1834:283:4;1946:7;-1:-1:-1;;;;;1990:19:4;;1969:108;;;;-1:-1:-1;;;1969:108:4;;7231:2:23;1969:108:4;;;7213:21:23;7270:2;7250:18;;;7243:30;7309:34;7289:18;;;7282:62;-1:-1:-1;;;7360:18:23;;;7353:40;7410:19;;1969:108:4;7029:406:23;1969:108:4;-1:-1:-1;;;;;;2094:16:4;;;;;:9;:16;;;;;;;1834:283::o;2711:102::-;2767:13;2799:7;2792:14;;;;;:::i;4544:318::-;-1:-1:-1;;;;;4674:24:4;;666:10:1;4674:24:4;;4666:62;;;;-1:-1:-1;;;4666:62:4;;7642:2:23;4666:62:4;;;7624:21:23;7681:2;7661:18;;;7654:30;7720:27;7700:18;;;7693:55;7765:18;;4666:62:4;7440:349:23;4666:62:4;666:10:1;4739:32:4;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4739:42:4;;;;;;;;;;;;:53;;-1:-1:-1;;4739:53:4;;;;;;;;;;4807:48;;445:41:23;;;4739:42:4;;666:10:1;4807:48:4;;418:18:23;4807:48:4;;;;;;;4544:318;;:::o;5871:346::-;6053:41;666:10:1;6086:7:4;6053:18;:41::i;:::-;6032:137;;;;-1:-1:-1;;;6032:137:4;;;;;;;:::i;:::-;6179:31;6192:4;6198:2;6202:7;6179:12;:31::i;:::-;5871:346;;;;:::o;2879:451::-;7788:4;7811:16;;;:7;:16;;;;;;2992:13;;-1:-1:-1;;;;;7811:16:4;3021:110;;;;-1:-1:-1;;;3021:110:4;;7996:2:23;3021:110:4;;;7978:21:23;8035:2;8015:18;;;8008:30;8074:34;8054:18;;;8047:62;-1:-1:-1;;;8125:18:23;;;8118:45;8180:19;;3021:110:4;7794:411:23;3021:110:4;3142:21;3166:10;3647:9;;;;;;;;;-1:-1:-1;3647:9:4;;;3571:92;3166:10;3142:34;;3229:1;3211:7;3205:21;:25;:118;;;;;;;;;;;;;;;;;3273:7;3282:18;:7;:16;:18::i;:::-;3256:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3205:118;3186:137;2879:451;-1:-1:-1;;;2879:451:4:o;11541:171::-;11615:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11615:29:4;-1:-1:-1;;;;;11615:29:4;;;;;;;;:24;;11668:23;11615:24;11668:14;:23::i;:::-;-1:-1:-1;;;;;11659:46:4;;;;;;;;;;;11541:171;;:::o;8006:438::-;8131:4;7811:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7811:16:4;8151:107;;;;-1:-1:-1;;;8151:107:4;;8887:2:23;8151:107:4;;;8869:21:23;8926:2;8906:18;;;8899:30;8965:34;8945:18;;;8938:62;-1:-1:-1;;;9016:18:23;;;9009:42;9068:19;;8151:107:4;8685:408:23;8151:107:4;8268:13;8284:23;8299:7;8284:14;:23::i;:::-;8268:39;;8336:5;-1:-1:-1;;;;;8325:16:4;:7;-1:-1:-1;;;;;8325:16:4;;:63;;;;8381:7;-1:-1:-1;;;;;8357:31:4;:20;8369:7;8357:11;:20::i;:::-;-1:-1:-1;;;;;8357:31:4;;8325:63;:111;;;-1:-1:-1;;;;;;5092:25:4;;;5065:4;5092:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8404:32;8317:120;8006:438;-1:-1:-1;;;;8006:438:4:o;10836:594::-;11003:4;-1:-1:-1;;;;;10976:31:4;:23;10991:7;10976:14;:23::i;:::-;-1:-1:-1;;;;;10976:31:4;;10955:119;;;;-1:-1:-1;;;10955:119:4;;9300:2:23;10955:119:4;;;9282:21:23;9339:2;9319:18;;;9312:30;9378:34;9358:18;;;9351:62;-1:-1:-1;;;9429:18:23;;;9422:39;9478:19;;10955:119:4;9098:405:23;10955:119:4;-1:-1:-1;;;;;11092:16:4;;11084:65;;;;-1:-1:-1;;;11084:65:4;;9710:2:23;11084:65:4;;;9692:21:23;9749:2;9729:18;;;9722:30;9788:34;9768:18;;;9761:62;-1:-1:-1;;;9839:18:23;;;9832:34;9883:19;;11084:65:4;9508:400:23;11084:65:4;11261:29;11278:1;11282:7;11261:8;:29::i;:::-;-1:-1:-1;;;;;11301:15:4;;;;;;:9;:15;;;;;:20;;11320:1;;11301:15;:20;;11320:1;;11301:20;:::i;:::-;;;;-1:-1:-1;;;;;;;11331:13:4;;;;;;:9;:13;;;;;:18;;11348:1;;11331:13;:18;;11348:1;;11331:18;:::i;:::-;;;;-1:-1:-1;;11359:16:4;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;11359:21:4;-1:-1:-1;;;;;11359:21:4;;;;;;;;;11396:27;;11359:16;;11396:27;;;;;;;10836:594;;;:::o;275:703:22:-;331:13;548:10;544:51;;-1:-1:-1;;574:10:22;;;;;;;;;;;;-1:-1:-1;;;574:10:22;;;;;275:703::o;544:51::-;619:5;604:12;658:75;665:9;;658:75;;690:8;;;;:::i;:::-;;-1:-1:-1;712:10:22;;-1:-1:-1;720:2:22;712:10;;:::i;:::-;;;658:75;;;742:19;774:6;764:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;764:17:22;;742:39;;791:150;798:10;;791:150;;824:11;834:1;824:11;;:::i;:::-;;-1:-1:-1;892:10:22;900:2;892:5;:10;:::i;:::-;879:24;;:2;:24;:::i;:::-;866:39;;849:6;856;849:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;849:56:22;;;;;;;;-1:-1:-1;919:11:22;928:2;919:11;;:::i;:::-;;;791:150;;14:286:23;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:23;;209:43;;199:71;;266:1;263;256:12;497:258;569:1;579:113;593:6;590:1;587:13;579:113;;;669:11;;;663:18;650:11;;;643:39;615:2;608:10;579:113;;;710:6;707:1;704:13;701:48;;;-1:-1:-1;;745:1:23;727:16;;720:27;497:258::o;760:383::-;909:2;898:9;891:21;872:4;941:6;935:13;984:6;979:2;968:9;964:18;957:34;1000:66;1059:6;1054:2;1043:9;1039:18;1034:2;1026:6;1022:15;1000:66;:::i;:::-;1127:2;1106:15;-1:-1:-1;;1102:29:23;1087:45;;;;1134:2;1083:54;;760:383;-1:-1:-1;;760:383:23:o;1148:180::-;1207:6;1260:2;1248:9;1239:7;1235:23;1231:32;1228:52;;;1276:1;1273;1266:12;1228:52;-1:-1:-1;1299:23:23;;1148:180;-1:-1:-1;1148:180:23:o;1541:173::-;1609:20;;-1:-1:-1;;;;;1658:31:23;;1648:42;;1638:70;;1704:1;1701;1694:12;1638:70;1541:173;;;:::o;1719:254::-;1787:6;1795;1848:2;1836:9;1827:7;1823:23;1819:32;1816:52;;;1864:1;1861;1854:12;1816:52;1887:29;1906:9;1887:29;:::i;:::-;1877:39;1963:2;1948:18;;;;1935:32;;-1:-1:-1;;;1719:254:23:o;1978:328::-;2055:6;2063;2071;2124:2;2112:9;2103:7;2099:23;2095:32;2092:52;;;2140:1;2137;2130:12;2092:52;2163:29;2182:9;2163:29;:::i;:::-;2153:39;;2211:38;2245:2;2234:9;2230:18;2211:38;:::i;:::-;2201:48;;2296:2;2285:9;2281:18;2268:32;2258:42;;1978:328;;;;;:::o;2311:186::-;2370:6;2423:2;2411:9;2402:7;2398:23;2394:32;2391:52;;;2439:1;2436;2429:12;2391:52;2462:29;2481:9;2462:29;:::i;2684:347::-;2749:6;2757;2810:2;2798:9;2789:7;2785:23;2781:32;2778:52;;;2826:1;2823;2816:12;2778:52;2849:29;2868:9;2849:29;:::i;:::-;2839:39;;2928:2;2917:9;2913:18;2900:32;2975:5;2968:13;2961:21;2954:5;2951:32;2941:60;;2997:1;2994;2987:12;2941:60;3020:5;3010:15;;;2684:347;;;;;:::o;3036:127::-;3097:10;3092:3;3088:20;3085:1;3078:31;3128:4;3125:1;3118:15;3152:4;3149:1;3142:15;3168:1138;3263:6;3271;3279;3287;3340:3;3328:9;3319:7;3315:23;3311:33;3308:53;;;3357:1;3354;3347:12;3308:53;3380:29;3399:9;3380:29;:::i;:::-;3370:39;;3428:38;3462:2;3451:9;3447:18;3428:38;:::i;:::-;3418:48;;3513:2;3502:9;3498:18;3485:32;3475:42;;3568:2;3557:9;3553:18;3540:32;3591:18;3632:2;3624:6;3621:14;3618:34;;;3648:1;3645;3638:12;3618:34;3686:6;3675:9;3671:22;3661:32;;3731:7;3724:4;3720:2;3716:13;3712:27;3702:55;;3753:1;3750;3743:12;3702:55;3789:2;3776:16;3811:2;3807;3804:10;3801:36;;;3817:18;;:::i;:::-;3892:2;3886:9;3860:2;3946:13;;-1:-1:-1;;3942:22:23;;;3966:2;3938:31;3934:40;3922:53;;;3990:18;;;4010:22;;;3987:46;3984:72;;;4036:18;;:::i;:::-;4076:10;4072:2;4065:22;4111:2;4103:6;4096:18;4151:7;4146:2;4141;4137;4133:11;4129:20;4126:33;4123:53;;;4172:1;4169;4162:12;4123:53;4228:2;4223;4219;4215:11;4210:2;4202:6;4198:15;4185:46;4273:1;4268:2;4263;4255:6;4251:15;4247:24;4240:35;4294:6;4284:16;;;;;;;3168:1138;;;;;;;:::o;4311:260::-;4379:6;4387;4440:2;4428:9;4419:7;4415:23;4411:32;4408:52;;;4456:1;4453;4446:12;4408:52;4479:29;4498:9;4479:29;:::i;:::-;4469:39;;4527:38;4561:2;4550:9;4546:18;4527:38;:::i;:::-;4517:48;;4311:260;;;;;:::o;4576:380::-;4655:1;4651:12;;;;4698;;;4719:61;;4773:4;4765:6;4761:17;4751:27;;4719:61;4826:2;4818:6;4815:14;4795:18;4792:38;4789:161;;;4872:10;4867:3;4863:20;4860:1;4853:31;4907:4;4904:1;4897:15;4935:4;4932:1;4925:15;4789:161;;4576:380;;;:::o;6201:413::-;6403:2;6385:21;;;6442:2;6422:18;;;6415:30;6481:34;6476:2;6461:18;;6454:62;-1:-1:-1;;;6547:2:23;6532:18;;6525:47;6604:3;6589:19;;6201:413::o;8210:470::-;8389:3;8427:6;8421:13;8443:53;8489:6;8484:3;8477:4;8469:6;8465:17;8443:53;:::i;:::-;8559:13;;8518:16;;;;8581:57;8559:13;8518:16;8615:4;8603:17;;8581:57;:::i;:::-;8654:20;;8210:470;-1:-1:-1;;;;8210:470:23:o;9913:127::-;9974:10;9969:3;9965:20;9962:1;9955:31;10005:4;10002:1;9995:15;10029:4;10026:1;10019:15;10045:125;10085:4;10113:1;10110;10107:8;10104:34;;;10118:18;;:::i;:::-;-1:-1:-1;10155:9:23;;10045:125::o;10175:128::-;10215:3;10246:1;10242:6;10239:1;10236:13;10233:39;;;10252:18;;:::i;:::-;-1:-1:-1;10288:9:23;;10175:128::o;10308:135::-;10347:3;-1:-1:-1;;10368:17:23;;10365:43;;;10388:18;;:::i;:::-;-1:-1:-1;10435:1:23;10424:13;;10308:135::o;10448:127::-;10509:10;10504:3;10500:20;10497:1;10490:31;10540:4;10537:1;10530:15;10564:4;10561:1;10554:15;10580:120;10620:1;10646;10636:35;;10651:18;;:::i;:::-;-1:-1:-1;10685:9:23;;10580:120::o;10705:112::-;10737:1;10763;10753:35;;10768:18;;:::i;:::-;-1:-1:-1;10802:9:23;;10705:112::o;10822:127::-;10883:10;10878:3;10874:20;10871:1;10864:31;10914:4;10911:1;10904:15;10938:4;10935:1;10928:15",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    489,
    13895
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFC JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC52 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xCBA JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x606 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xD8D JUMP JUMPDEST PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x711 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xE9C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xE9C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43B JUMPI POP PUSH2 0x43B DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 PUSH2 0x7F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C6 CALLER DUP3 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH2 0x95E JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x66E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6E4 CALLER DUP4 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x70B DUP5 DUP5 DUP5 PUSH2 0x4BC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x790 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A7 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F2 JUMP JUMPDEST DUP1 PUSH2 0x7D1 DUP5 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7E2 SWAP3 SWAP2 SWAP1 PUSH2 0xF28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x82E DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EB DUP4 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x926 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x91B DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x956 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x971 DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0xA46 PUSH1 0x0 DUP3 PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA6F SWAP1 DUP5 SWAP1 PUSH2 0xF6D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA9D SWAP1 DUP5 SWAP1 PUSH2 0xF84 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xB22 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB4C JUMPI DUP1 PUSH2 0xB36 DUP2 PUSH2 0xF9C JUMP JUMPDEST SWAP2 POP PUSH2 0xB45 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0xFCD JUMP JUMPDEST SWAP2 POP PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB67 JUMPI PUSH2 0xB67 PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB91 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x956 JUMPI PUSH2 0xBA6 PUSH1 0x1 DUP4 PUSH2 0xF6D JUMP JUMPDEST SWAP2 POP PUSH2 0xBB3 PUSH1 0xA DUP7 PUSH2 0xFE1 JUMP JUMPDEST PUSH2 0xBBE SWAP1 PUSH1 0x30 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xBD3 JUMPI PUSH2 0xBD3 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xBF5 PUSH1 0xA DUP7 PUSH2 0xFCD JUMP JUMPDEST SWAP5 POP PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC41 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC29 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x70B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xC71 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCD6 DUP4 PUSH2 0xC9E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD02 DUP5 PUSH2 0xC9E JUMP JUMPDEST SWAP3 POP PUSH2 0xD10 PUSH1 0x20 DUP6 ADD PUSH2 0xC9E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F2 DUP3 PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD57 DUP4 PUSH2 0xC9E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xDA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDAC DUP6 PUSH2 0xC9E JUMP JUMPDEST SWAP4 POP PUSH2 0xDBA PUSH1 0x20 DUP7 ADD PUSH2 0xC9E JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE04 JUMPI PUSH2 0xE04 PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xE2C JUMPI PUSH2 0xE2C PUSH2 0xD77 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xE45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE85 DUP4 PUSH2 0xC9E JUMP JUMPDEST SWAP2 POP PUSH2 0xE93 PUSH1 0x20 DUP5 ADD PUSH2 0xC9E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xEB0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xED1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xF3A DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xC26 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xF4E DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xC26 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF7F JUMPI PUSH2 0xF7F PUSH2 0xF57 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF97 JUMPI PUSH2 0xF97 PUSH2 0xF57 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xFB0 JUMPI PUSH2 0xFB0 PUSH2 0xF57 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFDC JUMPI PUSH2 0xFDC PUSH2 0xFB7 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFF0 JUMPI PUSH2 0xFF0 PUSH2 0xFB7 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF SWAP13 0x27 GAS SELFBALANCE 0xA6 0xA5 0xCB SWAP12 PUSH7 0xA035C040E1A128 DUP12 INVALID TIMESTAMP REVERT DUP13 0x4D MSTORE8 0xC2 0xBA DUP12 PUSH1 0xE2 MSTORE8 DUP1 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        489,
        13895
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "GT",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B3"
    },
    "64": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C6"
    },
    "75": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D9"
    },
    "86": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "DUP1",
      "path": "4"
    },
    "101": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "REVERT",
      "path": "4"
    },
    "102": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "103": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "DUP1",
      "path": "4"
    },
    "104": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "EQ",
      "path": "4"
    },
    "110": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x177"
    },
    "113": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "114": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "DUP1",
      "path": "4"
    },
    "115": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "EQ",
      "path": "4"
    },
    "121": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18A"
    },
    "124": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "DUP1",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "EQ",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AB"
    },
    "135": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "DUP1",
      "path": "4"
    },
    "139": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "REVERT",
      "path": "4"
    },
    "140": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "141": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "DUP1",
      "path": "4"
    },
    "142": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "EQ",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "152": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "DUP1",
      "path": "4"
    },
    "153": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "EQ",
      "path": "4"
    },
    "159": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "163": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "DUP1",
      "path": "4"
    },
    "164": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "EQ",
      "path": "4"
    },
    "170": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "174": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "DUP1",
      "path": "4"
    },
    "175": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "EQ",
      "path": "4"
    },
    "181": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "185": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "DUP1",
      "path": "4"
    },
    "186": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "EQ",
      "path": "4"
    },
    "192": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "196": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "DUP1",
      "path": "4"
    },
    "197": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "EQ",
      "path": "4"
    },
    "203": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x164"
    },
    "206": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "207": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "208": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "DUP1",
      "path": "4"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        489,
        13895
      ],
      "op": "REVERT",
      "path": "4"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBFC"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1431,
        1775
      ],
      "op": "JUMP",
      "path": "4"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x228"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1431,
        1775
      ],
      "op": "JUMP",
      "path": "4"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "DUP1",
      "path": "4"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "SUB",
      "path": "4"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "RETURN",
      "path": "4"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x27A"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2549,
        2647
      ],
      "op": "JUMP",
      "path": "4"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC52"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2549,
        2647
      ],
      "op": "JUMP",
      "path": "4"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC85"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4182,
        4477
      ],
      "op": "JUMP",
      "path": "4"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x30C"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4182,
        4477
      ],
      "op": "JUMP",
      "path": "4"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCBA"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3720,
        4121
      ],
      "op": "JUMP",
      "path": "4"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3A6"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3720,
        4121
      ],
      "op": "JUMP",
      "path": "4"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "STOP",
      "path": "4"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5196,
        5560
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5196,
        5560
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5196,
        5560
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5196,
        5560
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5196,
        5560
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5196,
        5560
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCE4"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5196,
        5560
      ],
      "op": "JUMP",
      "path": "4"
    },
    "351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5196,
        5560
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5196,
        5560
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4BC"
    },
    "355": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5196,
        5560
      ],
      "op": "JUMP",
      "path": "4"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14F"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCE4"
    },
    "369": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5626,
        5805
      ],
      "op": "JUMP",
      "path": "4"
    },
    "370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4ED"
    },
    "374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5626,
        5805
      ],
      "op": "JUMP",
      "path": "4"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x124"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC85"
    },
    "388": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2174,
        2487
      ],
      "op": "JUMP",
      "path": "4"
    },
    "389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x508"
    },
    "393": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2174,
        2487
      ],
      "op": "JUMP",
      "path": "4"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x19D"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x198"
    },
    "401": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD20"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1834,
        2117
      ],
      "op": "JUMP",
      "path": "4"
    },
    "408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x57F"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1834,
        2117
      ],
      "op": "JUMP",
      "path": "4"
    },
    "413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF3"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "ERC721.symbol",
      "offset": [
        2711,
        2813
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "428": {
      "fn": "ERC721.symbol",
      "offset": [
        2711,
        2813
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x104"
    },
    "431": {
      "fn": "ERC721.symbol",
      "offset": [
        2711,
        2813
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x606"
    },
    "434": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2711,
        2813
      ],
      "op": "JUMP",
      "path": "4"
    },
    "435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14F"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD3B"
    },
    "448": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4544,
        4862
      ],
      "op": "JUMP",
      "path": "4"
    },
    "449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x615"
    },
    "453": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4544,
        4862
      ],
      "op": "JUMP",
      "path": "4"
    },
    "454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14F"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD8D"
    },
    "467": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5871,
        6217
      ],
      "op": "JUMP",
      "path": "4"
    },
    "468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6DA"
    },
    "472": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5871,
        6217
      ],
      "op": "JUMP",
      "path": "4"
    },
    "473": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2879,
        3330
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "474": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2879,
        3330
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x104"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2879,
        3330
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E7"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2879,
        3330
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "481": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2879,
        3330
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "483": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2879,
        3330
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC85"
    },
    "486": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2879,
        3330
      ],
      "op": "JUMP",
      "path": "4"
    },
    "487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2879,
        3330
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2879,
        3330
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x711"
    },
    "491": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2879,
        3330
      ],
      "op": "JUMP",
      "path": "4"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE7"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FA"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE69"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4928,
        5134
      ],
      "op": "JUMP",
      "path": "4"
    },
    "506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "513": {
      "op": "SHL"
    },
    "514": {
      "op": "SUB"
    },
    "515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 0
    },
    "516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP3",
      "path": "4"
    },
    "517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "AND",
      "path": "4"
    },
    "518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5065,
        5069
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP2",
      "path": "4"
    },
    "522": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5110
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "525": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "527": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP2",
      "path": "4"
    },
    "529": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP1",
      "path": "4"
    },
    "533": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP4",
      "path": "4"
    },
    "534": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "535": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "536": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "537": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "538": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "AND",
      "path": "4"
    },
    "539": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "DUP3",
      "path": "4"
    },
    "540": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "541": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "542": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "543": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "AND",
      "path": "4"
    },
    "550": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "JUMP",
      "path": "4"
    },
    "552": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "553": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1573,
        1577
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "561": {
      "op": "SHL"
    },
    "562": {
      "op": "SUB"
    },
    "563": {
      "op": "NOT"
    },
    "564": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1612,
        1652
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 1
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1612,
        1652
      ],
      "op": "AND",
      "path": "4"
    },
    "566": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1612,
        1652
      ],
      "op": "EQ",
      "path": "4"
    },
    "575": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1612,
        1652
      ],
      "op": "DUP1",
      "path": "4"
    },
    "576": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1612,
        1716
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x259"
    },
    "579": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1612,
        1716
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "585": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "587": {
      "op": "SHL"
    },
    "588": {
      "op": "SUB"
    },
    "589": {
      "op": "NOT"
    },
    "590": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1668,
        1716
      ],
      "op": "DUP3",
      "path": "4"
    },
    "591": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1668,
        1716
      ],
      "op": "AND",
      "path": "4"
    },
    "592": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1668,
        1716
      ],
      "op": "EQ",
      "path": "4"
    },
    "601": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1612,
        1716
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "602": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1612,
        1768
      ],
      "op": "DUP1",
      "path": "4"
    },
    "603": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1612,
        1768
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x274"
    },
    "606": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1612,
        1768
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "op": "NOT"
    },
    "625": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        955
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 2
    },
    "626": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        955
      ],
      "op": "AND",
      "path": "2"
    },
    "627": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        955
      ],
      "op": "EQ",
      "path": "2"
    },
    "628": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1732,
        1768
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "629": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1593,
        1768
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "630": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1431,
        1775
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1431,
        1775
      ],
      "op": "JUMP",
      "path": "4"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        2603,
        2616
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2635,
        2640
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 3,
      "value": "0x0"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP1",
      "path": "4"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x289"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "645": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE9C"
    },
    "648": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMP",
      "path": "4"
    },
    "649": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "650": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP1",
      "path": "4"
    },
    "651": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "ADD",
      "path": "4"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "656": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP1",
      "path": "4"
    },
    "657": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DIV",
      "path": "4"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "MUL",
      "path": "4"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "ADD",
      "path": "4"
    },
    "663": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "665": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP2",
      "path": "4"
    },
    "668": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "ADD",
      "path": "4"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP1",
      "path": "4"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP2",
      "path": "4"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP2",
      "path": "4"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "679": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "ADD",
      "path": "4"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP3",
      "path": "4"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP1",
      "path": "4"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B5"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE9C"
    },
    "692": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMP",
      "path": "4"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP1",
      "path": "4"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x302"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP1",
      "path": "4"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "LT",
      "path": "4"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2D7"
    },
    "707": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "711": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP1",
      "path": "4"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP4",
      "path": "4"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DIV",
      "path": "4"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "MUL",
      "path": "4"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP4",
      "path": "4"
    },
    "717": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "718": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "ADD",
      "path": "4"
    },
    "722": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "723": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x302"
    },
    "726": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMP",
      "path": "4"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP3",
      "path": "4"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "ADD",
      "path": "4"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "732": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "735": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "737": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "740": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "741": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "742": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP2",
      "path": "4"
    },
    "743": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "744": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP2",
      "path": "4"
    },
    "745": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "746": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "747": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "749": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "ADD",
      "path": "4"
    },
    "750": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "751": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "753": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "ADD",
      "path": "4"
    },
    "754": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP1",
      "path": "4"
    },
    "755": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP4",
      "path": "4"
    },
    "756": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "GT",
      "path": "4"
    },
    "757": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2E5"
    },
    "760": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "761": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP3",
      "path": "4"
    },
    "762": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "763": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SUB",
      "path": "4"
    },
    "764": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "766": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "AND",
      "path": "4"
    },
    "767": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "DUP3",
      "path": "4"
    },
    "768": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "ADD",
      "path": "4"
    },
    "769": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "770": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "771": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "POP",
      "path": "4"
    },
    "772": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "POP",
      "path": "4"
    },
    "773": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "POP",
      "path": "4"
    },
    "774": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "POP",
      "path": "4"
    },
    "775": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "POP",
      "path": "4"
    },
    "776": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "777": {
      "fn": "ERC721.name",
      "offset": [
        2628,
        2640
      ],
      "op": "POP",
      "path": "4"
    },
    "778": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2647
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "779": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2549,
        2647
      ],
      "op": "JUMP",
      "path": "4"
    },
    "780": {
      "fn": "ERC721.getApproved",
      "offset": [
        4182,
        4477
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "781": {
      "fn": "ERC721.getApproved",
      "offset": [
        4298,
        4305
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "783": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 4
    },
    "784": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "DUP2",
      "path": "4"
    },
    "785": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "786": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "788": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "790": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "791": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "793": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "DUP2",
      "path": "4"
    },
    "794": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "795": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "802": {
      "op": "SHL"
    },
    "803": {
      "op": "SUB"
    },
    "804": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "AND",
      "path": "4"
    },
    "805": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 5,
      "value": "0x38A"
    },
    "808": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "809": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "811": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "812": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "816": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "818": {
      "op": "SHL"
    },
    "819": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "DUP2",
      "path": "4"
    },
    "820": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "823": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "825": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "DUP3",
      "path": "4"
    },
    "826": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "ADD",
      "path": "4"
    },
    "827": {
      "op": "MSTORE"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "832": {
      "op": "DUP3"
    },
    "833": {
      "op": "ADD"
    },
    "834": {
      "op": "MSTORE"
    },
    "835": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "870": {
      "op": "DUP3"
    },
    "871": {
      "op": "ADD"
    },
    "872": {
      "op": "MSTORE"
    },
    "873": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "891": {
      "op": "DUP3"
    },
    "892": {
      "op": "ADD"
    },
    "893": {
      "op": "MSTORE"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "898": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "900": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "901": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "DUP1",
      "path": "4"
    },
    "902": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "903": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "SUB",
      "path": "4"
    },
    "904": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "905": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "906": {
      "fn": "ERC721.getApproved",
      "offset": [
        4321,
        4428
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "907": {
      "op": "POP"
    },
    "908": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 6,
      "value": "0x0"
    },
    "910": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "911": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "DUP2",
      "path": "4"
    },
    "912": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "913": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4461
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "915": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "917": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "918": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "920": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "921": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "922": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "op": "SUB"
    },
    "931": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "AND",
      "path": "4"
    },
    "932": {
      "fn": "ERC721.getApproved",
      "offset": [
        4446,
        4470
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "933": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        4182,
        4477
      ],
      "op": "JUMP",
      "path": "4"
    },
    "934": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "935": {
      "fn": "ERC721.approve",
      "offset": [
        3800,
        3813
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "937": {
      "fn": "ERC721.approve",
      "offset": [
        3816,
        3839
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3B1"
    },
    "940": {
      "fn": "ERC721.approve",
      "offset": [
        3831,
        3838
      ],
      "op": "DUP3",
      "path": "4"
    },
    "941": {
      "fn": "ERC721.approve",
      "offset": [
        3816,
        3830
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x508"
    },
    "944": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3816,
        3839
      ],
      "op": "JUMP",
      "path": "4"
    },
    "945": {
      "fn": "ERC721.approve",
      "offset": [
        3816,
        3839
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "946": {
      "fn": "ERC721.approve",
      "offset": [
        3800,
        3839
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "947": {
      "fn": "ERC721.approve",
      "offset": [
        3800,
        3839
      ],
      "op": "POP",
      "path": "4"
    },
    "948": {
      "fn": "ERC721.approve",
      "offset": [
        3863,
        3868
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 7
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "op": "SUB"
    },
    "957": {
      "fn": "ERC721.approve",
      "offset": [
        3857,
        3868
      ],
      "op": "AND",
      "path": "4"
    },
    "958": {
      "fn": "ERC721.approve",
      "offset": [
        3857,
        3859
      ],
      "op": "DUP4",
      "path": "4"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "op": "SUB"
    },
    "967": {
      "fn": "ERC721.approve",
      "offset": [
        3857,
        3868
      ],
      "op": "AND",
      "path": "4"
    },
    "968": {
      "fn": "ERC721.approve",
      "offset": [
        3857,
        3868
      ],
      "op": "EQ",
      "path": "4"
    },
    "969": {
      "branch": 43,
      "fn": "ERC721.approve",
      "offset": [
        3857,
        3868
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "970": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x41F"
    },
    "973": {
      "branch": 43,
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "974": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "976": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "977": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "981": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "983": {
      "op": "SHL"
    },
    "984": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "DUP2",
      "path": "4"
    },
    "985": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "988": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "990": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "DUP3",
      "path": "4"
    },
    "991": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "ADD",
      "path": "4"
    },
    "992": {
      "op": "MSTORE"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "997": {
      "op": "DUP3"
    },
    "998": {
      "op": "ADD"
    },
    "999": {
      "op": "MSTORE"
    },
    "1000": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1035": {
      "op": "DUP3"
    },
    "1036": {
      "op": "ADD"
    },
    "1037": {
      "op": "MSTORE"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1042": {
      "op": "SHL"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1045": {
      "op": "DUP3"
    },
    "1046": {
      "op": "ADD"
    },
    "1047": {
      "op": "MSTORE"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1050": {
      "op": "ADD"
    },
    "1051": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x381"
    },
    "1054": {
      "op": "JUMP"
    },
    "1055": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3906
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1056": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 8
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1063": {
      "op": "SHL"
    },
    "1064": {
      "op": "SUB"
    },
    "1065": {
      "fn": "ERC721.approve",
      "offset": [
        3938,
        3959
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 9
    },
    "1066": {
      "fn": "ERC721.approve",
      "offset": [
        3938,
        3959
      ],
      "op": "AND",
      "path": "4"
    },
    "1067": {
      "fn": "ERC721.approve",
      "offset": [
        3938,
        3959
      ],
      "op": "EQ",
      "path": "4"
    },
    "1068": {
      "branch": 44,
      "fn": "ERC721.approve",
      "offset": [
        3938,
        3959
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1069": {
      "fn": "ERC721.approve",
      "offset": [
        3938,
        4000
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x43B"
    },
    "1072": {
      "branch": 44,
      "fn": "ERC721.approve",
      "offset": [
        3938,
        4000
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1073": {
      "op": "POP"
    },
    "1074": {
      "fn": "ERC721.approve",
      "offset": [
        3963,
        4000
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x43B"
    },
    "1077": {
      "fn": "ERC721.approve",
      "offset": [
        3980,
        3985
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1078": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1079": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4928,
        5134
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FA"
    },
    "1082": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4928,
        5134
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1083": {
      "branch": 45,
      "fn": "ERC721.approve",
      "offset": [
        3963,
        4000
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1084": {
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4AD"
    },
    "1087": {
      "branch": 45,
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1088": {
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1090": {
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1091": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1097": {
      "op": "SHL"
    },
    "1098": {
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1099": {
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1102": {
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1104": {
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1105": {
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "ADD",
      "path": "4"
    },
    "1106": {
      "op": "MSTORE"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1111": {
      "op": "DUP3"
    },
    "1112": {
      "op": "ADD"
    },
    "1113": {
      "op": "MSTORE"
    },
    "1114": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1149": {
      "op": "DUP3"
    },
    "1150": {
      "op": "ADD"
    },
    "1151": {
      "op": "MSTORE"
    },
    "1152": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1187": {
      "op": "DUP3"
    },
    "1188": {
      "op": "ADD"
    },
    "1189": {
      "op": "MSTORE"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1192": {
      "op": "ADD"
    },
    "1193": {
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x381"
    },
    "1196": {
      "op": "JUMP"
    },
    "1197": {
      "fn": "ERC721.approve",
      "offset": [
        3917,
        4082
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1198": {
      "fn": "ERC721.approve",
      "offset": [
        4093,
        4114
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 10,
      "value": "0x4B7"
    },
    "1201": {
      "fn": "ERC721.approve",
      "offset": [
        4102,
        4104
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1202": {
      "fn": "ERC721.approve",
      "offset": [
        4106,
        4113
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1203": {
      "fn": "ERC721.approve",
      "offset": [
        4093,
        4101
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7F9"
    },
    "1206": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        4093,
        4114
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1207": {
      "fn": "ERC721.approve",
      "offset": [
        4093,
        4114
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1208": {
      "fn": "ERC721.approve",
      "offset": [
        3790,
        4121
      ],
      "op": "POP",
      "path": "4"
    },
    "1209": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "POP",
      "path": "4"
    },
    "1210": {
      "fn": "ERC721.approve",
      "offset": [
        3720,
        4121
      ],
      "op": "POP",
      "path": "4"
    },
    "1211": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3720,
        4121
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5196,
        5560
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1213": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5398,
        5439
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 11,
      "value": "0x4C6"
    },
    "1216": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1217": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5431,
        5438
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1218": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5398,
        5416
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x867"
    },
    "1221": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5398,
        5439
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1222": {
      "branch": 46,
      "fn": "ERC721.transferFrom",
      "offset": [
        5398,
        5439
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1223": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5377,
        5514
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4E2"
    },
    "1226": {
      "branch": 46,
      "fn": "ERC721.transferFrom",
      "offset": [
        5377,
        5514
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1227": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5377,
        5514
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1229": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5377,
        5514
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1230": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1236": {
      "op": "SHL"
    },
    "1237": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5377,
        5514
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1238": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5377,
        5514
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1239": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5377,
        5514
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1241": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5377,
        5514
      ],
      "op": "ADD",
      "path": "4"
    },
    "1242": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5377,
        5514
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x381"
    },
    "1245": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5377,
        5514
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1246": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5377,
        5514
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xED7"
    },
    "1249": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5377,
        5514
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1250": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5377,
        5514
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1251": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5525,
        5553
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 12,
      "value": "0x4B7"
    },
    "1254": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5535,
        5539
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1255": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5541,
        5543
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1256": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5545,
        5552
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1257": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5525,
        5534
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x95E"
    },
    "1260": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5525,
        5553
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1261": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5805
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1262": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 13,
      "value": "0x4B7"
    },
    "1265": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5776,
        5780
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1266": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5782,
        5784
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1267": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5786,
        5793
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1268": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1270": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1271": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1272": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1274": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "ADD",
      "path": "4"
    },
    "1275": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1277": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1278": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1279": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1281": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1282": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1283": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5798
      ],
      "op": "POP",
      "path": "4"
    },
    "1284": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5759,
        5775
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6DA"
    },
    "1287": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5759,
        5798
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1288": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2174,
        2487
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1289": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2286,
        2293
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1291": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2341
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1292": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2341
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1293": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2341
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1294": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1296": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2341
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1298": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2341
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1299": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2341
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1301": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2341
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1302": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2341
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1303": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2341
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1310": {
      "op": "SHL"
    },
    "1311": {
      "op": "SUB"
    },
    "1312": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2325,
        2341
      ],
      "op": "AND",
      "path": "4"
    },
    "1313": {
      "branch": 47,
      "fn": "ERC721.ownerOf",
      "offset": [
        2372,
        2391
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 14
    },
    "1314": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2351,
        2458
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x274"
    },
    "1317": {
      "branch": 47,
      "fn": "ERC721.ownerOf",
      "offset": [
        2351,
        2458
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1318": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2351,
        2458
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1320": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2351,
        2458
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1321": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1327": {
      "op": "SHL"
    },
    "1328": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2351,
        2458
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1329": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2351,
        2458
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1332": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2351,
        2458
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1334": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2351,
        2458
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1335": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2351,
        2458
      ],
      "op": "ADD",
      "path": "4"
    },
    "1336": {
      "op": "MSTORE"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1341": {
      "op": "DUP3"
    },
    "1342": {
      "op": "ADD"
    },
    "1343": {
      "op": "MSTORE"
    },
    "1344": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1379": {
      "op": "DUP3"
    },
    "1380": {
      "op": "ADD"
    },
    "1381": {
      "op": "MSTORE"
    },
    "1382": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1397": {
      "op": "DUP3"
    },
    "1398": {
      "op": "ADD"
    },
    "1399": {
      "op": "MSTORE"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1402": {
      "op": "ADD"
    },
    "1403": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2351,
        2458
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x381"
    },
    "1406": {
      "op": "JUMP"
    },
    "1407": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1834,
        2117
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        1953
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1416": {
      "op": "SHL"
    },
    "1417": {
      "op": "SUB"
    },
    "1418": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1990,
        2009
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 15
    },
    "1419": {
      "branch": 48,
      "fn": "ERC721.balanceOf",
      "offset": [
        1990,
        2009
      ],
      "op": "AND",
      "path": "4"
    },
    "1420": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5EA"
    },
    "1423": {
      "branch": 48,
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1424": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1426": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1427": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1433": {
      "op": "SHL"
    },
    "1434": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1435": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1438": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1440": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1441": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "ADD",
      "path": "4"
    },
    "1442": {
      "op": "MSTORE"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1447": {
      "op": "DUP3"
    },
    "1448": {
      "op": "ADD"
    },
    "1449": {
      "op": "MSTORE"
    },
    "1450": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1485": {
      "op": "DUP3"
    },
    "1486": {
      "op": "ADD"
    },
    "1487": {
      "op": "MSTORE"
    },
    "1488": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1501": {
      "op": "SHL"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1504": {
      "op": "DUP3"
    },
    "1505": {
      "op": "ADD"
    },
    "1506": {
      "op": "MSTORE"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1509": {
      "op": "ADD"
    },
    "1510": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x381"
    },
    "1513": {
      "op": "JUMP"
    },
    "1514": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1969,
        2077
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1515": {
      "op": "POP"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1522": {
      "op": "SHL"
    },
    "1523": {
      "op": "SUB"
    },
    "1524": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "AND",
      "path": "4",
      "statement": 16
    },
    "1525": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1527": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1528": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1529": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1530": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2103
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "1532": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1534": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1535": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1537": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1538": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1539": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1540": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2094,
        2110
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1541": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1834,
        2117
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1542": {
      "fn": "ERC721.symbol",
      "offset": [
        2711,
        2813
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1543": {
      "fn": "ERC721.symbol",
      "offset": [
        2767,
        2780
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "1545": {
      "fn": "ERC721.symbol",
      "offset": [
        2799,
        2806
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 17,
      "value": "0x1"
    },
    "1547": {
      "fn": "ERC721.symbol",
      "offset": [
        2792,
        2806
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1548": {
      "fn": "ERC721.symbol",
      "offset": [
        2792,
        2806
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1549": {
      "fn": "ERC721.symbol",
      "offset": [
        2792,
        2806
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x289"
    },
    "1552": {
      "fn": "ERC721.symbol",
      "offset": [
        2792,
        2806
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1553": {
      "fn": "ERC721.symbol",
      "offset": [
        2792,
        2806
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE9C"
    },
    "1556": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2792,
        2806
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1557": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1564": {
      "op": "SHL"
    },
    "1565": {
      "op": "SUB"
    },
    "1566": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4674,
        4698
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 18
    },
    "1567": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4674,
        4698
      ],
      "op": "AND",
      "path": "4"
    },
    "1568": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1569": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4674,
        4698
      ],
      "op": "EQ",
      "path": "4"
    },
    "1570": {
      "branch": 49,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4674,
        4698
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1571": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x66E"
    },
    "1574": {
      "branch": 49,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1575": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1577": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1578": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1584": {
      "op": "SHL"
    },
    "1585": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1586": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1589": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1591": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1592": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "ADD",
      "path": "4"
    },
    "1593": {
      "op": "MSTORE"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1598": {
      "op": "DUP3"
    },
    "1599": {
      "op": "ADD"
    },
    "1600": {
      "op": "MSTORE"
    },
    "1601": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1636": {
      "op": "DUP3"
    },
    "1637": {
      "op": "ADD"
    },
    "1638": {
      "op": "MSTORE"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1641": {
      "op": "ADD"
    },
    "1642": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x381"
    },
    "1645": {
      "op": "JUMP"
    },
    "1646": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4666,
        4728
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1647": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1648": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 19,
      "value": "0x0"
    },
    "1650": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1651": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1652": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1653": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4757
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "1655": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1657": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1658": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1659": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1660": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1662": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1663": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1664": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4771
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1671": {
      "op": "SHL"
    },
    "1672": {
      "op": "SUB"
    },
    "1673": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1674": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "AND",
      "path": "4"
    },
    "1675": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1676": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1677": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1678": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1679": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1680": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1681": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1682": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1683": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1684": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1685": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1686": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1689": {
      "op": "NOT"
    },
    "1690": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "AND",
      "path": "4"
    },
    "1691": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1692": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1693": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1694": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1695": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1696": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "OR",
      "path": "4"
    },
    "1697": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1698": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1699": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4792
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1700": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 20
    },
    "1701": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1702": {
      "op": "SWAP1"
    },
    "1703": {
      "op": "DUP2"
    },
    "1704": {
      "op": "MSTORE"
    },
    "1705": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1706": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4739,
        4781
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1707": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1708": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "1741": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1742": {
      "op": "ADD"
    },
    "1743": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1745": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1746": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1747": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1748": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "SUB",
      "path": "4"
    },
    "1749": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1750": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4807,
        4855
      ],
      "op": "LOG3",
      "path": "4"
    },
    "1751": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "POP",
      "path": "4"
    },
    "1752": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4544,
        4862
      ],
      "op": "POP",
      "path": "4"
    },
    "1753": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4544,
        4862
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1754": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1755": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6053,
        6094
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 21,
      "value": "0x6E4"
    },
    "1758": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1759": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6086,
        6093
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1760": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6053,
        6071
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x867"
    },
    "1763": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        6053,
        6094
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1764": {
      "branch": 50,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6053,
        6094
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1765": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x700"
    },
    "1768": {
      "branch": 50,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1769": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1771": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1772": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1778": {
      "op": "SHL"
    },
    "1779": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1780": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1781": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1783": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "ADD",
      "path": "4"
    },
    "1784": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x381"
    },
    "1787": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1788": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xED7"
    },
    "1791": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        6032,
        6169
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1792": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6032,
        6169
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1793": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6179,
        6210
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 22,
      "value": "0x70B"
    },
    "1796": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6192,
        6196
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1797": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6198,
        6200
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1798": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6202,
        6209
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1799": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6179,
        6191
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4BC"
    },
    "1802": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        6179,
        6210
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1803": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6179,
        6210
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1804": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "POP",
      "path": "4"
    },
    "1805": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "POP",
      "path": "4"
    },
    "1806": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "POP",
      "path": "4"
    },
    "1807": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5871,
        6217
      ],
      "op": "POP",
      "path": "4"
    },
    "1808": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5871,
        6217
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1809": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2879,
        3330
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1810": {
      "fn": "ERC721._exists",
      "offset": [
        7788,
        7792
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1812": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1813": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1814": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1815": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1817": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1819": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1820": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1822": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1823": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1824": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1825": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2992,
        3005
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "1827": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2992,
        3005
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1834": {
      "op": "SHL"
    },
    "1835": {
      "op": "SUB"
    },
    "1836": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "AND",
      "path": "4"
    },
    "1837": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3131
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 23,
      "value": "0x790"
    },
    "1840": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3131
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1841": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3131
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1843": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3131
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1844": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1850": {
      "op": "SHL"
    },
    "1851": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3131
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1852": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3131
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1855": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3131
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1857": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3131
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1858": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3131
      ],
      "op": "ADD",
      "path": "4"
    },
    "1859": {
      "op": "MSTORE"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1864": {
      "op": "DUP3"
    },
    "1865": {
      "op": "ADD"
    },
    "1866": {
      "op": "MSTORE"
    },
    "1867": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1902": {
      "op": "DUP3"
    },
    "1903": {
      "op": "ADD"
    },
    "1904": {
      "op": "MSTORE"
    },
    "1905": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1923": {
      "op": "SHL"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1926": {
      "op": "DUP3"
    },
    "1927": {
      "op": "ADD"
    },
    "1928": {
      "op": "MSTORE"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1931": {
      "op": "ADD"
    },
    "1932": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3131
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x381"
    },
    "1935": {
      "op": "JUMP"
    },
    "1936": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3131
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1937": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3142,
        3163
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1939": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3166,
        3176
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7A7"
    },
    "1942": {
      "fn": "ERC721._baseURI",
      "offset": [
        3647,
        3656
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 24,
      "value": "0x40"
    },
    "1944": {
      "fn": "ERC721._baseURI",
      "offset": [
        3647,
        3656
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1945": {
      "fn": "ERC721._baseURI",
      "offset": [
        3647,
        3656
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1946": {
      "fn": "ERC721._baseURI",
      "offset": [
        3647,
        3656
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1948": {
      "fn": "ERC721._baseURI",
      "offset": [
        3647,
        3656
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1949": {
      "fn": "ERC721._baseURI",
      "offset": [
        3647,
        3656
      ],
      "op": "ADD",
      "path": "4"
    },
    "1950": {
      "fn": "ERC721._baseURI",
      "offset": [
        3647,
        3656
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1951": {
      "fn": "ERC721._baseURI",
      "offset": [
        3647,
        3656
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1952": {
      "fn": "ERC721._baseURI",
      "offset": [
        3647,
        3656
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1955": {
      "fn": "ERC721._baseURI",
      "offset": [
        3647,
        3656
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1956": {
      "fn": "ERC721._baseURI",
      "offset": [
        3647,
        3656
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1957": {
      "fn": "ERC721._baseURI",
      "offset": [
        3647,
        3656
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1958": {
      "fn": "ERC721._baseURI",
      "offset": [
        3571,
        3663
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1959": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3166,
        3176
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1960": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3142,
        3176
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1961": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3142,
        3176
      ],
      "op": "POP",
      "path": "4"
    },
    "1962": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3229,
        3230
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 25,
      "value": "0x0"
    },
    "1964": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3211,
        3218
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1965": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3205,
        3226
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1966": {
      "branch": 51,
      "fn": "ERC721.tokenURI",
      "offset": [
        3205,
        3230
      ],
      "op": "GT",
      "path": "4"
    },
    "1967": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3205,
        3323
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C7"
    },
    "1970": {
      "branch": 51,
      "fn": "ERC721.tokenURI",
      "offset": [
        3205,
        3323
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1971": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3205,
        3323
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1973": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3205,
        3323
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1974": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3205,
        3323
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1975": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3205,
        3323
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1977": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3205,
        3323
      ],
      "op": "ADD",
      "path": "4"
    },
    "1978": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3205,
        3323
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1980": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3205,
        3323
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1981": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3205,
        3323
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1982": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3205,
        3323
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1984": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3205,
        3323
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1985": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3205,
        3323
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1986": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3205,
        3323
      ],
      "op": "POP",
      "path": "4"
    },
    "1987": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3205,
        3323
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7F2"
    },
    "1990": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3205,
        3323
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1991": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3205,
        3323
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1992": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3273,
        3280
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1993": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3282,
        3300
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7D1"
    },
    "1996": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3282,
        3289
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1997": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3282,
        3298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAFE"
    },
    "2000": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3282,
        3300
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2001": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3282,
        3300
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2002": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2004": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2005": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2007": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "ADD",
      "path": "4"
    },
    "2008": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7E2"
    },
    "2011": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2012": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2013": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2014": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF28"
    },
    "2017": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3256,
        3301
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2018": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2019": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2021": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2022": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2024": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2025": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2026": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "SUB",
      "path": "4"
    },
    "2027": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "SUB",
      "path": "4"
    },
    "2028": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2029": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2030": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2031": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2033": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3256,
        3301
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2034": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3205,
        3323
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2035": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3186,
        3323
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2036": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2879,
        3330
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2037": {
      "op": "POP"
    },
    "2038": {
      "op": "POP"
    },
    "2039": {
      "op": "POP"
    },
    "2040": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2879,
        3330
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2041": {
      "fn": "ERC721._approve",
      "offset": [
        11541,
        11712
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2042": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 26,
      "value": "0x0"
    },
    "2044": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2045": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2046": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2047": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11630
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2049": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2051": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2052": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2054": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2055": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2056": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2057": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2064": {
      "op": "SHL"
    },
    "2065": {
      "op": "SUB"
    },
    "2066": {
      "op": "NOT"
    },
    "2067": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "AND",
      "path": "4"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2074": {
      "op": "SHL"
    },
    "2075": {
      "op": "SUB"
    },
    "2076": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2077": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "AND",
      "path": "4"
    },
    "2078": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2079": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2080": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "OR",
      "path": "4"
    },
    "2081": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2082": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2083": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11644
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2084": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2085": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2086": {
      "fn": "ERC721._approve",
      "offset": [
        11668,
        11691
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 27,
      "value": "0x82E"
    },
    "2089": {
      "fn": "ERC721._approve",
      "offset": [
        11615,
        11639
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2090": {
      "fn": "ERC721._approve",
      "offset": [
        11668,
        11682
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x508"
    },
    "2093": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11668,
        11691
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2094": {
      "fn": "ERC721._approve",
      "offset": [
        11668,
        11691
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2101": {
      "op": "SHL"
    },
    "2102": {
      "op": "SUB"
    },
    "2103": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "AND",
      "path": "4"
    },
    "2104": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2137": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2139": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2140": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2142": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2143": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2144": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2145": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "SUB",
      "path": "4"
    },
    "2146": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2147": {
      "fn": "ERC721._approve",
      "offset": [
        11659,
        11705
      ],
      "op": "LOG4",
      "path": "4"
    },
    "2148": {
      "fn": "ERC721._approve",
      "offset": [
        11541,
        11712
      ],
      "op": "POP",
      "path": "4"
    },
    "2149": {
      "fn": "ERC721._approve",
      "offset": [
        11541,
        11712
      ],
      "op": "POP",
      "path": "4"
    },
    "2150": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11541,
        11712
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2151": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8006,
        8444
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2152": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8131,
        8135
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2154": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2155": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2156": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2157": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2159": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2161": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2162": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2164": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2165": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2166": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2173": {
      "op": "SHL"
    },
    "2174": {
      "op": "SUB"
    },
    "2175": {
      "fn": "ERC721._exists",
      "offset": [
        7811,
        7827
      ],
      "op": "AND",
      "path": "4"
    },
    "2176": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 28,
      "value": "0x8E0"
    },
    "2179": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2180": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2182": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2183": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2189": {
      "op": "SHL"
    },
    "2190": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2191": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2194": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2196": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2197": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "ADD",
      "path": "4"
    },
    "2198": {
      "op": "MSTORE"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2203": {
      "op": "DUP3"
    },
    "2204": {
      "op": "ADD"
    },
    "2205": {
      "op": "MSTORE"
    },
    "2206": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2241": {
      "op": "DUP3"
    },
    "2242": {
      "op": "ADD"
    },
    "2243": {
      "op": "MSTORE"
    },
    "2244": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2259": {
      "op": "SHL"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2262": {
      "op": "DUP3"
    },
    "2263": {
      "op": "ADD"
    },
    "2264": {
      "op": "MSTORE"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2267": {
      "op": "ADD"
    },
    "2268": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x381"
    },
    "2271": {
      "op": "JUMP"
    },
    "2272": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8151,
        8258
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2273": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8268,
        8281
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2275": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8284,
        8307
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8EB"
    },
    "2278": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8299,
        8306
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2279": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8284,
        8298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x508"
    },
    "2282": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        8284,
        8307
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2283": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8284,
        8307
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2284": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8268,
        8307
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2285": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8268,
        8307
      ],
      "op": "POP",
      "path": "4"
    },
    "2286": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8336,
        8341
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 29
    },
    "2287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2293": {
      "op": "SHL"
    },
    "2294": {
      "op": "SUB"
    },
    "2295": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8341
      ],
      "op": "AND",
      "path": "4"
    },
    "2296": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8332
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2303": {
      "op": "SHL"
    },
    "2304": {
      "op": "SUB"
    },
    "2305": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8341
      ],
      "op": "AND",
      "path": "4"
    },
    "2306": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8341
      ],
      "op": "EQ",
      "path": "4"
    },
    "2307": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8388
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2308": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8388
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x926"
    },
    "2311": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8388
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2312": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8388
      ],
      "op": "POP",
      "path": "4"
    },
    "2313": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8381,
        8388
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2320": {
      "op": "SHL"
    },
    "2321": {
      "op": "SUB"
    },
    "2322": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8357,
        8388
      ],
      "op": "AND",
      "path": "4"
    },
    "2323": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8357,
        8377
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x91B"
    },
    "2326": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8369,
        8376
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2327": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8357,
        8368
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x30C"
    },
    "2330": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        8357,
        8377
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2331": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8357,
        8377
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2338": {
      "op": "SHL"
    },
    "2339": {
      "op": "SUB"
    },
    "2340": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8357,
        8388
      ],
      "op": "AND",
      "path": "4"
    },
    "2341": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8357,
        8388
      ],
      "op": "EQ",
      "path": "4"
    },
    "2342": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8388
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2343": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8436
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2344": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x956"
    },
    "2347": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8325,
        8436
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2348": {
      "op": "POP"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2355": {
      "op": "SHL"
    },
    "2356": {
      "op": "SUB"
    },
    "2357": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2358": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2359": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "AND",
      "path": "4"
    },
    "2360": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5065,
        5069
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2362": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2363": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2364": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2365": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5110
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "2367": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2369": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2370": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2371": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2372": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2374": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2375": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2376": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5117
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2377": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2378": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "DUP9",
      "path": "4"
    },
    "2379": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "AND",
      "path": "4"
    },
    "2380": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2381": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2382": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2383": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2384": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2385": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2386": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2387": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "2389": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5092,
        5127
      ],
      "op": "AND",
      "path": "4"
    },
    "2390": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8404,
        8436
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2391": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8317,
        8437
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2392": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8006,
        8444
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2393": {
      "op": "POP"
    },
    "2394": {
      "op": "POP"
    },
    "2395": {
      "op": "POP"
    },
    "2396": {
      "op": "POP"
    },
    "2397": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        8006,
        8444
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2398": {
      "fn": "ERC721._transfer",
      "offset": [
        10836,
        11430
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2399": {
      "fn": "ERC721._transfer",
      "offset": [
        11003,
        11007
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 30
    },
    "2400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2406": {
      "op": "SHL"
    },
    "2407": {
      "op": "SUB"
    },
    "2408": {
      "fn": "ERC721._transfer",
      "offset": [
        10976,
        11007
      ],
      "op": "AND",
      "path": "4"
    },
    "2409": {
      "fn": "ERC721._transfer",
      "offset": [
        10976,
        10999
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x971"
    },
    "2412": {
      "fn": "ERC721._transfer",
      "offset": [
        10991,
        10998
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2413": {
      "fn": "ERC721._transfer",
      "offset": [
        10976,
        10990
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x508"
    },
    "2416": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10976,
        10999
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2417": {
      "fn": "ERC721._transfer",
      "offset": [
        10976,
        10999
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2424": {
      "op": "SHL"
    },
    "2425": {
      "op": "SUB"
    },
    "2426": {
      "fn": "ERC721._transfer",
      "offset": [
        10976,
        11007
      ],
      "op": "AND",
      "path": "4"
    },
    "2427": {
      "branch": 52,
      "fn": "ERC721._transfer",
      "offset": [
        10976,
        11007
      ],
      "op": "EQ",
      "path": "4"
    },
    "2428": {
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9D9"
    },
    "2431": {
      "branch": 52,
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2432": {
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2434": {
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2435": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2441": {
      "op": "SHL"
    },
    "2442": {
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2443": {
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2446": {
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2448": {
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2449": {
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "ADD",
      "path": "4"
    },
    "2450": {
      "op": "MSTORE"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2455": {
      "op": "DUP3"
    },
    "2456": {
      "op": "ADD"
    },
    "2457": {
      "op": "MSTORE"
    },
    "2458": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2493": {
      "op": "DUP3"
    },
    "2494": {
      "op": "ADD"
    },
    "2495": {
      "op": "MSTORE"
    },
    "2496": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2508": {
      "op": "SHL"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2511": {
      "op": "DUP3"
    },
    "2512": {
      "op": "ADD"
    },
    "2513": {
      "op": "MSTORE"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2516": {
      "op": "ADD"
    },
    "2517": {
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x381"
    },
    "2520": {
      "op": "JUMP"
    },
    "2521": {
      "fn": "ERC721._transfer",
      "offset": [
        10955,
        11074
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2528": {
      "op": "SHL"
    },
    "2529": {
      "op": "SUB"
    },
    "2530": {
      "fn": "ERC721._transfer",
      "offset": [
        11092,
        11108
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 31
    },
    "2531": {
      "branch": 53,
      "fn": "ERC721._transfer",
      "offset": [
        11092,
        11108
      ],
      "op": "AND",
      "path": "4"
    },
    "2532": {
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA3B"
    },
    "2535": {
      "branch": 53,
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2536": {
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2538": {
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2539": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2545": {
      "op": "SHL"
    },
    "2546": {
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2547": {
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2550": {
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2552": {
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2553": {
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "ADD",
      "path": "4"
    },
    "2554": {
      "op": "MSTORE"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2557": {
      "op": "DUP1"
    },
    "2558": {
      "op": "DUP3"
    },
    "2559": {
      "op": "ADD"
    },
    "2560": {
      "op": "MSTORE"
    },
    "2561": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2594": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2596": {
      "op": "DUP3"
    },
    "2597": {
      "op": "ADD"
    },
    "2598": {
      "op": "MSTORE"
    },
    "2599": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2604": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2606": {
      "op": "SHL"
    },
    "2607": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2609": {
      "op": "DUP3"
    },
    "2610": {
      "op": "ADD"
    },
    "2611": {
      "op": "MSTORE"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2614": {
      "op": "ADD"
    },
    "2615": {
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x381"
    },
    "2618": {
      "op": "JUMP"
    },
    "2619": {
      "fn": "ERC721._transfer",
      "offset": [
        11084,
        11149
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2620": {
      "fn": "ERC721._transfer",
      "offset": [
        11261,
        11290
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 32,
      "value": "0xA46"
    },
    "2623": {
      "fn": "ERC721._transfer",
      "offset": [
        11278,
        11279
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2625": {
      "fn": "ERC721._transfer",
      "offset": [
        11282,
        11289
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2626": {
      "fn": "ERC721._transfer",
      "offset": [
        11261,
        11269
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7F9"
    },
    "2629": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11261,
        11290
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2630": {
      "fn": "ERC721._transfer",
      "offset": [
        11261,
        11290
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2637": {
      "op": "SHL"
    },
    "2638": {
      "op": "SUB"
    },
    "2639": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 33
    },
    "2640": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "AND",
      "path": "4"
    },
    "2641": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2643": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2644": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2645": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2646": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2648": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2650": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2651": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2653": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2654": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2655": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11321
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2656": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11321
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2657": {
      "fn": "ERC721._transfer",
      "offset": [
        11320,
        11321
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2659": {
      "fn": "ERC721._transfer",
      "offset": [
        11320,
        11321
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2660": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11316
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2661": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11321
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA6F"
    },
    "2664": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11321
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2665": {
      "fn": "ERC721._transfer",
      "offset": [
        11320,
        11321
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2666": {
      "fn": "ERC721._transfer",
      "offset": [
        11320,
        11321
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2667": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11321
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF6D"
    },
    "2670": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11301,
        11321
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2671": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11321
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2672": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11321
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2673": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11321
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2674": {
      "fn": "ERC721._transfer",
      "offset": [
        11301,
        11321
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2675": {
      "op": "POP"
    },
    "2676": {
      "op": "POP"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2683": {
      "op": "SHL"
    },
    "2684": {
      "op": "SUB"
    },
    "2685": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 34
    },
    "2686": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "AND",
      "path": "4"
    },
    "2687": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2689": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2690": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2691": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2692": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11340
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2694": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2696": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2697": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2699": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2700": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2701": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11349
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2702": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11349
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2703": {
      "fn": "ERC721._transfer",
      "offset": [
        11348,
        11349
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2705": {
      "fn": "ERC721._transfer",
      "offset": [
        11348,
        11349
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2706": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11344
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2707": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11349
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA9D"
    },
    "2710": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11349
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2711": {
      "fn": "ERC721._transfer",
      "offset": [
        11348,
        11349
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2712": {
      "fn": "ERC721._transfer",
      "offset": [
        11348,
        11349
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2713": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11349
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF84"
    },
    "2716": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11331,
        11349
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2717": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11349
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2718": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11349
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2719": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11349
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2720": {
      "fn": "ERC721._transfer",
      "offset": [
        11331,
        11349
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2721": {
      "op": "POP"
    },
    "2722": {
      "op": "POP"
    },
    "2723": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 35,
      "value": "0x0"
    },
    "2725": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2726": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2727": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2728": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11366
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2730": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2732": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2733": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2735": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2736": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2737": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2738": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2739": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2746": {
      "op": "SHL"
    },
    "2747": {
      "op": "SUB"
    },
    "2748": {
      "op": "NOT"
    },
    "2749": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "AND",
      "path": "4"
    },
    "2750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2756": {
      "op": "SHL"
    },
    "2757": {
      "op": "SUB"
    },
    "2758": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2759": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2760": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "AND",
      "path": "4"
    },
    "2761": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2762": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2763": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "OR",
      "path": "4"
    },
    "2764": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2765": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2766": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11380
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2767": {
      "fn": "ERC721._transfer",
      "offset": [
        11396,
        11423
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 36
    },
    "2768": {
      "fn": "ERC721._transfer",
      "offset": [
        11396,
        11423
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2769": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2770": {
      "fn": "ERC721._transfer",
      "offset": [
        11359,
        11375
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2771": {
      "fn": "ERC721._transfer",
      "offset": [
        11396,
        11423
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2772": {
      "fn": "ERC721._transfer",
      "offset": [
        11396,
        11423
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2773": {
      "fn": "ERC721._transfer",
      "offset": [
        11396,
        11423
      ],
      "op": "AND",
      "path": "4"
    },
    "2774": {
      "fn": "ERC721._transfer",
      "offset": [
        11396,
        11423
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2775": {
      "fn": "ERC721._transfer",
      "offset": [
        11396,
        11423
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2808": {
      "fn": "ERC721._transfer",
      "offset": [
        11396,
        11423
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2809": {
      "fn": "ERC721._transfer",
      "offset": [
        11396,
        11423
      ],
      "op": "LOG4",
      "path": "4"
    },
    "2810": {
      "fn": "ERC721._transfer",
      "offset": [
        10836,
        11430
      ],
      "op": "POP",
      "path": "4"
    },
    "2811": {
      "fn": "ERC721._transfer",
      "offset": [
        10836,
        11430
      ],
      "op": "POP",
      "path": "4"
    },
    "2812": {
      "fn": "ERC721._transfer",
      "offset": [
        10836,
        11430
      ],
      "op": "POP",
      "path": "4"
    },
    "2813": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10836,
        11430
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2814": {
      "fn": "Strings.toString",
      "offset": [
        275,
        978
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2815": {
      "fn": "Strings.toString",
      "offset": [
        331,
        344
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "2817": {
      "branch": 54,
      "fn": "Strings.toString",
      "offset": [
        548,
        558
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2818": {
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB22"
    },
    "2821": {
      "branch": 54,
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2822": {
      "op": "POP"
    },
    "2823": {
      "op": "POP"
    },
    "2824": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 37,
      "value": "0x40"
    },
    "2826": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2827": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2828": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2829": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2830": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "ADD",
      "path": "22"
    },
    "2831": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2832": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2833": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2834": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2836": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2837": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2840": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "2842": {
      "op": "SHL"
    },
    "2843": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2845": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2846": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "ADD",
      "path": "22"
    },
    "2847": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2848": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2849": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        275,
        978
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2850": {
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2851": {
      "fn": "Strings.toString",
      "offset": [
        619,
        624
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2852": {
      "fn": "Strings.toString",
      "offset": [
        604,
        616
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2854": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2855": {
      "fn": "Strings.toString",
      "offset": [
        665,
        674
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2856": {
      "fn": "Strings.toString",
      "offset": [
        665,
        674
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2857": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB4C"
    },
    "2860": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2861": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 38
    },
    "2862": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB36"
    },
    "2865": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2866": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF9C"
    },
    "2869": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        690,
        698
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2870": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2871": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2872": {
      "op": "POP"
    },
    "2873": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 39,
      "value": "0xB45"
    },
    "2876": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2877": {
      "op": "POP"
    },
    "2878": {
      "fn": "Strings.toString",
      "offset": [
        720,
        722
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "2880": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2881": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFCD"
    },
    "2884": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        712,
        722
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2885": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2886": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2887": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "POP",
      "path": "22"
    },
    "2888": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB26"
    },
    "2891": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2892": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2893": {
      "fn": "Strings.toString",
      "offset": [
        742,
        761
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2895": {
      "fn": "Strings.toString",
      "offset": [
        774,
        780
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2896": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH8",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2905": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2906": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "GT",
      "path": "22"
    },
    "2907": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2908": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB67"
    },
    "2911": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2912": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB67"
    },
    "2915": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD77"
    },
    "2918": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        764,
        781
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2919": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2920": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2922": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2923": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2924": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2925": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2926": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2927": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2928": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "2930": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "22"
    },
    "2931": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "2933": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "NOT",
      "path": "22"
    },
    "2934": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "AND",
      "path": "22"
    },
    "2935": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2937": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "22"
    },
    "2938": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2939": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "22"
    },
    "2940": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2942": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2943": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2944": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2945": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB91"
    },
    "2948": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2949": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2951": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2952": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "22"
    },
    "2953": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2954": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2955": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "2956": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2957": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "CALLDATACOPY",
      "path": "22"
    },
    "2958": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "22"
    },
    "2959": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2960": {
      "op": "POP"
    },
    "2961": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2962": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "POP",
      "path": "22"
    },
    "2963": {
      "fn": "Strings.toString",
      "offset": [
        742,
        781
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2964": {
      "fn": "Strings.toString",
      "offset": [
        742,
        781
      ],
      "op": "POP",
      "path": "22"
    },
    "2965": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2966": {
      "fn": "Strings.toString",
      "offset": [
        798,
        808
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2967": {
      "fn": "Strings.toString",
      "offset": [
        798,
        808
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2968": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x956"
    },
    "2971": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2972": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 40,
      "value": "0xBA6"
    },
    "2975": {
      "fn": "Strings.toString",
      "offset": [
        834,
        835
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2977": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2978": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF6D"
    },
    "2981": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        824,
        835
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2982": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2983": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2984": {
      "op": "POP"
    },
    "2985": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 41,
      "value": "0xBB3"
    },
    "2988": {
      "fn": "Strings.toString",
      "offset": [
        900,
        902
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "2990": {
      "fn": "Strings.toString",
      "offset": [
        892,
        897
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2991": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFE1"
    },
    "2994": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        892,
        902
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2995": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2996": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBBE"
    },
    "2999": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3000": {
      "fn": "Strings.toString",
      "offset": [
        879,
        881
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x30"
    },
    "3002": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF84"
    },
    "3005": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        879,
        903
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3006": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3007": {
      "fn": "Strings.toString",
      "offset": [
        866,
        905
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xF8"
    },
    "3009": {
      "fn": "Strings.toString",
      "offset": [
        866,
        905
      ],
      "op": "SHL",
      "path": "22"
    },
    "3010": {
      "fn": "Strings.toString",
      "offset": [
        849,
        855
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3011": {
      "fn": "Strings.toString",
      "offset": [
        856,
        862
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3012": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3013": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3014": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3015": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "LT",
      "path": "22"
    },
    "3016": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBD3"
    },
    "3019": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3020": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBD3"
    },
    "3023": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFF5"
    },
    "3026": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        849,
        863
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3027": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3028": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3030": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "ADD",
      "path": "22"
    },
    "3031": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "ADD",
      "path": "22"
    },
    "3032": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3039": {
      "op": "SHL"
    },
    "3040": {
      "op": "SUB"
    },
    "3041": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "NOT",
      "path": "22"
    },
    "3042": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "AND",
      "path": "22"
    },
    "3043": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3044": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3045": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3047": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "BYTE",
      "path": "22"
    },
    "3048": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3049": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "MSTORE8",
      "path": "22"
    },
    "3050": {
      "op": "POP"
    },
    "3051": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 42,
      "value": "0xBF5"
    },
    "3054": {
      "fn": "Strings.toString",
      "offset": [
        928,
        930
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "3056": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "DUP7",
      "path": "22"
    },
    "3057": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFCD"
    },
    "3060": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        919,
        930
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3061": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3062": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "3063": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "POP",
      "path": "22"
    },
    "3064": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB95"
    },
    "3067": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3068": {
      "op": "JUMPDEST"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3073": {
      "op": "DUP3"
    },
    "3074": {
      "op": "DUP5"
    },
    "3075": {
      "op": "SUB"
    },
    "3076": {
      "op": "SLT"
    },
    "3077": {
      "op": "ISZERO"
    },
    "3078": {
      "op": "PUSH2",
      "value": "0xC0E"
    },
    "3081": {
      "op": "JUMPI"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3084": {
      "op": "DUP1"
    },
    "3085": {
      "op": "REVERT"
    },
    "3086": {
      "op": "JUMPDEST"
    },
    "3087": {
      "op": "DUP2"
    },
    "3088": {
      "op": "CALLDATALOAD"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3095": {
      "op": "SHL"
    },
    "3096": {
      "op": "SUB"
    },
    "3097": {
      "op": "NOT"
    },
    "3098": {
      "op": "DUP2"
    },
    "3099": {
      "op": "AND"
    },
    "3100": {
      "op": "DUP2"
    },
    "3101": {
      "op": "EQ"
    },
    "3102": {
      "op": "PUSH2",
      "value": "0x7F2"
    },
    "3105": {
      "op": "JUMPI"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3108": {
      "op": "DUP1"
    },
    "3109": {
      "op": "REVERT"
    },
    "3110": {
      "op": "JUMPDEST"
    },
    "3111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3113": {
      "op": "JUMPDEST"
    },
    "3114": {
      "op": "DUP4"
    },
    "3115": {
      "op": "DUP2"
    },
    "3116": {
      "op": "LT"
    },
    "3117": {
      "op": "ISZERO"
    },
    "3118": {
      "op": "PUSH2",
      "value": "0xC41"
    },
    "3121": {
      "op": "JUMPI"
    },
    "3122": {
      "op": "DUP2"
    },
    "3123": {
      "op": "DUP2"
    },
    "3124": {
      "op": "ADD"
    },
    "3125": {
      "op": "MLOAD"
    },
    "3126": {
      "op": "DUP4"
    },
    "3127": {
      "op": "DUP3"
    },
    "3128": {
      "op": "ADD"
    },
    "3129": {
      "op": "MSTORE"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3132": {
      "op": "ADD"
    },
    "3133": {
      "op": "PUSH2",
      "value": "0xC29"
    },
    "3136": {
      "op": "JUMP"
    },
    "3137": {
      "op": "JUMPDEST"
    },
    "3138": {
      "op": "DUP4"
    },
    "3139": {
      "op": "DUP2"
    },
    "3140": {
      "op": "GT"
    },
    "3141": {
      "op": "ISZERO"
    },
    "3142": {
      "op": "PUSH2",
      "value": "0x70B"
    },
    "3145": {
      "op": "JUMPI"
    },
    "3146": {
      "op": "POP"
    },
    "3147": {
      "op": "POP"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3150": {
      "op": "SWAP2"
    },
    "3151": {
      "op": "ADD"
    },
    "3152": {
      "op": "MSTORE"
    },
    "3153": {
      "jump": "o",
      "op": "JUMP"
    },
    "3154": {
      "op": "JUMPDEST"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3157": {
      "op": "DUP2"
    },
    "3158": {
      "op": "MSTORE"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3161": {
      "op": "DUP3"
    },
    "3162": {
      "op": "MLOAD"
    },
    "3163": {
      "op": "DUP1"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3166": {
      "op": "DUP5"
    },
    "3167": {
      "op": "ADD"
    },
    "3168": {
      "op": "MSTORE"
    },
    "3169": {
      "op": "PUSH2",
      "value": "0xC71"
    },
    "3172": {
      "op": "DUP2"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3175": {
      "op": "DUP6"
    },
    "3176": {
      "op": "ADD"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3179": {
      "op": "DUP8"
    },
    "3180": {
      "op": "ADD"
    },
    "3181": {
      "op": "PUSH2",
      "value": "0xC26"
    },
    "3184": {
      "jump": "i",
      "op": "JUMP"
    },
    "3185": {
      "op": "JUMPDEST"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3188": {
      "op": "ADD"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3191": {
      "op": "NOT"
    },
    "3192": {
      "op": "AND"
    },
    "3193": {
      "op": "SWAP2"
    },
    "3194": {
      "op": "SWAP1"
    },
    "3195": {
      "op": "SWAP2"
    },
    "3196": {
      "op": "ADD"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3199": {
      "op": "ADD"
    },
    "3200": {
      "op": "SWAP3"
    },
    "3201": {
      "op": "SWAP2"
    },
    "3202": {
      "op": "POP"
    },
    "3203": {
      "op": "POP"
    },
    "3204": {
      "jump": "o",
      "op": "JUMP"
    },
    "3205": {
      "op": "JUMPDEST"
    },
    "3206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3210": {
      "op": "DUP3"
    },
    "3211": {
      "op": "DUP5"
    },
    "3212": {
      "op": "SUB"
    },
    "3213": {
      "op": "SLT"
    },
    "3214": {
      "op": "ISZERO"
    },
    "3215": {
      "op": "PUSH2",
      "value": "0xC97"
    },
    "3218": {
      "op": "JUMPI"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3221": {
      "op": "DUP1"
    },
    "3222": {
      "op": "REVERT"
    },
    "3223": {
      "op": "JUMPDEST"
    },
    "3224": {
      "op": "POP"
    },
    "3225": {
      "op": "CALLDATALOAD"
    },
    "3226": {
      "op": "SWAP2"
    },
    "3227": {
      "op": "SWAP1"
    },
    "3228": {
      "op": "POP"
    },
    "3229": {
      "jump": "o",
      "op": "JUMP"
    },
    "3230": {
      "op": "JUMPDEST"
    },
    "3231": {
      "op": "DUP1"
    },
    "3232": {
      "op": "CALLDATALOAD"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3239": {
      "op": "SHL"
    },
    "3240": {
      "op": "SUB"
    },
    "3241": {
      "op": "DUP2"
    },
    "3242": {
      "op": "AND"
    },
    "3243": {
      "op": "DUP2"
    },
    "3244": {
      "op": "EQ"
    },
    "3245": {
      "op": "PUSH2",
      "value": "0xCB5"
    },
    "3248": {
      "op": "JUMPI"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3251": {
      "op": "DUP1"
    },
    "3252": {
      "op": "REVERT"
    },
    "3253": {
      "op": "JUMPDEST"
    },
    "3254": {
      "op": "SWAP2"
    },
    "3255": {
      "op": "SWAP1"
    },
    "3256": {
      "op": "POP"
    },
    "3257": {
      "jump": "o",
      "op": "JUMP"
    },
    "3258": {
      "op": "JUMPDEST"
    },
    "3259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3261": {
      "op": "DUP1"
    },
    "3262": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3264": {
      "op": "DUP4"
    },
    "3265": {
      "op": "DUP6"
    },
    "3266": {
      "op": "SUB"
    },
    "3267": {
      "op": "SLT"
    },
    "3268": {
      "op": "ISZERO"
    },
    "3269": {
      "op": "PUSH2",
      "value": "0xCCD"
    },
    "3272": {
      "op": "JUMPI"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3275": {
      "op": "DUP1"
    },
    "3276": {
      "op": "REVERT"
    },
    "3277": {
      "op": "JUMPDEST"
    },
    "3278": {
      "op": "PUSH2",
      "value": "0xCD6"
    },
    "3281": {
      "op": "DUP4"
    },
    "3282": {
      "op": "PUSH2",
      "value": "0xC9E"
    },
    "3285": {
      "jump": "i",
      "op": "JUMP"
    },
    "3286": {
      "op": "JUMPDEST"
    },
    "3287": {
      "op": "SWAP5"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3290": {
      "op": "SWAP4"
    },
    "3291": {
      "op": "SWAP1"
    },
    "3292": {
      "op": "SWAP4"
    },
    "3293": {
      "op": "ADD"
    },
    "3294": {
      "op": "CALLDATALOAD"
    },
    "3295": {
      "op": "SWAP4"
    },
    "3296": {
      "op": "POP"
    },
    "3297": {
      "op": "POP"
    },
    "3298": {
      "op": "POP"
    },
    "3299": {
      "jump": "o",
      "op": "JUMP"
    },
    "3300": {
      "op": "JUMPDEST"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3303": {
      "op": "DUP1"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3308": {
      "op": "DUP5"
    },
    "3309": {
      "op": "DUP7"
    },
    "3310": {
      "op": "SUB"
    },
    "3311": {
      "op": "SLT"
    },
    "3312": {
      "op": "ISZERO"
    },
    "3313": {
      "op": "PUSH2",
      "value": "0xCF9"
    },
    "3316": {
      "op": "JUMPI"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3319": {
      "op": "DUP1"
    },
    "3320": {
      "op": "REVERT"
    },
    "3321": {
      "op": "JUMPDEST"
    },
    "3322": {
      "op": "PUSH2",
      "value": "0xD02"
    },
    "3325": {
      "op": "DUP5"
    },
    "3326": {
      "op": "PUSH2",
      "value": "0xC9E"
    },
    "3329": {
      "jump": "i",
      "op": "JUMP"
    },
    "3330": {
      "op": "JUMPDEST"
    },
    "3331": {
      "op": "SWAP3"
    },
    "3332": {
      "op": "POP"
    },
    "3333": {
      "op": "PUSH2",
      "value": "0xD10"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3338": {
      "op": "DUP6"
    },
    "3339": {
      "op": "ADD"
    },
    "3340": {
      "op": "PUSH2",
      "value": "0xC9E"
    },
    "3343": {
      "jump": "i",
      "op": "JUMP"
    },
    "3344": {
      "op": "JUMPDEST"
    },
    "3345": {
      "op": "SWAP2"
    },
    "3346": {
      "op": "POP"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3349": {
      "op": "DUP5"
    },
    "3350": {
      "op": "ADD"
    },
    "3351": {
      "op": "CALLDATALOAD"
    },
    "3352": {
      "op": "SWAP1"
    },
    "3353": {
      "op": "POP"
    },
    "3354": {
      "op": "SWAP3"
    },
    "3355": {
      "op": "POP"
    },
    "3356": {
      "op": "SWAP3"
    },
    "3357": {
      "op": "POP"
    },
    "3358": {
      "op": "SWAP3"
    },
    "3359": {
      "jump": "o",
      "op": "JUMP"
    },
    "3360": {
      "op": "JUMPDEST"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3365": {
      "op": "DUP3"
    },
    "3366": {
      "op": "DUP5"
    },
    "3367": {
      "op": "SUB"
    },
    "3368": {
      "op": "SLT"
    },
    "3369": {
      "op": "ISZERO"
    },
    "3370": {
      "op": "PUSH2",
      "value": "0xD32"
    },
    "3373": {
      "op": "JUMPI"
    },
    "3374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3376": {
      "op": "DUP1"
    },
    "3377": {
      "op": "REVERT"
    },
    "3378": {
      "op": "JUMPDEST"
    },
    "3379": {
      "op": "PUSH2",
      "value": "0x7F2"
    },
    "3382": {
      "op": "DUP3"
    },
    "3383": {
      "op": "PUSH2",
      "value": "0xC9E"
    },
    "3386": {
      "jump": "i",
      "op": "JUMP"
    },
    "3387": {
      "op": "JUMPDEST"
    },
    "3388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3390": {
      "op": "DUP1"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3393": {
      "op": "DUP4"
    },
    "3394": {
      "op": "DUP6"
    },
    "3395": {
      "op": "SUB"
    },
    "3396": {
      "op": "SLT"
    },
    "3397": {
      "op": "ISZERO"
    },
    "3398": {
      "op": "PUSH2",
      "value": "0xD4E"
    },
    "3401": {
      "op": "JUMPI"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3404": {
      "op": "DUP1"
    },
    "3405": {
      "op": "REVERT"
    },
    "3406": {
      "op": "JUMPDEST"
    },
    "3407": {
      "op": "PUSH2",
      "value": "0xD57"
    },
    "3410": {
      "op": "DUP4"
    },
    "3411": {
      "op": "PUSH2",
      "value": "0xC9E"
    },
    "3414": {
      "jump": "i",
      "op": "JUMP"
    },
    "3415": {
      "op": "JUMPDEST"
    },
    "3416": {
      "op": "SWAP2"
    },
    "3417": {
      "op": "POP"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3420": {
      "op": "DUP4"
    },
    "3421": {
      "op": "ADD"
    },
    "3422": {
      "op": "CALLDATALOAD"
    },
    "3423": {
      "op": "DUP1"
    },
    "3424": {
      "op": "ISZERO"
    },
    "3425": {
      "op": "ISZERO"
    },
    "3426": {
      "op": "DUP2"
    },
    "3427": {
      "op": "EQ"
    },
    "3428": {
      "op": "PUSH2",
      "value": "0xD6C"
    },
    "3431": {
      "op": "JUMPI"
    },
    "3432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3434": {
      "op": "DUP1"
    },
    "3435": {
      "op": "REVERT"
    },
    "3436": {
      "op": "JUMPDEST"
    },
    "3437": {
      "op": "DUP1"
    },
    "3438": {
      "op": "SWAP2"
    },
    "3439": {
      "op": "POP"
    },
    "3440": {
      "op": "POP"
    },
    "3441": {
      "op": "SWAP3"
    },
    "3442": {
      "op": "POP"
    },
    "3443": {
      "op": "SWAP3"
    },
    "3444": {
      "op": "SWAP1"
    },
    "3445": {
      "op": "POP"
    },
    "3446": {
      "jump": "o",
      "op": "JUMP"
    },
    "3447": {
      "op": "JUMPDEST"
    },
    "3448": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3455": {
      "op": "SHL"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3458": {
      "op": "MSTORE"
    },
    "3459": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3463": {
      "op": "MSTORE"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3468": {
      "op": "REVERT"
    },
    "3469": {
      "op": "JUMPDEST"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3472": {
      "op": "DUP1"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3475": {
      "op": "DUP1"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3478": {
      "op": "DUP6"
    },
    "3479": {
      "op": "DUP8"
    },
    "3480": {
      "op": "SUB"
    },
    "3481": {
      "op": "SLT"
    },
    "3482": {
      "op": "ISZERO"
    },
    "3483": {
      "op": "PUSH2",
      "value": "0xDA3"
    },
    "3486": {
      "op": "JUMPI"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3489": {
      "op": "DUP1"
    },
    "3490": {
      "op": "REVERT"
    },
    "3491": {
      "op": "JUMPDEST"
    },
    "3492": {
      "op": "PUSH2",
      "value": "0xDAC"
    },
    "3495": {
      "op": "DUP6"
    },
    "3496": {
      "op": "PUSH2",
      "value": "0xC9E"
    },
    "3499": {
      "jump": "i",
      "op": "JUMP"
    },
    "3500": {
      "op": "JUMPDEST"
    },
    "3501": {
      "op": "SWAP4"
    },
    "3502": {
      "op": "POP"
    },
    "3503": {
      "op": "PUSH2",
      "value": "0xDBA"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3508": {
      "op": "DUP7"
    },
    "3509": {
      "op": "ADD"
    },
    "3510": {
      "op": "PUSH2",
      "value": "0xC9E"
    },
    "3513": {
      "jump": "i",
      "op": "JUMP"
    },
    "3514": {
      "op": "JUMPDEST"
    },
    "3515": {
      "op": "SWAP3"
    },
    "3516": {
      "op": "POP"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3519": {
      "op": "DUP6"
    },
    "3520": {
      "op": "ADD"
    },
    "3521": {
      "op": "CALLDATALOAD"
    },
    "3522": {
      "op": "SWAP2"
    },
    "3523": {
      "op": "POP"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3526": {
      "op": "DUP6"
    },
    "3527": {
      "op": "ADD"
    },
    "3528": {
      "op": "CALLDATALOAD"
    },
    "3529": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3538": {
      "op": "DUP1"
    },
    "3539": {
      "op": "DUP3"
    },
    "3540": {
      "op": "GT"
    },
    "3541": {
      "op": "ISZERO"
    },
    "3542": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3545": {
      "op": "JUMPI"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3548": {
      "op": "DUP1"
    },
    "3549": {
      "op": "REVERT"
    },
    "3550": {
      "op": "JUMPDEST"
    },
    "3551": {
      "op": "DUP2"
    },
    "3552": {
      "op": "DUP8"
    },
    "3553": {
      "op": "ADD"
    },
    "3554": {
      "op": "SWAP2"
    },
    "3555": {
      "op": "POP"
    },
    "3556": {
      "op": "DUP8"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3559": {
      "op": "DUP4"
    },
    "3560": {
      "op": "ADD"
    },
    "3561": {
      "op": "SLT"
    },
    "3562": {
      "op": "PUSH2",
      "value": "0xDF2"
    },
    "3565": {
      "op": "JUMPI"
    },
    "3566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3568": {
      "op": "DUP1"
    },
    "3569": {
      "op": "REVERT"
    },
    "3570": {
      "op": "JUMPDEST"
    },
    "3571": {
      "op": "DUP2"
    },
    "3572": {
      "op": "CALLDATALOAD"
    },
    "3573": {
      "op": "DUP2"
    },
    "3574": {
      "op": "DUP2"
    },
    "3575": {
      "op": "GT"
    },
    "3576": {
      "op": "ISZERO"
    },
    "3577": {
      "op": "PUSH2",
      "value": "0xE04"
    },
    "3580": {
      "op": "JUMPI"
    },
    "3581": {
      "op": "PUSH2",
      "value": "0xE04"
    },
    "3584": {
      "op": "PUSH2",
      "value": "0xD77"
    },
    "3587": {
      "jump": "i",
      "op": "JUMP"
    },
    "3588": {
      "op": "JUMPDEST"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3591": {
      "op": "MLOAD"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3594": {
      "op": "DUP3"
    },
    "3595": {
      "op": "ADD"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3598": {
      "op": "NOT"
    },
    "3599": {
      "op": "SWAP1"
    },
    "3600": {
      "op": "DUP2"
    },
    "3601": {
      "op": "AND"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3604": {
      "op": "ADD"
    },
    "3605": {
      "op": "AND"
    },
    "3606": {
      "op": "DUP2"
    },
    "3607": {
      "op": "ADD"
    },
    "3608": {
      "op": "SWAP1"
    },
    "3609": {
      "op": "DUP4"
    },
    "3610": {
      "op": "DUP3"
    },
    "3611": {
      "op": "GT"
    },
    "3612": {
      "op": "DUP2"
    },
    "3613": {
      "op": "DUP4"
    },
    "3614": {
      "op": "LT"
    },
    "3615": {
      "op": "OR"
    },
    "3616": {
      "op": "ISZERO"
    },
    "3617": {
      "op": "PUSH2",
      "value": "0xE2C"
    },
    "3620": {
      "op": "JUMPI"
    },
    "3621": {
      "op": "PUSH2",
      "value": "0xE2C"
    },
    "3624": {
      "op": "PUSH2",
      "value": "0xD77"
    },
    "3627": {
      "jump": "i",
      "op": "JUMP"
    },
    "3628": {
      "op": "JUMPDEST"
    },
    "3629": {
      "op": "DUP2"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3632": {
      "op": "MSTORE"
    },
    "3633": {
      "op": "DUP3"
    },
    "3634": {
      "op": "DUP2"
    },
    "3635": {
      "op": "MSTORE"
    },
    "3636": {
      "op": "DUP11"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3639": {
      "op": "DUP5"
    },
    "3640": {
      "op": "DUP8"
    },
    "3641": {
      "op": "ADD"
    },
    "3642": {
      "op": "ADD"
    },
    "3643": {
      "op": "GT"
    },
    "3644": {
      "op": "ISZERO"
    },
    "3645": {
      "op": "PUSH2",
      "value": "0xE45"
    },
    "3648": {
      "op": "JUMPI"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3651": {
      "op": "DUP1"
    },
    "3652": {
      "op": "REVERT"
    },
    "3653": {
      "op": "JUMPDEST"
    },
    "3654": {
      "op": "DUP3"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3657": {
      "op": "DUP7"
    },
    "3658": {
      "op": "ADD"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3661": {
      "op": "DUP4"
    },
    "3662": {
      "op": "ADD"
    },
    "3663": {
      "op": "CALLDATACOPY"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3668": {
      "op": "DUP5"
    },
    "3669": {
      "op": "DUP4"
    },
    "3670": {
      "op": "ADD"
    },
    "3671": {
      "op": "ADD"
    },
    "3672": {
      "op": "MSTORE"
    },
    "3673": {
      "op": "DUP1"
    },
    "3674": {
      "op": "SWAP6"
    },
    "3675": {
      "op": "POP"
    },
    "3676": {
      "op": "POP"
    },
    "3677": {
      "op": "POP"
    },
    "3678": {
      "op": "POP"
    },
    "3679": {
      "op": "POP"
    },
    "3680": {
      "op": "POP"
    },
    "3681": {
      "op": "SWAP3"
    },
    "3682": {
      "op": "SWAP6"
    },
    "3683": {
      "op": "SWAP2"
    },
    "3684": {
      "op": "SWAP5"
    },
    "3685": {
      "op": "POP"
    },
    "3686": {
      "op": "SWAP3"
    },
    "3687": {
      "op": "POP"
    },
    "3688": {
      "jump": "o",
      "op": "JUMP"
    },
    "3689": {
      "op": "JUMPDEST"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3692": {
      "op": "DUP1"
    },
    "3693": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3695": {
      "op": "DUP4"
    },
    "3696": {
      "op": "DUP6"
    },
    "3697": {
      "op": "SUB"
    },
    "3698": {
      "op": "SLT"
    },
    "3699": {
      "op": "ISZERO"
    },
    "3700": {
      "op": "PUSH2",
      "value": "0xE7C"
    },
    "3703": {
      "op": "JUMPI"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3706": {
      "op": "DUP1"
    },
    "3707": {
      "op": "REVERT"
    },
    "3708": {
      "op": "JUMPDEST"
    },
    "3709": {
      "op": "PUSH2",
      "value": "0xE85"
    },
    "3712": {
      "op": "DUP4"
    },
    "3713": {
      "op": "PUSH2",
      "value": "0xC9E"
    },
    "3716": {
      "jump": "i",
      "op": "JUMP"
    },
    "3717": {
      "op": "JUMPDEST"
    },
    "3718": {
      "op": "SWAP2"
    },
    "3719": {
      "op": "POP"
    },
    "3720": {
      "op": "PUSH2",
      "value": "0xE93"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3725": {
      "op": "DUP5"
    },
    "3726": {
      "op": "ADD"
    },
    "3727": {
      "op": "PUSH2",
      "value": "0xC9E"
    },
    "3730": {
      "jump": "i",
      "op": "JUMP"
    },
    "3731": {
      "op": "JUMPDEST"
    },
    "3732": {
      "op": "SWAP1"
    },
    "3733": {
      "op": "POP"
    },
    "3734": {
      "op": "SWAP3"
    },
    "3735": {
      "op": "POP"
    },
    "3736": {
      "op": "SWAP3"
    },
    "3737": {
      "op": "SWAP1"
    },
    "3738": {
      "op": "POP"
    },
    "3739": {
      "jump": "o",
      "op": "JUMP"
    },
    "3740": {
      "op": "JUMPDEST"
    },
    "3741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3743": {
      "op": "DUP2"
    },
    "3744": {
      "op": "DUP2"
    },
    "3745": {
      "op": "SHR"
    },
    "3746": {
      "op": "SWAP1"
    },
    "3747": {
      "op": "DUP3"
    },
    "3748": {
      "op": "AND"
    },
    "3749": {
      "op": "DUP1"
    },
    "3750": {
      "op": "PUSH2",
      "value": "0xEB0"
    },
    "3753": {
      "op": "JUMPI"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3756": {
      "op": "DUP3"
    },
    "3757": {
      "op": "AND"
    },
    "3758": {
      "op": "SWAP2"
    },
    "3759": {
      "op": "POP"
    },
    "3760": {
      "op": "JUMPDEST"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3763": {
      "op": "DUP3"
    },
    "3764": {
      "op": "LT"
    },
    "3765": {
      "op": "DUP2"
    },
    "3766": {
      "op": "EQ"
    },
    "3767": {
      "op": "ISZERO"
    },
    "3768": {
      "op": "PUSH2",
      "value": "0xED1"
    },
    "3771": {
      "op": "JUMPI"
    },
    "3772": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3779": {
      "op": "SHL"
    },
    "3780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3782": {
      "op": "MSTORE"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3787": {
      "op": "MSTORE"
    },
    "3788": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3792": {
      "op": "REVERT"
    },
    "3793": {
      "op": "JUMPDEST"
    },
    "3794": {
      "op": "POP"
    },
    "3795": {
      "op": "SWAP2"
    },
    "3796": {
      "op": "SWAP1"
    },
    "3797": {
      "op": "POP"
    },
    "3798": {
      "jump": "o",
      "op": "JUMP"
    },
    "3799": {
      "op": "JUMPDEST"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3802": {
      "op": "DUP1"
    },
    "3803": {
      "op": "DUP3"
    },
    "3804": {
      "op": "MSTORE"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "3807": {
      "op": "SWAP1"
    },
    "3808": {
      "op": "DUP3"
    },
    "3809": {
      "op": "ADD"
    },
    "3810": {
      "op": "MSTORE"
    },
    "3811": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3846": {
      "op": "DUP3"
    },
    "3847": {
      "op": "ADD"
    },
    "3848": {
      "op": "MSTORE"
    },
    "3849": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "3867": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "3869": {
      "op": "SHL"
    },
    "3870": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3872": {
      "op": "DUP3"
    },
    "3873": {
      "op": "ADD"
    },
    "3874": {
      "op": "MSTORE"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3877": {
      "op": "ADD"
    },
    "3878": {
      "op": "SWAP1"
    },
    "3879": {
      "jump": "o",
      "op": "JUMP"
    },
    "3880": {
      "op": "JUMPDEST"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3883": {
      "op": "DUP4"
    },
    "3884": {
      "op": "MLOAD"
    },
    "3885": {
      "op": "PUSH2",
      "value": "0xF3A"
    },
    "3888": {
      "op": "DUP2"
    },
    "3889": {
      "op": "DUP5"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3892": {
      "op": "DUP9"
    },
    "3893": {
      "op": "ADD"
    },
    "3894": {
      "op": "PUSH2",
      "value": "0xC26"
    },
    "3897": {
      "jump": "i",
      "op": "JUMP"
    },
    "3898": {
      "op": "JUMPDEST"
    },
    "3899": {
      "op": "DUP4"
    },
    "3900": {
      "op": "MLOAD"
    },
    "3901": {
      "op": "SWAP1"
    },
    "3902": {
      "op": "DUP4"
    },
    "3903": {
      "op": "ADD"
    },
    "3904": {
      "op": "SWAP1"
    },
    "3905": {
      "op": "PUSH2",
      "value": "0xF4E"
    },
    "3908": {
      "op": "DUP2"
    },
    "3909": {
      "op": "DUP4"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3912": {
      "op": "DUP9"
    },
    "3913": {
      "op": "ADD"
    },
    "3914": {
      "op": "PUSH2",
      "value": "0xC26"
    },
    "3917": {
      "jump": "i",
      "op": "JUMP"
    },
    "3918": {
      "op": "JUMPDEST"
    },
    "3919": {
      "op": "ADD"
    },
    "3920": {
      "op": "SWAP5"
    },
    "3921": {
      "op": "SWAP4"
    },
    "3922": {
      "op": "POP"
    },
    "3923": {
      "op": "POP"
    },
    "3924": {
      "op": "POP"
    },
    "3925": {
      "op": "POP"
    },
    "3926": {
      "jump": "o",
      "op": "JUMP"
    },
    "3927": {
      "op": "JUMPDEST"
    },
    "3928": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3935": {
      "op": "SHL"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3938": {
      "op": "MSTORE"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3943": {
      "op": "MSTORE"
    },
    "3944": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3948": {
      "op": "REVERT"
    },
    "3949": {
      "op": "JUMPDEST"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3952": {
      "op": "DUP3"
    },
    "3953": {
      "op": "DUP3"
    },
    "3954": {
      "op": "LT"
    },
    "3955": {
      "op": "ISZERO"
    },
    "3956": {
      "op": "PUSH2",
      "value": "0xF7F"
    },
    "3959": {
      "op": "JUMPI"
    },
    "3960": {
      "op": "PUSH2",
      "value": "0xF7F"
    },
    "3963": {
      "op": "PUSH2",
      "value": "0xF57"
    },
    "3966": {
      "jump": "i",
      "op": "JUMP"
    },
    "3967": {
      "op": "JUMPDEST"
    },
    "3968": {
      "op": "POP"
    },
    "3969": {
      "op": "SUB"
    },
    "3970": {
      "op": "SWAP1"
    },
    "3971": {
      "jump": "o",
      "op": "JUMP"
    },
    "3972": {
      "op": "JUMPDEST"
    },
    "3973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3975": {
      "op": "DUP3"
    },
    "3976": {
      "op": "NOT"
    },
    "3977": {
      "op": "DUP3"
    },
    "3978": {
      "op": "GT"
    },
    "3979": {
      "op": "ISZERO"
    },
    "3980": {
      "op": "PUSH2",
      "value": "0xF97"
    },
    "3983": {
      "op": "JUMPI"
    },
    "3984": {
      "op": "PUSH2",
      "value": "0xF97"
    },
    "3987": {
      "op": "PUSH2",
      "value": "0xF57"
    },
    "3990": {
      "jump": "i",
      "op": "JUMP"
    },
    "3991": {
      "op": "JUMPDEST"
    },
    "3992": {
      "op": "POP"
    },
    "3993": {
      "op": "ADD"
    },
    "3994": {
      "op": "SWAP1"
    },
    "3995": {
      "jump": "o",
      "op": "JUMP"
    },
    "3996": {
      "op": "JUMPDEST"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4001": {
      "op": "NOT"
    },
    "4002": {
      "op": "DUP3"
    },
    "4003": {
      "op": "EQ"
    },
    "4004": {
      "op": "ISZERO"
    },
    "4005": {
      "op": "PUSH2",
      "value": "0xFB0"
    },
    "4008": {
      "op": "JUMPI"
    },
    "4009": {
      "op": "PUSH2",
      "value": "0xFB0"
    },
    "4012": {
      "op": "PUSH2",
      "value": "0xF57"
    },
    "4015": {
      "jump": "i",
      "op": "JUMP"
    },
    "4016": {
      "op": "JUMPDEST"
    },
    "4017": {
      "op": "POP"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4020": {
      "op": "ADD"
    },
    "4021": {
      "op": "SWAP1"
    },
    "4022": {
      "jump": "o",
      "op": "JUMP"
    },
    "4023": {
      "op": "JUMPDEST"
    },
    "4024": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4029": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4031": {
      "op": "SHL"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4034": {
      "op": "MSTORE"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4037": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4039": {
      "op": "MSTORE"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4044": {
      "op": "REVERT"
    },
    "4045": {
      "op": "JUMPDEST"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4048": {
      "op": "DUP3"
    },
    "4049": {
      "op": "PUSH2",
      "value": "0xFDC"
    },
    "4052": {
      "op": "JUMPI"
    },
    "4053": {
      "op": "PUSH2",
      "value": "0xFDC"
    },
    "4056": {
      "op": "PUSH2",
      "value": "0xFB7"
    },
    "4059": {
      "jump": "i",
      "op": "JUMP"
    },
    "4060": {
      "op": "JUMPDEST"
    },
    "4061": {
      "op": "POP"
    },
    "4062": {
      "op": "DIV"
    },
    "4063": {
      "op": "SWAP1"
    },
    "4064": {
      "jump": "o",
      "op": "JUMP"
    },
    "4065": {
      "op": "JUMPDEST"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4068": {
      "op": "DUP3"
    },
    "4069": {
      "op": "PUSH2",
      "value": "0xFF0"
    },
    "4072": {
      "op": "JUMPI"
    },
    "4073": {
      "op": "PUSH2",
      "value": "0xFF0"
    },
    "4076": {
      "op": "PUSH2",
      "value": "0xFB7"
    },
    "4079": {
      "jump": "i",
      "op": "JUMP"
    },
    "4080": {
      "op": "JUMPDEST"
    },
    "4081": {
      "op": "POP"
    },
    "4082": {
      "op": "MOD"
    },
    "4083": {
      "op": "SWAP1"
    },
    "4084": {
      "jump": "o",
      "op": "JUMP"
    },
    "4085": {
      "op": "JUMPDEST"
    },
    "4086": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4091": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4093": {
      "op": "SHL"
    },
    "4094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4096": {
      "op": "MSTORE"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4101": {
      "op": "MSTORE"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4106": {
      "op": "REVERT"
    }
  },
  "sha1": "b510873e1bea07ae2f570436925c2821e9fc56bd",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./IERC721Metadata.sol\";\nimport \"./Address.sol\";\nimport \"./Context.sol\";\nimport \"./Strings.sol\";\nimport \"./ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC165, IERC165)\n        returns (bool)\n    {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        require(\n            owner != address(0),\n            \"ERC721: balance query for the zero address\"\n        );\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (address)\n    {\n        address owner = _owners[tokenId];\n        require(\n            owner != address(0),\n            \"ERC721: owner query for nonexistent token\"\n        );\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (string memory)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721Metadata: URI query for nonexistent token\"\n        );\n\n        string memory baseURI = _baseURI();\n        return\n            bytes(baseURI).length > 0\n                ? string(abi.encodePacked(baseURI, tokenId.toString()))\n                : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (address)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721: approved query for nonexistent token\"\n        );\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved)\n        public\n        virtual\n        override\n    {\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator)\n        public\n        view\n        virtual\n        override\n        returns (bool)\n    {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(\n            _isApprovedOrOwner(_msgSender(), tokenId),\n            \"ERC721: transfer caller is not owner nor approved\"\n        );\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(\n            _isApprovedOrOwner(_msgSender(), tokenId),\n            \"ERC721: transfer caller is not owner nor approved\"\n        );\n        transferFrom(from, to, tokenId);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(\n            _checkOnERC721Received(from, to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId)\n        internal\n        view\n        virtual\n        returns (bool)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721: operator query for nonexistent token\"\n        );\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner ||\n            getApproved(tokenId) == spender ||\n            isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(\n            ERC721.ownerOf(tokenId) == from,\n            \"ERC721: transfer of token that is not own\"\n        );\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try\n                IERC721Receiver(to).onERC721Received(\n                    _msgSender(),\n                    from,\n                    tokenId,\n                    _data\n                )\n            returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\n                        \"ERC721: transfer to non ERC721Receiver implementer\"\n                    );\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n",
  "sourceMap": "489:13406:4:-:0;;;1251:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1317:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1340:17:4;;;;:7;;:17;;;;;:::i;:::-;;1251:113;;489:13406;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;489:13406:4;;;-1:-1:-1;489:13406:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:23;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:23;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:23;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:23:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:23;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;489:13406:4;;;;;;",
  "sourcePath": "contracts/ERC721.sol",
  "type": "contract"
}